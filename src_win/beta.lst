
beta.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000010a  00800200  00004038  000040cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004038  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000148  0080030a  0080030a  000041d6  2**0
                  ALLOC
  3 .debug_aranges 00000520  00000000  00000000  000041d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000f72  00000000  00000000  000046f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00014456  00000000  00000000  00005668  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00004ce3  00000000  00000000  00019abe  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00004971  00000000  00000000  0001e7a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000ae0  00000000  00000000  00023114  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00002512  00000000  00000000  00023bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000025e8  00000000  00000000  00026106  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  000286ee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 68 02 	jmp	0x4d0	; 0x4d0 <__dtors_end>
       4:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
       8:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
       c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      10:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      14:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      18:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      1c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      20:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      24:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      28:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      2c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      30:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      34:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      38:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      3c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      40:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      44:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      48:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      4c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      50:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      54:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      58:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      5c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      60:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      64:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      68:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      6c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      70:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      74:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      78:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      7c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      80:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      84:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      88:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      8c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      90:	0c 94 54 0e 	jmp	0x1ca8	; 0x1ca8 <__vector_36>
      94:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      98:	0c 94 7f 0e 	jmp	0x1cfe	; 0x1cfe <__vector_38>
      9c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      a0:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      a4:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      a8:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      ac:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      b0:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      b4:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      b8:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      bc:	0c 94 2b 0f 	jmp	0x1e56	; 0x1e56 <__vector_47>
      c0:	0c 94 64 1b 	jmp	0x36c8	; 0x36c8 <__vector_48>
      c4:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      c8:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      cc:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      d0:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      d4:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      d8:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      dc:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      e0:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>

000000e4 <__c.1778>:
      e4:	6e 61 6e 00                                         nan.

000000e8 <__c.1776>:
      e8:	69 6e 66 00                                         inf.

000000ec <marquee_list>:
      ec:	58 02                                               X.

000000ee <bank1_list>:
      ee:	80 02 96 02 ac 02                                   ......

000000f4 <__timer0Compare>:
      f4:	4d 03 00 6e 00 02 47 00 35 00 02 44 00 06 05 03     M..n..G.5..D....
     104:	51 03 00 6e 00 04 48 00 35 00 04 44 00 04 35 03     Q..n..H.5..D..5.

00000114 <__timer1Compare>:
     114:	55 03 01 6f 00 02 88 00 36 00 02 80 00 06 ff 02     U..o....6.......
     124:	59 03 01 6f 00 04 8a 00 36 00 04 80 00 04 02 03     Y..o....6.......
     134:	5d 03 01 6f 00 08 8c 00 36 00 08 80 00 02 05 03     ]..o....6.......

00000144 <__timer2Compare>:
     144:	61 03 02 70 00 02 b3 00 37 00 02 b0 00 06 fc 02     a..p....7.......
     154:	65 03 02 70 00 04 b4 00 37 00 04 b0 00 04 41 03     e..p....7.....A.

00000164 <__timer3Compare>:
     164:	69 03 03 71 00 02 98 00 38 00 02 90 00 06 29 03     i..q....8.....).
     174:	6d 03 03 71 00 04 9a 00 38 00 04 90 00 04 2c 03     m..q....8.....,.
     184:	71 03 03 71 00 08 9c 00 38 00 08 90 00 02 2f 03     q..q....8...../.

00000194 <__timer4Compare>:
     194:	75 03 04 72 00 02 a8 00 39 00 02 a0 00 06 38 03     u..r....9.....8.
     1a4:	79 03 04 72 00 04 aa 00 39 00 04 a0 00 04 3b 03     y..r....9.....;.
     1b4:	7d 03 04 72 00 08 ac 00 39 00 08 a0 00 02 3e 03     }..r....9.....>.

000001c4 <__timer5Compare>:
     1c4:	81 03 05 73 00 02 28 01 3a 00 02 20 01 06 4a 03     ...s..(.:.. ..J.
     1d4:	85 03 05 73 00 04 2a 01 3a 00 04 20 01 04 4d 03     ...s..*.:.. ..M.
     1e4:	89 03 05 73 00 08 2c 01 3a 00 08 20 01 02 50 03     ...s..,.:.. ..P.

000001f4 <pgm_Timers>:
     1f4:	8d 03 46 00 45 00 00 00 02 33 88 44 00 01 44 00     ..F.E....3.D..D.
     204:	02 45 00 08 00 00 01 f4 00 6e 00 01 35 00 01 00     .E.......n..5...
     214:	00 00 00 01 00 00 01 00 00 01 00 00 98 03 84 00     ................
     224:	81 00 ff 00 03 ff df 80 00 01 80 00 02 81 00 08     ................
     234:	81 00 10 14 01 6f 00 01 36 00 01 86 00 6f 00 20     .....o..6....o. 
     244:	36 00 20 81 00 40 00 00 a3 03 b2 00 b1 00 00 ff     6. ..@..........
     254:	02 33 88 b0 00 01 b0 00 02 b1 00 08 00 00 01 44     .3.............D
     264:	01 70 00 01 37 00 01 00 00 00 00 01 00 00 01 00     .p..7...........
     274:	00 01 00 00 ae 03 94 00 91 00 ff 00 03 ff df 90     ................
     284:	00 01 90 00 02 91 00 08 91 00 10 64 01 71 00 01     ...........d.q..
     294:	38 00 01 96 00 71 00 20 38 00 20 91 00 40 32 03     8....q. 8. ..@2.
     2a4:	b9 03 a4 00 a1 00 ff 00 03 ff df a0 00 01 a0 00     ................
     2b4:	02 a1 00 08 a1 00 10 94 01 72 00 01 39 00 01 a6     .........r..9...
     2c4:	00 72 00 20 39 00 20 a1 00 40 44 03 c4 03 24 01     .r. 9. ..@D...$.
     2d4:	21 01 ff 00 03 ff df 20 01 01 20 01 02 21 01 08     !...... .. ..!..
     2e4:	21 01 10 c4 01 73 00 01 3a 00 01 26 01 73 00 20     !....s..:..&.s. 
     2f4:	3a 00 20 21 01 40 47 03                             :. !.@G.

000002fc <_B4>:
     2fc:	55 03 10                                            U..

000002ff <_B5>:
     2ff:	55 03 20                                            U. 

00000302 <_B6>:
     302:	55 03 40                                            U.@

00000305 <_B7>:
     305:	55 03 80                                            U..

00000308 <_C0>:
     308:	5b 03 01                                            [..

0000030b <_C1>:
     30b:	5b 03 02                                            [..

0000030e <_C2>:
     30e:	5b 03 04                                            [..

00000311 <_C3>:
     311:	5b 03 08                                            [..

00000314 <_C4>:
     314:	5b 03 10                                            [..

00000317 <_C5>:
     317:	5b 03 20                                            [. 

0000031a <_D2>:
     31a:	61 03 04                                            a..

0000031d <_D3>:
     31d:	61 03 08                                            a..

00000320 <_D5>:
     320:	61 03 20                                            a. 

00000323 <_D6>:
     323:	61 03 40                                            a.@

00000326 <_D7>:
     326:	61 03 80                                            a..

00000329 <_E3>:
     329:	67 03 08                                            g..

0000032c <_E4>:
     32c:	67 03 10                                            g..

0000032f <_E5>:
     32f:	67 03 20                                            g. 

00000332 <_E7>:
     332:	67 03 80                                            g..

00000335 <_G5>:
     335:	6d 03 20                                            m. 

00000338 <_H3>:
     338:	73 03 08                                            s..

0000033b <_H4>:
     33b:	73 03 10                                            s..

0000033e <_H5>:
     33e:	73 03 20                                            s. 

00000341 <_H6>:
     341:	73 03 40                                            s.@

00000344 <_L0>:
     344:	79 03 01                                            y..

00000347 <_L1>:
     347:	79 03 02                                            y..

0000034a <_L3>:
     34a:	79 03 08                                            y..

0000034d <_L4>:
     34d:	79 03 10                                            y..

00000350 <_L5>:
     350:	79 03 20                                            y. 

00000353 <AVcc_MV>:
     353:	88 13                                               ..

00000355 <_PORTB>:
     355:	25 00 24 00 23 00                                   %.$.#.

0000035b <_PORTC>:
     35b:	28 00 27 00 26 00                                   (.'.&.

00000361 <_PORTD>:
     361:	2b 00 2a 00 29 00                                   +.*.).

00000367 <_PORTE>:
     367:	2e 00 2d 00 2c 00                                   ..-.,.

0000036d <_PORTG>:
     36d:	34 00 33 00 32 00                                   4.3.2.

00000373 <_PORTH>:
     373:	02 01 01 01 00 01                                   ......

00000379 <_PORTL>:
     379:	0b 01 0a 01 09 01                                   ......

0000037f <c_servoPWM>:
     37f:	3e 11 36 11                                         >.6.

00000383 <__c.1911>:
     383:	20 45 72 72 6f 72 3a 25 64 0d 0a 00                  Error:%d...

0000038f <__c.1909>:
     38f:	55 73 65 72 00                                      User.

00000394 <__c.1907>:
     394:	57 65 62 62 6f 74 4c 69 62 00                       WebbotLib.

0000039e <atoz>:
     39e:	ee 3e 9c 7a 9e 8e f6 2e 0c 78 ae 1c aa 2a 3a ce     .>.z.....x...*:.
     3ae:	e6 0a b6 1e 38 7c b8 6e 76 da                       ....8|.nv.

000003b8 <digits>:
     3b8:	fc 60 da f2 66 b6 3e e0 fe e6                       .`..f.>...

000003c2 <c_hw_uart>:
     3c2:	cd 17 83 18 9f 18 58 18 8a 18 6e 18 00 40 7a 10     ......X...n..@z.
     3d2:	f3 5a 00 a0 72 4e 18 09 00 10 a5 d4 e8 00 00 e8     .Z..rN..........
     3e2:	76 48 17 00 00 e4 0b 54 02 00 00 ca 9a 3b 00 00     vH.....T.....;..
     3f2:	00 e1 f5 05 00 00 80 96 98 00 00 00 40 42 0f 00     ............@B..
     402:	00 00 a0 86 01 00 00 00 10 27 00 00 00 00 e8 03     .........'......
     412:	00 00 00 00 64 00 00 00 00 00 0a 00 00 00 00 00     ....d...........
     422:	01 00 00 00 00 00 2c 76 d8 88 dc 67 4f 08 23 df     ......,v...gO.#.
     432:	c1 df ae 59 e1 b1 b7 96 e5 e3 e4 53 c6 3a e6 51     ...Y.......S.:.Q
     442:	99 76 96 e8 e6 c2 84 26 eb 89 8c 9b 62 ed 40 7c     .v.....&....b.@|
     452:	6f fc ef bc 9c 9f 40 f2 ba a5 6f a5 f4 90 05 5a     o.....@...o....Z
     462:	2a f7 5c 93 6b 6c f9 67 6d c1 1b fc e0 e4 0d 47     *.\.kl.gm......G
     472:	fe f5 20 e6 b5 00 d0 ed 90 2e 03 00 94 35 77 05     .. ..........5w.
     482:	00 80 84 1e 08 00 00 20 4e 0a 00 00 00 c8 0c 33     ....... N......3
     492:	33 33 33 0f 98 6e 12 83 11 41 ef 8d 21 14 89 3b     333..n...A..!..;
     4a2:	e6 55 16 cf fe e6 db 18 d1 84 4b 38 1b f7 7c 1d     .U........K8..|.
     4b2:	90 1d a4 bb e4 24 20 32 84 72 5e 22 81 00 c9 f1     .....$ 2.r^"....
     4c2:	24 ec a1 e5 3d 27                                   $...='

000004c8 <__ctors_start>:
     4c8:	89 06       	cpc	r8, r25
     4ca:	ba 0f       	add	r27, r26
     4cc:	bc 0f       	add	r27, r28

000004ce <__ctors_end>:
     4ce:	7c 06       	cpc	r7, r28

000004d0 <__dtors_end>:
     4d0:	11 24       	eor	r1, r1
     4d2:	1f be       	out	0x3f, r1	; 63
     4d4:	cf ef       	ldi	r28, 0xFF	; 255
     4d6:	d1 e2       	ldi	r29, 0x21	; 33
     4d8:	de bf       	out	0x3e, r29	; 62
     4da:	cd bf       	out	0x3d, r28	; 61

000004dc <__do_copy_data>:
     4dc:	13 e0       	ldi	r17, 0x03	; 3
     4de:	a0 e0       	ldi	r26, 0x00	; 0
     4e0:	b2 e0       	ldi	r27, 0x02	; 2
     4e2:	e8 e3       	ldi	r30, 0x38	; 56
     4e4:	f0 e4       	ldi	r31, 0x40	; 64
     4e6:	02 c0       	rjmp	.+4      	; 0x4ec <.do_copy_data_start>

000004e8 <.do_copy_data_loop>:
     4e8:	05 90       	lpm	r0, Z+
     4ea:	0d 92       	st	X+, r0

000004ec <.do_copy_data_start>:
     4ec:	aa 30       	cpi	r26, 0x0A	; 10
     4ee:	b1 07       	cpc	r27, r17
     4f0:	d9 f7       	brne	.-10     	; 0x4e8 <.do_copy_data_loop>

000004f2 <__do_clear_bss>:
     4f2:	14 e0       	ldi	r17, 0x04	; 4
     4f4:	aa e0       	ldi	r26, 0x0A	; 10
     4f6:	b3 e0       	ldi	r27, 0x03	; 3
     4f8:	01 c0       	rjmp	.+2      	; 0x4fc <.do_clear_bss_start>

000004fa <.do_clear_bss_loop>:
     4fa:	1d 92       	st	X+, r1

000004fc <.do_clear_bss_start>:
     4fc:	a2 35       	cpi	r26, 0x52	; 82
     4fe:	b1 07       	cpc	r27, r17
     500:	e1 f7       	brne	.-8      	; 0x4fa <.do_clear_bss_loop>

00000502 <__do_global_ctors>:
     502:	14 e0       	ldi	r17, 0x04	; 4
     504:	ce ec       	ldi	r28, 0xCE	; 206
     506:	d4 e0       	ldi	r29, 0x04	; 4
     508:	04 c0       	rjmp	.+8      	; 0x512 <.do_global_ctors_start>

0000050a <.do_global_ctors_loop>:
     50a:	22 97       	sbiw	r28, 0x02	; 2
     50c:	fe 01       	movw	r30, r28
     50e:	0e 94 0b 20 	call	0x4016	; 0x4016 <__tablejump__>

00000512 <.do_global_ctors_start>:
     512:	c8 3c       	cpi	r28, 0xC8	; 200
     514:	d1 07       	cpc	r29, r17
     516:	c9 f7       	brne	.-14     	; 0x50a <.do_global_ctors_loop>
     518:	0e 94 52 14 	call	0x28a4	; 0x28a4 <main>
     51c:	0c 94 26 1d 	jmp	0x3a4c	; 0x3a4c <exit>

00000520 <__bad_interrupt>:
     520:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000524 <vfprintf>:
     524:	a1 e1       	ldi	r26, 0x11	; 17
     526:	b0 e0       	ldi	r27, 0x00	; 0
     528:	e8 e9       	ldi	r30, 0x98	; 152
     52a:	f2 e0       	ldi	r31, 0x02	; 2
     52c:	0c 94 d2 1f 	jmp	0x3fa4	; 0x3fa4 <__prologue_saves__>
     530:	3c 01       	movw	r6, r24
     532:	7f 87       	std	Y+15, r23	; 0x0f
     534:	6e 87       	std	Y+14, r22	; 0x0e
     536:	6a 01       	movw	r12, r20
     538:	fc 01       	movw	r30, r24
     53a:	17 82       	std	Z+7, r1	; 0x07
     53c:	16 82       	std	Z+6, r1	; 0x06
     53e:	83 81       	ldd	r24, Z+3	; 0x03
     540:	81 fd       	sbrc	r24, 1
     542:	03 c0       	rjmp	.+6      	; 0x54a <vfprintf+0x26>
     544:	6f ef       	ldi	r22, 0xFF	; 255
     546:	7f ef       	ldi	r23, 0xFF	; 255
     548:	71 c3       	rjmp	.+1762   	; 0xc2c <vfprintf+0x708>
     54a:	9e 01       	movw	r18, r28
     54c:	2f 5f       	subi	r18, 0xFF	; 255
     54e:	3f 4f       	sbci	r19, 0xFF	; 255
     550:	39 8b       	std	Y+17, r19	; 0x11
     552:	28 8b       	std	Y+16, r18	; 0x10
     554:	f3 01       	movw	r30, r6
     556:	23 81       	ldd	r18, Z+3	; 0x03
     558:	ee 85       	ldd	r30, Y+14	; 0x0e
     55a:	ff 85       	ldd	r31, Y+15	; 0x0f
     55c:	23 fd       	sbrc	r18, 3
     55e:	85 91       	lpm	r24, Z+
     560:	23 ff       	sbrs	r18, 3
     562:	81 91       	ld	r24, Z+
     564:	ff 87       	std	Y+15, r31	; 0x0f
     566:	ee 87       	std	Y+14, r30	; 0x0e
     568:	88 23       	and	r24, r24
     56a:	09 f4       	brne	.+2      	; 0x56e <vfprintf+0x4a>
     56c:	5c c3       	rjmp	.+1720   	; 0xc26 <vfprintf+0x702>
     56e:	85 32       	cpi	r24, 0x25	; 37
     570:	51 f4       	brne	.+20     	; 0x586 <vfprintf+0x62>
     572:	ee 85       	ldd	r30, Y+14	; 0x0e
     574:	ff 85       	ldd	r31, Y+15	; 0x0f
     576:	23 fd       	sbrc	r18, 3
     578:	85 91       	lpm	r24, Z+
     57a:	23 ff       	sbrs	r18, 3
     57c:	81 91       	ld	r24, Z+
     57e:	ff 87       	std	Y+15, r31	; 0x0f
     580:	ee 87       	std	Y+14, r30	; 0x0e
     582:	85 32       	cpi	r24, 0x25	; 37
     584:	29 f4       	brne	.+10     	; 0x590 <vfprintf+0x6c>
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	b3 01       	movw	r22, r6
     58a:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     58e:	e2 cf       	rjmp	.-60     	; 0x554 <vfprintf+0x30>
     590:	98 2f       	mov	r25, r24
     592:	10 e0       	ldi	r17, 0x00	; 0
     594:	88 24       	eor	r8, r8
     596:	99 24       	eor	r9, r9
     598:	10 32       	cpi	r17, 0x20	; 32
     59a:	b0 f4       	brcc	.+44     	; 0x5c8 <vfprintf+0xa4>
     59c:	9b 32       	cpi	r25, 0x2B	; 43
     59e:	69 f0       	breq	.+26     	; 0x5ba <vfprintf+0x96>
     5a0:	9c 32       	cpi	r25, 0x2C	; 44
     5a2:	28 f4       	brcc	.+10     	; 0x5ae <vfprintf+0x8a>
     5a4:	90 32       	cpi	r25, 0x20	; 32
     5a6:	51 f0       	breq	.+20     	; 0x5bc <vfprintf+0x98>
     5a8:	93 32       	cpi	r25, 0x23	; 35
     5aa:	71 f4       	brne	.+28     	; 0x5c8 <vfprintf+0xa4>
     5ac:	0b c0       	rjmp	.+22     	; 0x5c4 <vfprintf+0xa0>
     5ae:	9d 32       	cpi	r25, 0x2D	; 45
     5b0:	39 f0       	breq	.+14     	; 0x5c0 <vfprintf+0x9c>
     5b2:	90 33       	cpi	r25, 0x30	; 48
     5b4:	49 f4       	brne	.+18     	; 0x5c8 <vfprintf+0xa4>
     5b6:	11 60       	ori	r17, 0x01	; 1
     5b8:	28 c0       	rjmp	.+80     	; 0x60a <vfprintf+0xe6>
     5ba:	12 60       	ori	r17, 0x02	; 2
     5bc:	14 60       	ori	r17, 0x04	; 4
     5be:	25 c0       	rjmp	.+74     	; 0x60a <vfprintf+0xe6>
     5c0:	18 60       	ori	r17, 0x08	; 8
     5c2:	23 c0       	rjmp	.+70     	; 0x60a <vfprintf+0xe6>
     5c4:	10 61       	ori	r17, 0x10	; 16
     5c6:	21 c0       	rjmp	.+66     	; 0x60a <vfprintf+0xe6>
     5c8:	17 fd       	sbrc	r17, 7
     5ca:	2a c0       	rjmp	.+84     	; 0x620 <vfprintf+0xfc>
     5cc:	89 2f       	mov	r24, r25
     5ce:	80 53       	subi	r24, 0x30	; 48
     5d0:	8a 30       	cpi	r24, 0x0A	; 10
     5d2:	78 f4       	brcc	.+30     	; 0x5f2 <vfprintf+0xce>
     5d4:	16 ff       	sbrs	r17, 6
     5d6:	06 c0       	rjmp	.+12     	; 0x5e4 <vfprintf+0xc0>
     5d8:	fa e0       	ldi	r31, 0x0A	; 10
     5da:	9f 9e       	mul	r9, r31
     5dc:	90 2c       	mov	r9, r0
     5de:	11 24       	eor	r1, r1
     5e0:	98 0e       	add	r9, r24
     5e2:	13 c0       	rjmp	.+38     	; 0x60a <vfprintf+0xe6>
     5e4:	3a e0       	ldi	r19, 0x0A	; 10
     5e6:	83 9e       	mul	r8, r19
     5e8:	80 2c       	mov	r8, r0
     5ea:	11 24       	eor	r1, r1
     5ec:	88 0e       	add	r8, r24
     5ee:	10 62       	ori	r17, 0x20	; 32
     5f0:	0c c0       	rjmp	.+24     	; 0x60a <vfprintf+0xe6>
     5f2:	9e 32       	cpi	r25, 0x2E	; 46
     5f4:	21 f4       	brne	.+8      	; 0x5fe <vfprintf+0xda>
     5f6:	16 fd       	sbrc	r17, 6
     5f8:	16 c3       	rjmp	.+1580   	; 0xc26 <vfprintf+0x702>
     5fa:	10 64       	ori	r17, 0x40	; 64
     5fc:	06 c0       	rjmp	.+12     	; 0x60a <vfprintf+0xe6>
     5fe:	9c 36       	cpi	r25, 0x6C	; 108
     600:	11 f4       	brne	.+4      	; 0x606 <vfprintf+0xe2>
     602:	10 68       	ori	r17, 0x80	; 128
     604:	02 c0       	rjmp	.+4      	; 0x60a <vfprintf+0xe6>
     606:	98 36       	cpi	r25, 0x68	; 104
     608:	59 f4       	brne	.+22     	; 0x620 <vfprintf+0xfc>
     60a:	ee 85       	ldd	r30, Y+14	; 0x0e
     60c:	ff 85       	ldd	r31, Y+15	; 0x0f
     60e:	23 fd       	sbrc	r18, 3
     610:	95 91       	lpm	r25, Z+
     612:	23 ff       	sbrs	r18, 3
     614:	91 91       	ld	r25, Z+
     616:	ff 87       	std	Y+15, r31	; 0x0f
     618:	ee 87       	std	Y+14, r30	; 0x0e
     61a:	99 23       	and	r25, r25
     61c:	09 f0       	breq	.+2      	; 0x620 <vfprintf+0xfc>
     61e:	bc cf       	rjmp	.-136    	; 0x598 <vfprintf+0x74>
     620:	89 2f       	mov	r24, r25
     622:	85 54       	subi	r24, 0x45	; 69
     624:	83 30       	cpi	r24, 0x03	; 3
     626:	20 f4       	brcc	.+8      	; 0x630 <vfprintf+0x10c>
     628:	81 2f       	mov	r24, r17
     62a:	80 61       	ori	r24, 0x10	; 16
     62c:	90 5e       	subi	r25, 0xE0	; 224
     62e:	07 c0       	rjmp	.+14     	; 0x63e <vfprintf+0x11a>
     630:	89 2f       	mov	r24, r25
     632:	85 56       	subi	r24, 0x65	; 101
     634:	83 30       	cpi	r24, 0x03	; 3
     636:	08 f0       	brcs	.+2      	; 0x63a <vfprintf+0x116>
     638:	a1 c1       	rjmp	.+834    	; 0x97c <vfprintf+0x458>
     63a:	81 2f       	mov	r24, r17
     63c:	8f 7e       	andi	r24, 0xEF	; 239
     63e:	86 fd       	sbrc	r24, 6
     640:	02 c0       	rjmp	.+4      	; 0x646 <vfprintf+0x122>
     642:	76 e0       	ldi	r23, 0x06	; 6
     644:	97 2e       	mov	r9, r23
     646:	6f e3       	ldi	r22, 0x3F	; 63
     648:	f6 2e       	mov	r15, r22
     64a:	f8 22       	and	r15, r24
     64c:	95 36       	cpi	r25, 0x65	; 101
     64e:	19 f4       	brne	.+6      	; 0x656 <vfprintf+0x132>
     650:	f0 e4       	ldi	r31, 0x40	; 64
     652:	ff 2a       	or	r15, r31
     654:	07 c0       	rjmp	.+14     	; 0x664 <vfprintf+0x140>
     656:	96 36       	cpi	r25, 0x66	; 102
     658:	19 f4       	brne	.+6      	; 0x660 <vfprintf+0x13c>
     65a:	20 e8       	ldi	r18, 0x80	; 128
     65c:	f2 2a       	or	r15, r18
     65e:	02 c0       	rjmp	.+4      	; 0x664 <vfprintf+0x140>
     660:	91 10       	cpse	r9, r1
     662:	9a 94       	dec	r9
     664:	f7 fe       	sbrs	r15, 7
     666:	0b c0       	rjmp	.+22     	; 0x67e <vfprintf+0x15a>
     668:	3b e3       	ldi	r19, 0x3B	; 59
     66a:	39 15       	cp	r19, r9
     66c:	20 f4       	brcc	.+8      	; 0x676 <vfprintf+0x152>
     66e:	27 e0       	ldi	r18, 0x07	; 7
     670:	5c e3       	ldi	r21, 0x3C	; 60
     672:	b5 2e       	mov	r11, r21
     674:	0e c0       	rjmp	.+28     	; 0x692 <vfprintf+0x16e>
     676:	b9 2c       	mov	r11, r9
     678:	b3 94       	inc	r11
     67a:	27 e0       	ldi	r18, 0x07	; 7
     67c:	0a c0       	rjmp	.+20     	; 0x692 <vfprintf+0x16e>
     67e:	47 e0       	ldi	r20, 0x07	; 7
     680:	49 15       	cp	r20, r9
     682:	28 f4       	brcc	.+10     	; 0x68e <vfprintf+0x16a>
     684:	27 e0       	ldi	r18, 0x07	; 7
     686:	bb 24       	eor	r11, r11
     688:	47 e0       	ldi	r20, 0x07	; 7
     68a:	94 2e       	mov	r9, r20
     68c:	02 c0       	rjmp	.+4      	; 0x692 <vfprintf+0x16e>
     68e:	29 2d       	mov	r18, r9
     690:	bb 24       	eor	r11, r11
     692:	c6 01       	movw	r24, r12
     694:	04 96       	adiw	r24, 0x04	; 4
     696:	9d 87       	std	Y+13, r25	; 0x0d
     698:	8c 87       	std	Y+12, r24	; 0x0c
     69a:	f6 01       	movw	r30, r12
     69c:	60 81       	ld	r22, Z
     69e:	71 81       	ldd	r23, Z+1	; 0x01
     6a0:	82 81       	ldd	r24, Z+2	; 0x02
     6a2:	93 81       	ldd	r25, Z+3	; 0x03
     6a4:	ae 01       	movw	r20, r28
     6a6:	4f 5f       	subi	r20, 0xFF	; 255
     6a8:	5f 4f       	sbci	r21, 0xFF	; 255
     6aa:	0b 2d       	mov	r16, r11
     6ac:	0e 94 29 1d 	call	0x3a52	; 0x3a52 <__ftoa_engine>
     6b0:	6c 01       	movw	r12, r24
     6b2:	09 81       	ldd	r16, Y+1	; 0x01
     6b4:	20 2e       	mov	r2, r16
     6b6:	33 24       	eor	r3, r3
     6b8:	00 ff       	sbrs	r16, 0
     6ba:	04 c0       	rjmp	.+8      	; 0x6c4 <vfprintf+0x1a0>
     6bc:	03 fd       	sbrc	r16, 3
     6be:	02 c0       	rjmp	.+4      	; 0x6c4 <vfprintf+0x1a0>
     6c0:	1d e2       	ldi	r17, 0x2D	; 45
     6c2:	09 c0       	rjmp	.+18     	; 0x6d6 <vfprintf+0x1b2>
     6c4:	f1 fe       	sbrs	r15, 1
     6c6:	02 c0       	rjmp	.+4      	; 0x6cc <vfprintf+0x1a8>
     6c8:	1b e2       	ldi	r17, 0x2B	; 43
     6ca:	05 c0       	rjmp	.+10     	; 0x6d6 <vfprintf+0x1b2>
     6cc:	f2 fc       	sbrc	r15, 2
     6ce:	02 c0       	rjmp	.+4      	; 0x6d4 <vfprintf+0x1b0>
     6d0:	10 e0       	ldi	r17, 0x00	; 0
     6d2:	01 c0       	rjmp	.+2      	; 0x6d6 <vfprintf+0x1b2>
     6d4:	10 e2       	ldi	r17, 0x20	; 32
     6d6:	c1 01       	movw	r24, r2
     6d8:	8c 70       	andi	r24, 0x0C	; 12
     6da:	90 70       	andi	r25, 0x00	; 0
     6dc:	89 2b       	or	r24, r25
     6de:	b9 f1       	breq	.+110    	; 0x74e <vfprintf+0x22a>
     6e0:	11 23       	and	r17, r17
     6e2:	11 f4       	brne	.+4      	; 0x6e8 <vfprintf+0x1c4>
     6e4:	83 e0       	ldi	r24, 0x03	; 3
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <vfprintf+0x1c6>
     6e8:	84 e0       	ldi	r24, 0x04	; 4
     6ea:	88 15       	cp	r24, r8
     6ec:	10 f0       	brcs	.+4      	; 0x6f2 <vfprintf+0x1ce>
     6ee:	88 24       	eor	r8, r8
     6f0:	0a c0       	rjmp	.+20     	; 0x706 <vfprintf+0x1e2>
     6f2:	88 1a       	sub	r8, r24
     6f4:	f3 fc       	sbrc	r15, 3
     6f6:	07 c0       	rjmp	.+14     	; 0x706 <vfprintf+0x1e2>
     6f8:	80 e2       	ldi	r24, 0x20	; 32
     6fa:	90 e0       	ldi	r25, 0x00	; 0
     6fc:	b3 01       	movw	r22, r6
     6fe:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     702:	8a 94       	dec	r8
     704:	c9 f7       	brne	.-14     	; 0x6f8 <vfprintf+0x1d4>
     706:	11 23       	and	r17, r17
     708:	29 f0       	breq	.+10     	; 0x714 <vfprintf+0x1f0>
     70a:	81 2f       	mov	r24, r17
     70c:	90 e0       	ldi	r25, 0x00	; 0
     70e:	b3 01       	movw	r22, r6
     710:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     714:	23 fe       	sbrs	r2, 3
     716:	03 c0       	rjmp	.+6      	; 0x71e <vfprintf+0x1fa>
     718:	04 ee       	ldi	r16, 0xE4	; 228
     71a:	10 e0       	ldi	r17, 0x00	; 0
     71c:	0e c0       	rjmp	.+28     	; 0x73a <vfprintf+0x216>
     71e:	08 ee       	ldi	r16, 0xE8	; 232
     720:	10 e0       	ldi	r17, 0x00	; 0
     722:	0b c0       	rjmp	.+22     	; 0x73a <vfprintf+0x216>
     724:	e1 14       	cp	r14, r1
     726:	f1 04       	cpc	r15, r1
     728:	09 f0       	breq	.+2      	; 0x72c <vfprintf+0x208>
     72a:	80 52       	subi	r24, 0x20	; 32
     72c:	90 e0       	ldi	r25, 0x00	; 0
     72e:	b3 01       	movw	r22, r6
     730:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     734:	0f 5f       	subi	r16, 0xFF	; 255
     736:	1f 4f       	sbci	r17, 0xFF	; 255
     738:	05 c0       	rjmp	.+10     	; 0x744 <vfprintf+0x220>
     73a:	ef 2c       	mov	r14, r15
     73c:	ff 24       	eor	r15, r15
     73e:	f0 e1       	ldi	r31, 0x10	; 16
     740:	ef 22       	and	r14, r31
     742:	ff 24       	eor	r15, r15
     744:	f8 01       	movw	r30, r16
     746:	84 91       	lpm	r24, Z+
     748:	88 23       	and	r24, r24
     74a:	61 f7       	brne	.-40     	; 0x724 <vfprintf+0x200>
     74c:	14 c1       	rjmp	.+552    	; 0x976 <vfprintf+0x452>
     74e:	f7 fe       	sbrs	r15, 7
     750:	12 c0       	rjmp	.+36     	; 0x776 <vfprintf+0x252>
     752:	bc 0c       	add	r11, r12
     754:	24 fe       	sbrs	r2, 4
     756:	04 c0       	rjmp	.+8      	; 0x760 <vfprintf+0x23c>
     758:	8a 81       	ldd	r24, Y+2	; 0x02
     75a:	81 33       	cpi	r24, 0x31	; 49
     75c:	09 f4       	brne	.+2      	; 0x760 <vfprintf+0x23c>
     75e:	ba 94       	dec	r11
     760:	1b 14       	cp	r1, r11
     762:	1c f0       	brlt	.+6      	; 0x76a <vfprintf+0x246>
     764:	bb 24       	eor	r11, r11
     766:	b3 94       	inc	r11
     768:	2d c0       	rjmp	.+90     	; 0x7c4 <vfprintf+0x2a0>
     76a:	f8 e0       	ldi	r31, 0x08	; 8
     76c:	fb 15       	cp	r31, r11
     76e:	50 f5       	brcc	.+84     	; 0x7c4 <vfprintf+0x2a0>
     770:	38 e0       	ldi	r19, 0x08	; 8
     772:	b3 2e       	mov	r11, r19
     774:	27 c0       	rjmp	.+78     	; 0x7c4 <vfprintf+0x2a0>
     776:	f6 fc       	sbrc	r15, 6
     778:	25 c0       	rjmp	.+74     	; 0x7c4 <vfprintf+0x2a0>
     77a:	89 2d       	mov	r24, r9
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	8c 15       	cp	r24, r12
     780:	9d 05       	cpc	r25, r13
     782:	4c f0       	brlt	.+18     	; 0x796 <vfprintf+0x272>
     784:	2c ef       	ldi	r18, 0xFC	; 252
     786:	c2 16       	cp	r12, r18
     788:	2f ef       	ldi	r18, 0xFF	; 255
     78a:	d2 06       	cpc	r13, r18
     78c:	24 f0       	brlt	.+8      	; 0x796 <vfprintf+0x272>
     78e:	30 e8       	ldi	r19, 0x80	; 128
     790:	f3 2a       	or	r15, r19
     792:	01 c0       	rjmp	.+2      	; 0x796 <vfprintf+0x272>
     794:	9a 94       	dec	r9
     796:	99 20       	and	r9, r9
     798:	49 f0       	breq	.+18     	; 0x7ac <vfprintf+0x288>
     79a:	e2 e0       	ldi	r30, 0x02	; 2
     79c:	f0 e0       	ldi	r31, 0x00	; 0
     79e:	ec 0f       	add	r30, r28
     7a0:	fd 1f       	adc	r31, r29
     7a2:	e9 0d       	add	r30, r9
     7a4:	f1 1d       	adc	r31, r1
     7a6:	80 81       	ld	r24, Z
     7a8:	80 33       	cpi	r24, 0x30	; 48
     7aa:	a1 f3       	breq	.-24     	; 0x794 <vfprintf+0x270>
     7ac:	f7 fe       	sbrs	r15, 7
     7ae:	0a c0       	rjmp	.+20     	; 0x7c4 <vfprintf+0x2a0>
     7b0:	b9 2c       	mov	r11, r9
     7b2:	b3 94       	inc	r11
     7b4:	89 2d       	mov	r24, r9
     7b6:	90 e0       	ldi	r25, 0x00	; 0
     7b8:	c8 16       	cp	r12, r24
     7ba:	d9 06       	cpc	r13, r25
     7bc:	14 f0       	brlt	.+4      	; 0x7c2 <vfprintf+0x29e>
     7be:	99 24       	eor	r9, r9
     7c0:	01 c0       	rjmp	.+2      	; 0x7c4 <vfprintf+0x2a0>
     7c2:	9c 18       	sub	r9, r12
     7c4:	f7 fc       	sbrc	r15, 7
     7c6:	03 c0       	rjmp	.+6      	; 0x7ce <vfprintf+0x2aa>
     7c8:	25 e0       	ldi	r18, 0x05	; 5
     7ca:	30 e0       	ldi	r19, 0x00	; 0
     7cc:	09 c0       	rjmp	.+18     	; 0x7e0 <vfprintf+0x2bc>
     7ce:	1c 14       	cp	r1, r12
     7d0:	1d 04       	cpc	r1, r13
     7d2:	1c f0       	brlt	.+6      	; 0x7da <vfprintf+0x2b6>
     7d4:	21 e0       	ldi	r18, 0x01	; 1
     7d6:	30 e0       	ldi	r19, 0x00	; 0
     7d8:	03 c0       	rjmp	.+6      	; 0x7e0 <vfprintf+0x2bc>
     7da:	96 01       	movw	r18, r12
     7dc:	2f 5f       	subi	r18, 0xFF	; 255
     7de:	3f 4f       	sbci	r19, 0xFF	; 255
     7e0:	11 23       	and	r17, r17
     7e2:	11 f0       	breq	.+4      	; 0x7e8 <vfprintf+0x2c4>
     7e4:	2f 5f       	subi	r18, 0xFF	; 255
     7e6:	3f 4f       	sbci	r19, 0xFF	; 255
     7e8:	99 20       	and	r9, r9
     7ea:	29 f0       	breq	.+10     	; 0x7f6 <vfprintf+0x2d2>
     7ec:	89 2d       	mov	r24, r9
     7ee:	90 e0       	ldi	r25, 0x00	; 0
     7f0:	01 96       	adiw	r24, 0x01	; 1
     7f2:	28 0f       	add	r18, r24
     7f4:	39 1f       	adc	r19, r25
     7f6:	88 2d       	mov	r24, r8
     7f8:	90 e0       	ldi	r25, 0x00	; 0
     7fa:	28 17       	cp	r18, r24
     7fc:	39 07       	cpc	r19, r25
     7fe:	14 f0       	brlt	.+4      	; 0x804 <vfprintf+0x2e0>
     800:	88 24       	eor	r8, r8
     802:	01 c0       	rjmp	.+2      	; 0x806 <vfprintf+0x2e2>
     804:	82 1a       	sub	r8, r18
     806:	4f 2c       	mov	r4, r15
     808:	55 24       	eor	r5, r5
     80a:	c2 01       	movw	r24, r4
     80c:	89 70       	andi	r24, 0x09	; 9
     80e:	90 70       	andi	r25, 0x00	; 0
     810:	89 2b       	or	r24, r25
     812:	39 f0       	breq	.+14     	; 0x822 <vfprintf+0x2fe>
     814:	08 c0       	rjmp	.+16     	; 0x826 <vfprintf+0x302>
     816:	80 e2       	ldi	r24, 0x20	; 32
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	b3 01       	movw	r22, r6
     81c:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     820:	8a 94       	dec	r8
     822:	88 20       	and	r8, r8
     824:	c1 f7       	brne	.-16     	; 0x816 <vfprintf+0x2f2>
     826:	11 23       	and	r17, r17
     828:	29 f0       	breq	.+10     	; 0x834 <vfprintf+0x310>
     82a:	81 2f       	mov	r24, r17
     82c:	90 e0       	ldi	r25, 0x00	; 0
     82e:	b3 01       	movw	r22, r6
     830:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     834:	43 fe       	sbrs	r4, 3
     836:	07 c0       	rjmp	.+14     	; 0x846 <vfprintf+0x322>
     838:	08 c0       	rjmp	.+16     	; 0x84a <vfprintf+0x326>
     83a:	80 e3       	ldi	r24, 0x30	; 48
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	b3 01       	movw	r22, r6
     840:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     844:	8a 94       	dec	r8
     846:	88 20       	and	r8, r8
     848:	c1 f7       	brne	.-16     	; 0x83a <vfprintf+0x316>
     84a:	f7 fe       	sbrs	r15, 7
     84c:	46 c0       	rjmp	.+140    	; 0x8da <vfprintf+0x3b6>
     84e:	86 01       	movw	r16, r12
     850:	d7 fe       	sbrs	r13, 7
     852:	02 c0       	rjmp	.+4      	; 0x858 <vfprintf+0x334>
     854:	00 e0       	ldi	r16, 0x00	; 0
     856:	10 e0       	ldi	r17, 0x00	; 0
     858:	76 01       	movw	r14, r12
     85a:	08 94       	sec
     85c:	e1 1c       	adc	r14, r1
     85e:	f1 1c       	adc	r15, r1
     860:	e0 1a       	sub	r14, r16
     862:	f1 0a       	sbc	r15, r17
     864:	41 e0       	ldi	r20, 0x01	; 1
     866:	50 e0       	ldi	r21, 0x00	; 0
     868:	4c 0f       	add	r20, r28
     86a:	5d 1f       	adc	r21, r29
     86c:	e4 0e       	add	r14, r20
     86e:	f5 1e       	adc	r15, r21
     870:	26 01       	movw	r4, r12
     872:	4b 18       	sub	r4, r11
     874:	51 08       	sbc	r5, r1
     876:	89 2d       	mov	r24, r9
     878:	90 e0       	ldi	r25, 0x00	; 0
     87a:	aa 24       	eor	r10, r10
     87c:	bb 24       	eor	r11, r11
     87e:	a8 1a       	sub	r10, r24
     880:	b9 0a       	sbc	r11, r25
     882:	5f ef       	ldi	r21, 0xFF	; 255
     884:	0f 3f       	cpi	r16, 0xFF	; 255
     886:	15 07       	cpc	r17, r21
     888:	29 f4       	brne	.+10     	; 0x894 <vfprintf+0x370>
     88a:	8e e2       	ldi	r24, 0x2E	; 46
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	b3 01       	movw	r22, r6
     890:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     894:	c0 16       	cp	r12, r16
     896:	d1 06       	cpc	r13, r17
     898:	34 f0       	brlt	.+12     	; 0x8a6 <vfprintf+0x382>
     89a:	40 16       	cp	r4, r16
     89c:	51 06       	cpc	r5, r17
     89e:	1c f4       	brge	.+6      	; 0x8a6 <vfprintf+0x382>
     8a0:	f7 01       	movw	r30, r14
     8a2:	80 81       	ld	r24, Z
     8a4:	01 c0       	rjmp	.+2      	; 0x8a8 <vfprintf+0x384>
     8a6:	80 e3       	ldi	r24, 0x30	; 48
     8a8:	01 50       	subi	r16, 0x01	; 1
     8aa:	10 40       	sbci	r17, 0x00	; 0
     8ac:	08 94       	sec
     8ae:	e1 1c       	adc	r14, r1
     8b0:	f1 1c       	adc	r15, r1
     8b2:	0a 15       	cp	r16, r10
     8b4:	1b 05       	cpc	r17, r11
     8b6:	2c f0       	brlt	.+10     	; 0x8c2 <vfprintf+0x39e>
     8b8:	90 e0       	ldi	r25, 0x00	; 0
     8ba:	b3 01       	movw	r22, r6
     8bc:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     8c0:	e0 cf       	rjmp	.-64     	; 0x882 <vfprintf+0x35e>
     8c2:	0c 15       	cp	r16, r12
     8c4:	1d 05       	cpc	r17, r13
     8c6:	39 f4       	brne	.+14     	; 0x8d6 <vfprintf+0x3b2>
     8c8:	9a 81       	ldd	r25, Y+2	; 0x02
     8ca:	96 33       	cpi	r25, 0x36	; 54
     8cc:	18 f4       	brcc	.+6      	; 0x8d4 <vfprintf+0x3b0>
     8ce:	95 33       	cpi	r25, 0x35	; 53
     8d0:	11 f4       	brne	.+4      	; 0x8d6 <vfprintf+0x3b2>
     8d2:	24 fe       	sbrs	r2, 4
     8d4:	81 e3       	ldi	r24, 0x31	; 49
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	4b c0       	rjmp	.+150    	; 0x970 <vfprintf+0x44c>
     8da:	8a 81       	ldd	r24, Y+2	; 0x02
     8dc:	81 33       	cpi	r24, 0x31	; 49
     8de:	09 f0       	breq	.+2      	; 0x8e2 <vfprintf+0x3be>
     8e0:	0f 7e       	andi	r16, 0xEF	; 239
     8e2:	90 e0       	ldi	r25, 0x00	; 0
     8e4:	b3 01       	movw	r22, r6
     8e6:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     8ea:	99 20       	and	r9, r9
     8ec:	a1 f0       	breq	.+40     	; 0x916 <vfprintf+0x3f2>
     8ee:	8e e2       	ldi	r24, 0x2E	; 46
     8f0:	90 e0       	ldi	r25, 0x00	; 0
     8f2:	b3 01       	movw	r22, r6
     8f4:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     8f8:	12 e0       	ldi	r17, 0x02	; 2
     8fa:	e1 e0       	ldi	r30, 0x01	; 1
     8fc:	f0 e0       	ldi	r31, 0x00	; 0
     8fe:	ec 0f       	add	r30, r28
     900:	fd 1f       	adc	r31, r29
     902:	e1 0f       	add	r30, r17
     904:	f1 1d       	adc	r31, r1
     906:	1f 5f       	subi	r17, 0xFF	; 255
     908:	80 81       	ld	r24, Z
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	b3 01       	movw	r22, r6
     90e:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     912:	9a 94       	dec	r9
     914:	91 f7       	brne	.-28     	; 0x8fa <vfprintf+0x3d6>
     916:	44 fc       	sbrc	r4, 4
     918:	03 c0       	rjmp	.+6      	; 0x920 <vfprintf+0x3fc>
     91a:	85 e6       	ldi	r24, 0x65	; 101
     91c:	90 e0       	ldi	r25, 0x00	; 0
     91e:	02 c0       	rjmp	.+4      	; 0x924 <vfprintf+0x400>
     920:	85 e4       	ldi	r24, 0x45	; 69
     922:	90 e0       	ldi	r25, 0x00	; 0
     924:	b3 01       	movw	r22, r6
     926:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     92a:	d7 fc       	sbrc	r13, 7
     92c:	05 c0       	rjmp	.+10     	; 0x938 <vfprintf+0x414>
     92e:	c1 14       	cp	r12, r1
     930:	d1 04       	cpc	r13, r1
     932:	41 f4       	brne	.+16     	; 0x944 <vfprintf+0x420>
     934:	04 ff       	sbrs	r16, 4
     936:	06 c0       	rjmp	.+12     	; 0x944 <vfprintf+0x420>
     938:	d0 94       	com	r13
     93a:	c1 94       	neg	r12
     93c:	d1 08       	sbc	r13, r1
     93e:	d3 94       	inc	r13
     940:	8d e2       	ldi	r24, 0x2D	; 45
     942:	01 c0       	rjmp	.+2      	; 0x946 <vfprintf+0x422>
     944:	8b e2       	ldi	r24, 0x2B	; 43
     946:	90 e0       	ldi	r25, 0x00	; 0
     948:	b3 01       	movw	r22, r6
     94a:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     94e:	80 e3       	ldi	r24, 0x30	; 48
     950:	05 c0       	rjmp	.+10     	; 0x95c <vfprintf+0x438>
     952:	8f 5f       	subi	r24, 0xFF	; 255
     954:	26 ef       	ldi	r18, 0xF6	; 246
     956:	3f ef       	ldi	r19, 0xFF	; 255
     958:	c2 0e       	add	r12, r18
     95a:	d3 1e       	adc	r13, r19
     95c:	3a e0       	ldi	r19, 0x0A	; 10
     95e:	c3 16       	cp	r12, r19
     960:	d1 04       	cpc	r13, r1
     962:	bc f7       	brge	.-18     	; 0x952 <vfprintf+0x42e>
     964:	90 e0       	ldi	r25, 0x00	; 0
     966:	b3 01       	movw	r22, r6
     968:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     96c:	c6 01       	movw	r24, r12
     96e:	c0 96       	adiw	r24, 0x30	; 48
     970:	b3 01       	movw	r22, r6
     972:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     976:	cc 84       	ldd	r12, Y+12	; 0x0c
     978:	dd 84       	ldd	r13, Y+13	; 0x0d
     97a:	52 c1       	rjmp	.+676    	; 0xc20 <vfprintf+0x6fc>
     97c:	93 36       	cpi	r25, 0x63	; 99
     97e:	31 f0       	breq	.+12     	; 0x98c <vfprintf+0x468>
     980:	93 37       	cpi	r25, 0x73	; 115
     982:	99 f0       	breq	.+38     	; 0x9aa <vfprintf+0x486>
     984:	93 35       	cpi	r25, 0x53	; 83
     986:	09 f0       	breq	.+2      	; 0x98a <vfprintf+0x466>
     988:	59 c0       	rjmp	.+178    	; 0xa3c <vfprintf+0x518>
     98a:	23 c0       	rjmp	.+70     	; 0x9d2 <vfprintf+0x4ae>
     98c:	f6 01       	movw	r30, r12
     98e:	80 81       	ld	r24, Z
     990:	89 83       	std	Y+1, r24	; 0x01
     992:	5e 01       	movw	r10, r28
     994:	08 94       	sec
     996:	a1 1c       	adc	r10, r1
     998:	b1 1c       	adc	r11, r1
     99a:	22 e0       	ldi	r18, 0x02	; 2
     99c:	30 e0       	ldi	r19, 0x00	; 0
     99e:	c2 0e       	add	r12, r18
     9a0:	d3 1e       	adc	r13, r19
     9a2:	21 e0       	ldi	r18, 0x01	; 1
     9a4:	e2 2e       	mov	r14, r18
     9a6:	f1 2c       	mov	r15, r1
     9a8:	12 c0       	rjmp	.+36     	; 0x9ce <vfprintf+0x4aa>
     9aa:	f6 01       	movw	r30, r12
     9ac:	a0 80       	ld	r10, Z
     9ae:	b1 80       	ldd	r11, Z+1	; 0x01
     9b0:	16 fd       	sbrc	r17, 6
     9b2:	03 c0       	rjmp	.+6      	; 0x9ba <vfprintf+0x496>
     9b4:	6f ef       	ldi	r22, 0xFF	; 255
     9b6:	7f ef       	ldi	r23, 0xFF	; 255
     9b8:	02 c0       	rjmp	.+4      	; 0x9be <vfprintf+0x49a>
     9ba:	69 2d       	mov	r22, r9
     9bc:	70 e0       	ldi	r23, 0x00	; 0
     9be:	22 e0       	ldi	r18, 0x02	; 2
     9c0:	30 e0       	ldi	r19, 0x00	; 0
     9c2:	c2 0e       	add	r12, r18
     9c4:	d3 1e       	adc	r13, r19
     9c6:	c5 01       	movw	r24, r10
     9c8:	0e 94 13 1e 	call	0x3c26	; 0x3c26 <strnlen>
     9cc:	7c 01       	movw	r14, r24
     9ce:	1f 77       	andi	r17, 0x7F	; 127
     9d0:	13 c0       	rjmp	.+38     	; 0x9f8 <vfprintf+0x4d4>
     9d2:	f6 01       	movw	r30, r12
     9d4:	a0 80       	ld	r10, Z
     9d6:	b1 80       	ldd	r11, Z+1	; 0x01
     9d8:	16 fd       	sbrc	r17, 6
     9da:	03 c0       	rjmp	.+6      	; 0x9e2 <vfprintf+0x4be>
     9dc:	6f ef       	ldi	r22, 0xFF	; 255
     9de:	7f ef       	ldi	r23, 0xFF	; 255
     9e0:	02 c0       	rjmp	.+4      	; 0x9e6 <vfprintf+0x4c2>
     9e2:	69 2d       	mov	r22, r9
     9e4:	70 e0       	ldi	r23, 0x00	; 0
     9e6:	22 e0       	ldi	r18, 0x02	; 2
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	c2 0e       	add	r12, r18
     9ec:	d3 1e       	adc	r13, r19
     9ee:	c5 01       	movw	r24, r10
     9f0:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <strnlen_P>
     9f4:	7c 01       	movw	r14, r24
     9f6:	10 68       	ori	r17, 0x80	; 128
     9f8:	13 ff       	sbrs	r17, 3
     9fa:	07 c0       	rjmp	.+14     	; 0xa0a <vfprintf+0x4e6>
     9fc:	1b c0       	rjmp	.+54     	; 0xa34 <vfprintf+0x510>
     9fe:	80 e2       	ldi	r24, 0x20	; 32
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	b3 01       	movw	r22, r6
     a04:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     a08:	8a 94       	dec	r8
     a0a:	88 2d       	mov	r24, r8
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	e8 16       	cp	r14, r24
     a10:	f9 06       	cpc	r15, r25
     a12:	a8 f3       	brcs	.-22     	; 0x9fe <vfprintf+0x4da>
     a14:	0f c0       	rjmp	.+30     	; 0xa34 <vfprintf+0x510>
     a16:	f5 01       	movw	r30, r10
     a18:	17 fd       	sbrc	r17, 7
     a1a:	85 91       	lpm	r24, Z+
     a1c:	17 ff       	sbrs	r17, 7
     a1e:	81 91       	ld	r24, Z+
     a20:	5f 01       	movw	r10, r30
     a22:	90 e0       	ldi	r25, 0x00	; 0
     a24:	b3 01       	movw	r22, r6
     a26:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     a2a:	81 10       	cpse	r8, r1
     a2c:	8a 94       	dec	r8
     a2e:	08 94       	sec
     a30:	e1 08       	sbc	r14, r1
     a32:	f1 08       	sbc	r15, r1
     a34:	e1 14       	cp	r14, r1
     a36:	f1 04       	cpc	r15, r1
     a38:	71 f7       	brne	.-36     	; 0xa16 <vfprintf+0x4f2>
     a3a:	f2 c0       	rjmp	.+484    	; 0xc20 <vfprintf+0x6fc>
     a3c:	94 36       	cpi	r25, 0x64	; 100
     a3e:	11 f0       	breq	.+4      	; 0xa44 <vfprintf+0x520>
     a40:	99 36       	cpi	r25, 0x69	; 105
     a42:	89 f5       	brne	.+98     	; 0xaa6 <vfprintf+0x582>
     a44:	17 ff       	sbrs	r17, 7
     a46:	08 c0       	rjmp	.+16     	; 0xa58 <vfprintf+0x534>
     a48:	f6 01       	movw	r30, r12
     a4a:	20 81       	ld	r18, Z
     a4c:	31 81       	ldd	r19, Z+1	; 0x01
     a4e:	42 81       	ldd	r20, Z+2	; 0x02
     a50:	53 81       	ldd	r21, Z+3	; 0x03
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	90 e0       	ldi	r25, 0x00	; 0
     a56:	0a c0       	rjmp	.+20     	; 0xa6c <vfprintf+0x548>
     a58:	f6 01       	movw	r30, r12
     a5a:	80 81       	ld	r24, Z
     a5c:	91 81       	ldd	r25, Z+1	; 0x01
     a5e:	9c 01       	movw	r18, r24
     a60:	44 27       	eor	r20, r20
     a62:	37 fd       	sbrc	r19, 7
     a64:	40 95       	com	r20
     a66:	54 2f       	mov	r21, r20
     a68:	82 e0       	ldi	r24, 0x02	; 2
     a6a:	90 e0       	ldi	r25, 0x00	; 0
     a6c:	c8 0e       	add	r12, r24
     a6e:	d9 1e       	adc	r13, r25
     a70:	9f e6       	ldi	r25, 0x6F	; 111
     a72:	f9 2e       	mov	r15, r25
     a74:	f1 22       	and	r15, r17
     a76:	57 ff       	sbrs	r21, 7
     a78:	09 c0       	rjmp	.+18     	; 0xa8c <vfprintf+0x568>
     a7a:	50 95       	com	r21
     a7c:	40 95       	com	r20
     a7e:	30 95       	com	r19
     a80:	21 95       	neg	r18
     a82:	3f 4f       	sbci	r19, 0xFF	; 255
     a84:	4f 4f       	sbci	r20, 0xFF	; 255
     a86:	5f 4f       	sbci	r21, 0xFF	; 255
     a88:	90 e8       	ldi	r25, 0x80	; 128
     a8a:	f9 2a       	or	r15, r25
     a8c:	ca 01       	movw	r24, r20
     a8e:	b9 01       	movw	r22, r18
     a90:	ae 01       	movw	r20, r28
     a92:	4f 5f       	subi	r20, 0xFF	; 255
     a94:	5f 4f       	sbci	r21, 0xFF	; 255
     a96:	2a e0       	ldi	r18, 0x0A	; 10
     a98:	30 e0       	ldi	r19, 0x00	; 0
     a9a:	0e 94 e1 1e 	call	0x3dc2	; 0x3dc2 <__ultoa_invert>
     a9e:	e8 2e       	mov	r14, r24
     aa0:	e8 89       	ldd	r30, Y+16	; 0x10
     aa2:	ee 1a       	sub	r14, r30
     aa4:	41 c0       	rjmp	.+130    	; 0xb28 <vfprintf+0x604>
     aa6:	95 37       	cpi	r25, 0x75	; 117
     aa8:	21 f4       	brne	.+8      	; 0xab2 <vfprintf+0x58e>
     aaa:	1f 7e       	andi	r17, 0xEF	; 239
     aac:	2a e0       	ldi	r18, 0x0A	; 10
     aae:	30 e0       	ldi	r19, 0x00	; 0
     ab0:	1c c0       	rjmp	.+56     	; 0xaea <vfprintf+0x5c6>
     ab2:	19 7f       	andi	r17, 0xF9	; 249
     ab4:	9f 36       	cpi	r25, 0x6F	; 111
     ab6:	61 f0       	breq	.+24     	; 0xad0 <vfprintf+0x5ac>
     ab8:	90 37       	cpi	r25, 0x70	; 112
     aba:	20 f4       	brcc	.+8      	; 0xac4 <vfprintf+0x5a0>
     abc:	98 35       	cpi	r25, 0x58	; 88
     abe:	09 f0       	breq	.+2      	; 0xac2 <vfprintf+0x59e>
     ac0:	b2 c0       	rjmp	.+356    	; 0xc26 <vfprintf+0x702>
     ac2:	0f c0       	rjmp	.+30     	; 0xae2 <vfprintf+0x5be>
     ac4:	90 37       	cpi	r25, 0x70	; 112
     ac6:	39 f0       	breq	.+14     	; 0xad6 <vfprintf+0x5b2>
     ac8:	98 37       	cpi	r25, 0x78	; 120
     aca:	09 f0       	breq	.+2      	; 0xace <vfprintf+0x5aa>
     acc:	ac c0       	rjmp	.+344    	; 0xc26 <vfprintf+0x702>
     ace:	04 c0       	rjmp	.+8      	; 0xad8 <vfprintf+0x5b4>
     ad0:	28 e0       	ldi	r18, 0x08	; 8
     ad2:	30 e0       	ldi	r19, 0x00	; 0
     ad4:	0a c0       	rjmp	.+20     	; 0xaea <vfprintf+0x5c6>
     ad6:	10 61       	ori	r17, 0x10	; 16
     ad8:	14 fd       	sbrc	r17, 4
     ada:	14 60       	ori	r17, 0x04	; 4
     adc:	20 e1       	ldi	r18, 0x10	; 16
     ade:	30 e0       	ldi	r19, 0x00	; 0
     ae0:	04 c0       	rjmp	.+8      	; 0xaea <vfprintf+0x5c6>
     ae2:	14 fd       	sbrc	r17, 4
     ae4:	16 60       	ori	r17, 0x06	; 6
     ae6:	20 e1       	ldi	r18, 0x10	; 16
     ae8:	32 e0       	ldi	r19, 0x02	; 2
     aea:	17 ff       	sbrs	r17, 7
     aec:	08 c0       	rjmp	.+16     	; 0xafe <vfprintf+0x5da>
     aee:	f6 01       	movw	r30, r12
     af0:	60 81       	ld	r22, Z
     af2:	71 81       	ldd	r23, Z+1	; 0x01
     af4:	82 81       	ldd	r24, Z+2	; 0x02
     af6:	93 81       	ldd	r25, Z+3	; 0x03
     af8:	44 e0       	ldi	r20, 0x04	; 4
     afa:	50 e0       	ldi	r21, 0x00	; 0
     afc:	08 c0       	rjmp	.+16     	; 0xb0e <vfprintf+0x5ea>
     afe:	f6 01       	movw	r30, r12
     b00:	80 81       	ld	r24, Z
     b02:	91 81       	ldd	r25, Z+1	; 0x01
     b04:	bc 01       	movw	r22, r24
     b06:	80 e0       	ldi	r24, 0x00	; 0
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	42 e0       	ldi	r20, 0x02	; 2
     b0c:	50 e0       	ldi	r21, 0x00	; 0
     b0e:	c4 0e       	add	r12, r20
     b10:	d5 1e       	adc	r13, r21
     b12:	ae 01       	movw	r20, r28
     b14:	4f 5f       	subi	r20, 0xFF	; 255
     b16:	5f 4f       	sbci	r21, 0xFF	; 255
     b18:	0e 94 e1 1e 	call	0x3dc2	; 0x3dc2 <__ultoa_invert>
     b1c:	e8 2e       	mov	r14, r24
     b1e:	58 89       	ldd	r21, Y+16	; 0x10
     b20:	e5 1a       	sub	r14, r21
     b22:	8f e7       	ldi	r24, 0x7F	; 127
     b24:	f8 2e       	mov	r15, r24
     b26:	f1 22       	and	r15, r17
     b28:	f6 fe       	sbrs	r15, 6
     b2a:	0b c0       	rjmp	.+22     	; 0xb42 <vfprintf+0x61e>
     b2c:	8e ef       	ldi	r24, 0xFE	; 254
     b2e:	f8 22       	and	r15, r24
     b30:	e9 14       	cp	r14, r9
     b32:	38 f4       	brcc	.+14     	; 0xb42 <vfprintf+0x61e>
     b34:	f4 fe       	sbrs	r15, 4
     b36:	07 c0       	rjmp	.+14     	; 0xb46 <vfprintf+0x622>
     b38:	f2 fc       	sbrc	r15, 2
     b3a:	05 c0       	rjmp	.+10     	; 0xb46 <vfprintf+0x622>
     b3c:	9f ee       	ldi	r25, 0xEF	; 239
     b3e:	f9 22       	and	r15, r25
     b40:	02 c0       	rjmp	.+4      	; 0xb46 <vfprintf+0x622>
     b42:	1e 2d       	mov	r17, r14
     b44:	01 c0       	rjmp	.+2      	; 0xb48 <vfprintf+0x624>
     b46:	19 2d       	mov	r17, r9
     b48:	f4 fe       	sbrs	r15, 4
     b4a:	0d c0       	rjmp	.+26     	; 0xb66 <vfprintf+0x642>
     b4c:	fe 01       	movw	r30, r28
     b4e:	ee 0d       	add	r30, r14
     b50:	f1 1d       	adc	r31, r1
     b52:	80 81       	ld	r24, Z
     b54:	80 33       	cpi	r24, 0x30	; 48
     b56:	19 f4       	brne	.+6      	; 0xb5e <vfprintf+0x63a>
     b58:	e9 ee       	ldi	r30, 0xE9	; 233
     b5a:	fe 22       	and	r15, r30
     b5c:	08 c0       	rjmp	.+16     	; 0xb6e <vfprintf+0x64a>
     b5e:	1f 5f       	subi	r17, 0xFF	; 255
     b60:	f2 fe       	sbrs	r15, 2
     b62:	05 c0       	rjmp	.+10     	; 0xb6e <vfprintf+0x64a>
     b64:	03 c0       	rjmp	.+6      	; 0xb6c <vfprintf+0x648>
     b66:	8f 2d       	mov	r24, r15
     b68:	86 78       	andi	r24, 0x86	; 134
     b6a:	09 f0       	breq	.+2      	; 0xb6e <vfprintf+0x64a>
     b6c:	1f 5f       	subi	r17, 0xFF	; 255
     b6e:	0f 2d       	mov	r16, r15
     b70:	f3 fc       	sbrc	r15, 3
     b72:	14 c0       	rjmp	.+40     	; 0xb9c <vfprintf+0x678>
     b74:	f0 fe       	sbrs	r15, 0
     b76:	0f c0       	rjmp	.+30     	; 0xb96 <vfprintf+0x672>
     b78:	18 15       	cp	r17, r8
     b7a:	10 f0       	brcs	.+4      	; 0xb80 <vfprintf+0x65c>
     b7c:	9e 2c       	mov	r9, r14
     b7e:	0b c0       	rjmp	.+22     	; 0xb96 <vfprintf+0x672>
     b80:	9e 2c       	mov	r9, r14
     b82:	98 0c       	add	r9, r8
     b84:	91 1a       	sub	r9, r17
     b86:	18 2d       	mov	r17, r8
     b88:	06 c0       	rjmp	.+12     	; 0xb96 <vfprintf+0x672>
     b8a:	80 e2       	ldi	r24, 0x20	; 32
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	b3 01       	movw	r22, r6
     b90:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     b94:	1f 5f       	subi	r17, 0xFF	; 255
     b96:	18 15       	cp	r17, r8
     b98:	c0 f3       	brcs	.-16     	; 0xb8a <vfprintf+0x666>
     b9a:	04 c0       	rjmp	.+8      	; 0xba4 <vfprintf+0x680>
     b9c:	18 15       	cp	r17, r8
     b9e:	10 f4       	brcc	.+4      	; 0xba4 <vfprintf+0x680>
     ba0:	81 1a       	sub	r8, r17
     ba2:	01 c0       	rjmp	.+2      	; 0xba6 <vfprintf+0x682>
     ba4:	88 24       	eor	r8, r8
     ba6:	04 ff       	sbrs	r16, 4
     ba8:	0f c0       	rjmp	.+30     	; 0xbc8 <vfprintf+0x6a4>
     baa:	80 e3       	ldi	r24, 0x30	; 48
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	b3 01       	movw	r22, r6
     bb0:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     bb4:	02 ff       	sbrs	r16, 2
     bb6:	1d c0       	rjmp	.+58     	; 0xbf2 <vfprintf+0x6ce>
     bb8:	01 fd       	sbrc	r16, 1
     bba:	03 c0       	rjmp	.+6      	; 0xbc2 <vfprintf+0x69e>
     bbc:	88 e7       	ldi	r24, 0x78	; 120
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	0e c0       	rjmp	.+28     	; 0xbde <vfprintf+0x6ba>
     bc2:	88 e5       	ldi	r24, 0x58	; 88
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	0b c0       	rjmp	.+22     	; 0xbde <vfprintf+0x6ba>
     bc8:	80 2f       	mov	r24, r16
     bca:	86 78       	andi	r24, 0x86	; 134
     bcc:	91 f0       	breq	.+36     	; 0xbf2 <vfprintf+0x6ce>
     bce:	01 ff       	sbrs	r16, 1
     bd0:	02 c0       	rjmp	.+4      	; 0xbd6 <vfprintf+0x6b2>
     bd2:	8b e2       	ldi	r24, 0x2B	; 43
     bd4:	01 c0       	rjmp	.+2      	; 0xbd8 <vfprintf+0x6b4>
     bd6:	80 e2       	ldi	r24, 0x20	; 32
     bd8:	f7 fc       	sbrc	r15, 7
     bda:	8d e2       	ldi	r24, 0x2D	; 45
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	b3 01       	movw	r22, r6
     be0:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     be4:	06 c0       	rjmp	.+12     	; 0xbf2 <vfprintf+0x6ce>
     be6:	80 e3       	ldi	r24, 0x30	; 48
     be8:	90 e0       	ldi	r25, 0x00	; 0
     bea:	b3 01       	movw	r22, r6
     bec:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     bf0:	9a 94       	dec	r9
     bf2:	e9 14       	cp	r14, r9
     bf4:	c0 f3       	brcs	.-16     	; 0xbe6 <vfprintf+0x6c2>
     bf6:	ea 94       	dec	r14
     bf8:	e1 e0       	ldi	r30, 0x01	; 1
     bfa:	f0 e0       	ldi	r31, 0x00	; 0
     bfc:	ec 0f       	add	r30, r28
     bfe:	fd 1f       	adc	r31, r29
     c00:	ee 0d       	add	r30, r14
     c02:	f1 1d       	adc	r31, r1
     c04:	80 81       	ld	r24, Z
     c06:	90 e0       	ldi	r25, 0x00	; 0
     c08:	b3 01       	movw	r22, r6
     c0a:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     c0e:	ee 20       	and	r14, r14
     c10:	91 f7       	brne	.-28     	; 0xbf6 <vfprintf+0x6d2>
     c12:	06 c0       	rjmp	.+12     	; 0xc20 <vfprintf+0x6fc>
     c14:	80 e2       	ldi	r24, 0x20	; 32
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	b3 01       	movw	r22, r6
     c1a:	0e 94 b5 1e 	call	0x3d6a	; 0x3d6a <fputc>
     c1e:	8a 94       	dec	r8
     c20:	88 20       	and	r8, r8
     c22:	c1 f7       	brne	.-16     	; 0xc14 <vfprintf+0x6f0>
     c24:	97 cc       	rjmp	.-1746   	; 0x554 <vfprintf+0x30>
     c26:	f3 01       	movw	r30, r6
     c28:	66 81       	ldd	r22, Z+6	; 0x06
     c2a:	77 81       	ldd	r23, Z+7	; 0x07
     c2c:	cb 01       	movw	r24, r22
     c2e:	61 96       	adiw	r28, 0x11	; 17
     c30:	e2 e1       	ldi	r30, 0x12	; 18
     c32:	0c 94 ee 1f 	jmp	0x3fdc	; 0x3fdc <__epilogue_restores__>

00000c36 <_Z41__static_initialization_and_destruction_0ii>:
	{
		motors[i].compute();
	}

  	return HEXAPOD_LOOP_DURATION;
}
     c36:	df 93       	push	r29
     c38:	cf 93       	push	r28
     c3a:	cd b7       	in	r28, 0x3d	; 61
     c3c:	de b7       	in	r29, 0x3e	; 62
     c3e:	2a 97       	sbiw	r28, 0x0a	; 10
     c40:	0f b6       	in	r0, 0x3f	; 63
     c42:	f8 94       	cli
     c44:	de bf       	out	0x3e, r29	; 62
     c46:	0f be       	out	0x3f, r0	; 63
     c48:	cd bf       	out	0x3d, r28	; 61
     c4a:	9a 83       	std	Y+2, r25	; 0x02
     c4c:	89 83       	std	Y+1, r24	; 0x01
     c4e:	7c 83       	std	Y+4, r23	; 0x04
     c50:	6b 83       	std	Y+3, r22	; 0x03
     c52:	89 81       	ldd	r24, Y+1	; 0x01
     c54:	9a 81       	ldd	r25, Y+2	; 0x02
     c56:	81 30       	cpi	r24, 0x01	; 1
     c58:	91 05       	cpc	r25, r1
     c5a:	39 f5       	brne	.+78     	; 0xcaa <_Z41__static_initialization_and_destruction_0ii+0x74>
     c5c:	8b 81       	ldd	r24, Y+3	; 0x03
     c5e:	9c 81       	ldd	r25, Y+4	; 0x04
     c60:	2f ef       	ldi	r18, 0xFF	; 255
     c62:	8f 3f       	cpi	r24, 0xFF	; 255
     c64:	92 07       	cpc	r25, r18
     c66:	09 f5       	brne	.+66     	; 0xcaa <_Z41__static_initialization_and_destruction_0ii+0x74>
#include "hardware.h"
#include "protocol.h"
#include "smart_motor.h"


Protocol proto;
     c68:	8a e0       	ldi	r24, 0x0A	; 10
     c6a:	93 e0       	ldi	r25, 0x03	; 3
     c6c:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <_ZN8ProtocolC1Ev>

SmartMotor motors[2];
     c70:	87 e3       	ldi	r24, 0x37	; 55
     c72:	93 e0       	ldi	r25, 0x03	; 3
     c74:	9a 87       	std	Y+10, r25	; 0x0a
     c76:	89 87       	std	Y+9, r24	; 0x09
     c78:	81 e0       	ldi	r24, 0x01	; 1
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	98 87       	std	Y+8, r25	; 0x08
     c7e:	8f 83       	std	Y+7, r24	; 0x07
     c80:	0e c0       	rjmp	.+28     	; 0xc9e <_Z41__static_initialization_and_destruction_0ii+0x68>
     c82:	89 85       	ldd	r24, Y+9	; 0x09
     c84:	9a 85       	ldd	r25, Y+10	; 0x0a
     c86:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <_ZN10SmartMotorC1Ev>
     c8a:	89 85       	ldd	r24, Y+9	; 0x09
     c8c:	9a 85       	ldd	r25, Y+10	; 0x0a
     c8e:	0b 96       	adiw	r24, 0x0b	; 11
     c90:	9a 87       	std	Y+10, r25	; 0x0a
     c92:	89 87       	std	Y+9, r24	; 0x09
     c94:	8f 81       	ldd	r24, Y+7	; 0x07
     c96:	98 85       	ldd	r25, Y+8	; 0x08
     c98:	01 97       	sbiw	r24, 0x01	; 1
     c9a:	98 87       	std	Y+8, r25	; 0x08
     c9c:	8f 83       	std	Y+7, r24	; 0x07
     c9e:	8f 81       	ldd	r24, Y+7	; 0x07
     ca0:	98 85       	ldd	r25, Y+8	; 0x08
     ca2:	2f ef       	ldi	r18, 0xFF	; 255
     ca4:	8f 3f       	cpi	r24, 0xFF	; 255
     ca6:	92 07       	cpc	r25, r18
     ca8:	61 f7       	brne	.-40     	; 0xc82 <_Z41__static_initialization_and_destruction_0ii+0x4c>
     caa:	89 81       	ldd	r24, Y+1	; 0x01
     cac:	9a 81       	ldd	r25, Y+2	; 0x02
     cae:	00 97       	sbiw	r24, 0x00	; 0
     cb0:	d1 f4       	brne	.+52     	; 0xce6 <_Z41__static_initialization_and_destruction_0ii+0xb0>
     cb2:	8b 81       	ldd	r24, Y+3	; 0x03
     cb4:	9c 81       	ldd	r25, Y+4	; 0x04
     cb6:	2f ef       	ldi	r18, 0xFF	; 255
     cb8:	8f 3f       	cpi	r24, 0xFF	; 255
     cba:	92 07       	cpc	r25, r18
     cbc:	a1 f4       	brne	.+40     	; 0xce6 <_Z41__static_initialization_and_destruction_0ii+0xb0>
     cbe:	8d e4       	ldi	r24, 0x4D	; 77
     cc0:	93 e0       	ldi	r25, 0x03	; 3
     cc2:	9e 83       	std	Y+6, r25	; 0x06
     cc4:	8d 83       	std	Y+5, r24	; 0x05
     cc6:	8d 81       	ldd	r24, Y+5	; 0x05
     cc8:	9e 81       	ldd	r25, Y+6	; 0x06
     cca:	23 e0       	ldi	r18, 0x03	; 3
     ccc:	87 33       	cpi	r24, 0x37	; 55
     cce:	92 07       	cpc	r25, r18
     cd0:	51 f0       	breq	.+20     	; 0xce6 <_Z41__static_initialization_and_destruction_0ii+0xb0>
     cd2:	8d 81       	ldd	r24, Y+5	; 0x05
     cd4:	9e 81       	ldd	r25, Y+6	; 0x06
     cd6:	0b 97       	sbiw	r24, 0x0b	; 11
     cd8:	9e 83       	std	Y+6, r25	; 0x06
     cda:	8d 83       	std	Y+5, r24	; 0x05
     cdc:	8d 81       	ldd	r24, Y+5	; 0x05
     cde:	9e 81       	ldd	r25, Y+6	; 0x06
     ce0:	0e 94 28 0c 	call	0x1850	; 0x1850 <_ZN10SmartMotorD1Ev>
     ce4:	f0 cf       	rjmp	.-32     	; 0xcc6 <_Z41__static_initialization_and_destruction_0ii+0x90>
	{
		motors[i].compute();
	}

  	return HEXAPOD_LOOP_DURATION;
}
     ce6:	2a 96       	adiw	r28, 0x0a	; 10
     ce8:	0f b6       	in	r0, 0x3f	; 63
     cea:	f8 94       	cli
     cec:	de bf       	out	0x3e, r29	; 62
     cee:	0f be       	out	0x3f, r0	; 63
     cf0:	cd bf       	out	0x3d, r28	; 61
     cf2:	cf 91       	pop	r28
     cf4:	df 91       	pop	r29
     cf6:	08 95       	ret

00000cf8 <_GLOBAL__D_proto>:
     cf8:	df 93       	push	r29
     cfa:	cf 93       	push	r28
     cfc:	cd b7       	in	r28, 0x3d	; 61
     cfe:	de b7       	in	r29, 0x3e	; 62
     d00:	80 e0       	ldi	r24, 0x00	; 0
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	6f ef       	ldi	r22, 0xFF	; 255
     d06:	7f ef       	ldi	r23, 0xFF	; 255
     d08:	0e 94 1b 06 	call	0xc36	; 0xc36 <_Z41__static_initialization_and_destruction_0ii>
     d0c:	cf 91       	pop	r28
     d0e:	df 91       	pop	r29
     d10:	08 95       	ret

00000d12 <_GLOBAL__I_proto>:
     d12:	df 93       	push	r29
     d14:	cf 93       	push	r28
     d16:	cd b7       	in	r28, 0x3d	; 61
     d18:	de b7       	in	r29, 0x3e	; 62
     d1a:	81 e0       	ldi	r24, 0x01	; 1
     d1c:	90 e0       	ldi	r25, 0x00	; 0
     d1e:	6f ef       	ldi	r22, 0xFF	; 255
     d20:	7f ef       	ldi	r23, 0xFF	; 255
     d22:	0e 94 1b 06 	call	0xc36	; 0xc36 <_Z41__static_initialization_and_destruction_0ii>
     d26:	cf 91       	pop	r28
     d28:	df 91       	pop	r29
     d2a:	08 95       	ret

00000d2c <_ZN6StreamlsEi>:
		return print(num);
	}
	Stream& operator<< (int8_t num ){
		return print(num);
	}
	Stream& operator<< (int16_t num ){
     d2c:	df 93       	push	r29
     d2e:	cf 93       	push	r28
     d30:	00 d0       	rcall	.+0      	; 0xd32 <_ZN6StreamlsEi+0x6>
     d32:	00 d0       	rcall	.+0      	; 0xd34 <_ZN6StreamlsEi+0x8>
     d34:	cd b7       	in	r28, 0x3d	; 61
     d36:	de b7       	in	r29, 0x3e	; 62
     d38:	9a 83       	std	Y+2, r25	; 0x02
     d3a:	89 83       	std	Y+1, r24	; 0x01
     d3c:	7c 83       	std	Y+4, r23	; 0x04
     d3e:	6b 83       	std	Y+3, r22	; 0x03
		return print(num);
     d40:	89 81       	ldd	r24, Y+1	; 0x01
     d42:	9a 81       	ldd	r25, Y+2	; 0x02
     d44:	2b 81       	ldd	r18, Y+3	; 0x03
     d46:	3c 81       	ldd	r19, Y+4	; 0x04
     d48:	b9 01       	movw	r22, r18
     d4a:	0e 94 10 12 	call	0x2420	; 0x2420 <_ZN6Stream5printEi>
	}
     d4e:	0f 90       	pop	r0
     d50:	0f 90       	pop	r0
     d52:	0f 90       	pop	r0
     d54:	0f 90       	pop	r0
     d56:	cf 91       	pop	r28
     d58:	df 91       	pop	r29
     d5a:	08 95       	ret

00000d5c <_ZN6StreamlsEPKc>:
	// Dump the value of a sensor
	Stream& operator<< (Sensor& sensor ){
		return print(sensor);
	}

	Stream& operator<< (const char str[] ){
     d5c:	df 93       	push	r29
     d5e:	cf 93       	push	r28
     d60:	00 d0       	rcall	.+0      	; 0xd62 <_ZN6StreamlsEPKc+0x6>
     d62:	00 d0       	rcall	.+0      	; 0xd64 <_ZN6StreamlsEPKc+0x8>
     d64:	cd b7       	in	r28, 0x3d	; 61
     d66:	de b7       	in	r29, 0x3e	; 62
     d68:	9a 83       	std	Y+2, r25	; 0x02
     d6a:	89 83       	std	Y+1, r24	; 0x01
     d6c:	7c 83       	std	Y+4, r23	; 0x04
     d6e:	6b 83       	std	Y+3, r22	; 0x03
		return print(str);
     d70:	89 81       	ldd	r24, Y+1	; 0x01
     d72:	9a 81       	ldd	r25, Y+2	; 0x02
     d74:	2b 81       	ldd	r18, Y+3	; 0x03
     d76:	3c 81       	ldd	r19, Y+4	; 0x04
     d78:	b9 01       	movw	r22, r18
     d7a:	0e 94 37 12 	call	0x246e	; 0x246e <_ZN6Stream5printEPKc>
	}
     d7e:	0f 90       	pop	r0
     d80:	0f 90       	pop	r0
     d82:	0f 90       	pop	r0
     d84:	0f 90       	pop	r0
     d86:	cf 91       	pop	r28
     d88:	df 91       	pop	r29
     d8a:	08 95       	ret

00000d8c <_ZN6StreamlsEj>:
		return print(c);
	}
	Stream& operator<< (uint8_t num ){
		return print(num);
	}
	Stream& operator<< (uint16_t num ){
     d8c:	df 93       	push	r29
     d8e:	cf 93       	push	r28
     d90:	00 d0       	rcall	.+0      	; 0xd92 <_ZN6StreamlsEj+0x6>
     d92:	00 d0       	rcall	.+0      	; 0xd94 <_ZN6StreamlsEj+0x8>
     d94:	cd b7       	in	r28, 0x3d	; 61
     d96:	de b7       	in	r29, 0x3e	; 62
     d98:	9a 83       	std	Y+2, r25	; 0x02
     d9a:	89 83       	std	Y+1, r24	; 0x01
     d9c:	7c 83       	std	Y+4, r23	; 0x04
     d9e:	6b 83       	std	Y+3, r22	; 0x03
		return print(num);
     da0:	89 81       	ldd	r24, Y+1	; 0x01
     da2:	9a 81       	ldd	r25, Y+2	; 0x02
     da4:	2b 81       	ldd	r18, Y+3	; 0x03
     da6:	3c 81       	ldd	r19, Y+4	; 0x04
     da8:	b9 01       	movw	r22, r18
     daa:	0e 94 7e 12 	call	0x24fc	; 0x24fc <_ZN6Stream5printEj>
	}
     dae:	0f 90       	pop	r0
     db0:	0f 90       	pop	r0
     db2:	0f 90       	pop	r0
     db4:	0f 90       	pop	r0
     db6:	cf 91       	pop	r28
     db8:	df 91       	pop	r29
     dba:	08 95       	ret

00000dbc <_Z12treat_packetR6Packet>:
	motors[1].link_servo(servo2);

	return 0;
}

void treat_packet(Packet &p){
     dbc:	df 93       	push	r29
     dbe:	cf 93       	push	r28
     dc0:	00 d0       	rcall	.+0      	; 0xdc2 <_Z12treat_packetR6Packet+0x6>
     dc2:	00 d0       	rcall	.+0      	; 0xdc4 <_Z12treat_packetR6Packet+0x8>
     dc4:	cd b7       	in	r28, 0x3d	; 61
     dc6:	de b7       	in	r29, 0x3e	; 62
     dc8:	9a 83       	std	Y+2, r25	; 0x02
     dca:	89 83       	std	Y+1, r24	; 0x01

	if(p.motor_id >= sizeof(motors)/sizeof(SmartMotor))
     dcc:	e9 81       	ldd	r30, Y+1	; 0x01
     dce:	fa 81       	ldd	r31, Y+2	; 0x02
     dd0:	81 81       	ldd	r24, Z+1	; 0x01
     dd2:	82 30       	cpi	r24, 0x02	; 2
     dd4:	d8 f0       	brcs	.+54     	; 0xe0c <_Z12treat_packetR6Packet+0x50>
	{
		uart1<<"failed treat packet "<<(int)p.motor_id<<" "<<sizeof(motors)/sizeof(SmartMotor);
     dd6:	8a ef       	ldi	r24, 0xFA	; 250
     dd8:	93 e0       	ldi	r25, 0x03	; 3
     dda:	20 e0       	ldi	r18, 0x00	; 0
     ddc:	32 e0       	ldi	r19, 0x02	; 2
     dde:	b9 01       	movw	r22, r18
     de0:	0e 94 ae 06 	call	0xd5c	; 0xd5c <_ZN6StreamlsEPKc>
     de4:	ac 01       	movw	r20, r24
     de6:	e9 81       	ldd	r30, Y+1	; 0x01
     de8:	fa 81       	ldd	r31, Y+2	; 0x02
     dea:	81 81       	ldd	r24, Z+1	; 0x01
     dec:	28 2f       	mov	r18, r24
     dee:	30 e0       	ldi	r19, 0x00	; 0
     df0:	ca 01       	movw	r24, r20
     df2:	b9 01       	movw	r22, r18
     df4:	0e 94 96 06 	call	0xd2c	; 0xd2c <_ZN6StreamlsEi>
     df8:	25 e1       	ldi	r18, 0x15	; 21
     dfa:	32 e0       	ldi	r19, 0x02	; 2
     dfc:	b9 01       	movw	r22, r18
     dfe:	0e 94 ae 06 	call	0xd5c	; 0xd5c <_ZN6StreamlsEPKc>
     e02:	62 e0       	ldi	r22, 0x02	; 2
     e04:	70 e0       	ldi	r23, 0x00	; 0
     e06:	0e 94 c6 06 	call	0xd8c	; 0xd8c <_ZN6StreamlsEj>
     e0a:	98 c0       	rjmp	.+304    	; 0xf3c <_Z12treat_packetR6Packet+0x180>
		return ;
	}
	switch (p.cmd_id)
     e0c:	e9 81       	ldd	r30, Y+1	; 0x01
     e0e:	fa 81       	ldd	r31, Y+2	; 0x02
     e10:	80 81       	ld	r24, Z
     e12:	28 2f       	mov	r18, r24
     e14:	30 e0       	ldi	r19, 0x00	; 0
     e16:	3c 83       	std	Y+4, r19	; 0x04
     e18:	2b 83       	std	Y+3, r18	; 0x03
     e1a:	8b 81       	ldd	r24, Y+3	; 0x03
     e1c:	9c 81       	ldd	r25, Y+4	; 0x04
     e1e:	82 30       	cpi	r24, 0x02	; 2
     e20:	91 05       	cpc	r25, r1
     e22:	b9 f1       	breq	.+110    	; 0xe92 <_Z12treat_packetR6Packet+0xd6>
     e24:	2b 81       	ldd	r18, Y+3	; 0x03
     e26:	3c 81       	ldd	r19, Y+4	; 0x04
     e28:	23 30       	cpi	r18, 0x03	; 3
     e2a:	31 05       	cpc	r19, r1
     e2c:	34 f4       	brge	.+12     	; 0xe3a <_Z12treat_packetR6Packet+0x7e>
     e2e:	8b 81       	ldd	r24, Y+3	; 0x03
     e30:	9c 81       	ldd	r25, Y+4	; 0x04
     e32:	81 30       	cpi	r24, 0x01	; 1
     e34:	91 05       	cpc	r25, r1
     e36:	71 f0       	breq	.+28     	; 0xe54 <_Z12treat_packetR6Packet+0x98>
     e38:	81 c0       	rjmp	.+258    	; 0xf3c <_Z12treat_packetR6Packet+0x180>
     e3a:	2b 81       	ldd	r18, Y+3	; 0x03
     e3c:	3c 81       	ldd	r19, Y+4	; 0x04
     e3e:	23 30       	cpi	r18, 0x03	; 3
     e40:	31 05       	cpc	r19, r1
     e42:	09 f4       	brne	.+2      	; 0xe46 <_Z12treat_packetR6Packet+0x8a>
     e44:	46 c0       	rjmp	.+140    	; 0xed2 <_Z12treat_packetR6Packet+0x116>
     e46:	8b 81       	ldd	r24, Y+3	; 0x03
     e48:	9c 81       	ldd	r25, Y+4	; 0x04
     e4a:	84 30       	cpi	r24, 0x04	; 4
     e4c:	91 05       	cpc	r25, r1
     e4e:	09 f4       	brne	.+2      	; 0xe52 <_Z12treat_packetR6Packet+0x96>
     e50:	60 c0       	rjmp	.+192    	; 0xf12 <_Z12treat_packetR6Packet+0x156>
     e52:	74 c0       	rjmp	.+232    	; 0xf3c <_Z12treat_packetR6Packet+0x180>
	{
		case Packet::SET_POS: { 
			motors[p.motor_id].set_position(p.pos,p.t);
     e54:	e9 81       	ldd	r30, Y+1	; 0x01
     e56:	fa 81       	ldd	r31, Y+2	; 0x02
     e58:	81 81       	ldd	r24, Z+1	; 0x01
     e5a:	48 2f       	mov	r20, r24
     e5c:	50 e0       	ldi	r21, 0x00	; 0
     e5e:	ca 01       	movw	r24, r20
     e60:	88 0f       	add	r24, r24
     e62:	99 1f       	adc	r25, r25
     e64:	9c 01       	movw	r18, r24
     e66:	22 0f       	add	r18, r18
     e68:	33 1f       	adc	r19, r19
     e6a:	22 0f       	add	r18, r18
     e6c:	33 1f       	adc	r19, r19
     e6e:	82 0f       	add	r24, r18
     e70:	93 1f       	adc	r25, r19
     e72:	84 0f       	add	r24, r20
     e74:	95 1f       	adc	r25, r21
     e76:	89 5c       	subi	r24, 0xC9	; 201
     e78:	9c 4f       	sbci	r25, 0xFC	; 252
     e7a:	e9 81       	ldd	r30, Y+1	; 0x01
     e7c:	fa 81       	ldd	r31, Y+2	; 0x02
     e7e:	42 81       	ldd	r20, Z+2	; 0x02
     e80:	e9 81       	ldd	r30, Y+1	; 0x01
     e82:	fa 81       	ldd	r31, Y+2	; 0x02
     e84:	23 81       	ldd	r18, Z+3	; 0x03
     e86:	34 81       	ldd	r19, Z+4	; 0x04
     e88:	64 2f       	mov	r22, r20
     e8a:	a9 01       	movw	r20, r18
     e8c:	0e 94 8c 0c 	call	0x1918	; 0x1918 <_ZN10SmartMotor12set_positionEai>
     e90:	55 c0       	rjmp	.+170    	; 0xf3c <_Z12treat_packetR6Packet+0x180>
			break;
		}
		case Packet::GET_POS: {
			p.pos = motors[p.motor_id].get_position();
     e92:	e9 81       	ldd	r30, Y+1	; 0x01
     e94:	fa 81       	ldd	r31, Y+2	; 0x02
     e96:	81 81       	ldd	r24, Z+1	; 0x01
     e98:	48 2f       	mov	r20, r24
     e9a:	50 e0       	ldi	r21, 0x00	; 0
     e9c:	ca 01       	movw	r24, r20
     e9e:	88 0f       	add	r24, r24
     ea0:	99 1f       	adc	r25, r25
     ea2:	9c 01       	movw	r18, r24
     ea4:	22 0f       	add	r18, r18
     ea6:	33 1f       	adc	r19, r19
     ea8:	22 0f       	add	r18, r18
     eaa:	33 1f       	adc	r19, r19
     eac:	82 0f       	add	r24, r18
     eae:	93 1f       	adc	r25, r19
     eb0:	84 0f       	add	r24, r20
     eb2:	95 1f       	adc	r25, r21
     eb4:	89 5c       	subi	r24, 0xC9	; 201
     eb6:	9c 4f       	sbci	r25, 0xFC	; 252
     eb8:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <_ZN10SmartMotor12get_positionEv>
     ebc:	e9 81       	ldd	r30, Y+1	; 0x01
     ebe:	fa 81       	ldd	r31, Y+2	; 0x02
     ec0:	82 83       	std	Z+2, r24	; 0x02
			proto.send(p);
     ec2:	8a e0       	ldi	r24, 0x0A	; 10
     ec4:	93 e0       	ldi	r25, 0x03	; 3
     ec6:	29 81       	ldd	r18, Y+1	; 0x01
     ec8:	3a 81       	ldd	r19, Y+2	; 0x02
     eca:	b9 01       	movw	r22, r18
     ecc:	0e 94 6e 08 	call	0x10dc	; 0x10dc <_ZN8Protocol4sendER6Packet>
     ed0:	35 c0       	rjmp	.+106    	; 0xf3c <_Z12treat_packetR6Packet+0x180>
			break;
		}
		case Packet::GET_STATUS:{
			p.status = motors[p.motor_id].is_moving();
     ed2:	e9 81       	ldd	r30, Y+1	; 0x01
     ed4:	fa 81       	ldd	r31, Y+2	; 0x02
     ed6:	81 81       	ldd	r24, Z+1	; 0x01
     ed8:	48 2f       	mov	r20, r24
     eda:	50 e0       	ldi	r21, 0x00	; 0
     edc:	ca 01       	movw	r24, r20
     ede:	88 0f       	add	r24, r24
     ee0:	99 1f       	adc	r25, r25
     ee2:	9c 01       	movw	r18, r24
     ee4:	22 0f       	add	r18, r18
     ee6:	33 1f       	adc	r19, r19
     ee8:	22 0f       	add	r18, r18
     eea:	33 1f       	adc	r19, r19
     eec:	82 0f       	add	r24, r18
     eee:	93 1f       	adc	r25, r19
     ef0:	84 0f       	add	r24, r20
     ef2:	95 1f       	adc	r25, r21
     ef4:	89 5c       	subi	r24, 0xC9	; 201
     ef6:	9c 4f       	sbci	r25, 0xFC	; 252
     ef8:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <_ZN10SmartMotor9is_movingEv>
     efc:	e9 81       	ldd	r30, Y+1	; 0x01
     efe:	fa 81       	ldd	r31, Y+2	; 0x02
     f00:	85 83       	std	Z+5, r24	; 0x05
			proto.send(p);
     f02:	8a e0       	ldi	r24, 0x0A	; 10
     f04:	93 e0       	ldi	r25, 0x03	; 3
     f06:	29 81       	ldd	r18, Y+1	; 0x01
     f08:	3a 81       	ldd	r19, Y+2	; 0x02
     f0a:	b9 01       	movw	r22, r18
     f0c:	0e 94 6e 08 	call	0x10dc	; 0x10dc <_ZN8Protocol4sendER6Packet>
     f10:	15 c0       	rjmp	.+42     	; 0xf3c <_Z12treat_packetR6Packet+0x180>
			break;
		}
		case Packet::STOP_MOTION: { 
			motors[p.motor_id].stop_motion();
     f12:	e9 81       	ldd	r30, Y+1	; 0x01
     f14:	fa 81       	ldd	r31, Y+2	; 0x02
     f16:	81 81       	ldd	r24, Z+1	; 0x01
     f18:	48 2f       	mov	r20, r24
     f1a:	50 e0       	ldi	r21, 0x00	; 0
     f1c:	ca 01       	movw	r24, r20
     f1e:	88 0f       	add	r24, r24
     f20:	99 1f       	adc	r25, r25
     f22:	9c 01       	movw	r18, r24
     f24:	22 0f       	add	r18, r18
     f26:	33 1f       	adc	r19, r19
     f28:	22 0f       	add	r18, r18
     f2a:	33 1f       	adc	r19, r19
     f2c:	82 0f       	add	r24, r18
     f2e:	93 1f       	adc	r25, r19
     f30:	84 0f       	add	r24, r20
     f32:	95 1f       	adc	r25, r21
     f34:	89 5c       	subi	r24, 0xC9	; 201
     f36:	9c 4f       	sbci	r25, 0xFC	; 252
     f38:	0e 94 7c 0c 	call	0x18f8	; 0x18f8 <_ZN10SmartMotor11stop_motionEv>
			break;
		}
	}

}
     f3c:	0f 90       	pop	r0
     f3e:	0f 90       	pop	r0
     f40:	0f 90       	pop	r0
     f42:	0f 90       	pop	r0
     f44:	cf 91       	pop	r28
     f46:	df 91       	pop	r29
     f48:	08 95       	ret

00000f4a <appControl>:

// This is the main loop
TICK_COUNT appControl(LOOP_COUNT loopCount, TICK_COUNT loopStart) {
     f4a:	df 93       	push	r29
     f4c:	cf 93       	push	r28
     f4e:	cd b7       	in	r28, 0x3d	; 61
     f50:	de b7       	in	r29, 0x3e	; 62
     f52:	66 97       	sbiw	r28, 0x16	; 22
     f54:	0f b6       	in	r0, 0x3f	; 63
     f56:	f8 94       	cli
     f58:	de bf       	out	0x3e, r29	; 62
     f5a:	0f be       	out	0x3f, r0	; 63
     f5c:	cd bf       	out	0x3d, r28	; 61
     f5e:	6e 87       	std	Y+14, r22	; 0x0e
     f60:	7f 87       	std	Y+15, r23	; 0x0f
     f62:	88 8b       	std	Y+16, r24	; 0x10
     f64:	99 8b       	std	Y+17, r25	; 0x11
     f66:	2a 8b       	std	Y+18, r18	; 0x12
     f68:	3b 8b       	std	Y+19, r19	; 0x13
     f6a:	4c 8b       	std	Y+20, r20	; 0x14
     f6c:	5d 8b       	std	Y+21, r21	; 0x15

	Packet p;
     f6e:	ce 01       	movw	r24, r28
     f70:	03 96       	adiw	r24, 0x03	; 3
     f72:	0e 94 51 08 	call	0x10a2	; 0x10a2 <_ZN6PacketC1Ev>
     f76:	04 c0       	rjmp	.+8      	; 0xf80 <appControl+0x36>

	while(proto.treatIO(p) == 1)
	{
		treat_packet(p);
     f78:	ce 01       	movw	r24, r28
     f7a:	03 96       	adiw	r24, 0x03	; 3
     f7c:	0e 94 de 06 	call	0xdbc	; 0xdbc <_Z12treat_packetR6Packet>
// This is the main loop
TICK_COUNT appControl(LOOP_COUNT loopCount, TICK_COUNT loopStart) {

	Packet p;

	while(proto.treatIO(p) == 1)
     f80:	8a e0       	ldi	r24, 0x0A	; 10
     f82:	93 e0       	ldi	r25, 0x03	; 3
     f84:	9e 01       	movw	r18, r28
     f86:	2d 5f       	subi	r18, 0xFD	; 253
     f88:	3f 4f       	sbci	r19, 0xFF	; 255
     f8a:	b9 01       	movw	r22, r18
     f8c:	0e 94 27 0a 	call	0x144e	; 0x144e <_ZN8Protocol7treatIOER6Packet>
     f90:	1e 8a       	std	Y+22, r1	; 0x16
     f92:	81 30       	cpi	r24, 0x01	; 1
     f94:	91 05       	cpc	r25, r1
     f96:	11 f4       	brne	.+4      	; 0xf9c <appControl+0x52>
     f98:	81 e0       	ldi	r24, 0x01	; 1
     f9a:	8e 8b       	std	Y+22, r24	; 0x16
     f9c:	8e 89       	ldd	r24, Y+22	; 0x16
     f9e:	88 23       	and	r24, r24
     fa0:	59 f7       	brne	.-42     	; 0xf78 <appControl+0x2e>
	{
		treat_packet(p);
	}

	for (int i = 0; i < sizeof(motors)/sizeof(SmartMotor); i++)
     fa2:	1a 82       	std	Y+2, r1	; 0x02
     fa4:	19 82       	std	Y+1, r1	; 0x01
     fa6:	17 c0       	rjmp	.+46     	; 0xfd6 <appControl+0x8c>
	{
		motors[i].compute();
     fa8:	49 81       	ldd	r20, Y+1	; 0x01
     faa:	5a 81       	ldd	r21, Y+2	; 0x02
     fac:	ca 01       	movw	r24, r20
     fae:	88 0f       	add	r24, r24
     fb0:	99 1f       	adc	r25, r25
     fb2:	9c 01       	movw	r18, r24
     fb4:	22 0f       	add	r18, r18
     fb6:	33 1f       	adc	r19, r19
     fb8:	22 0f       	add	r18, r18
     fba:	33 1f       	adc	r19, r19
     fbc:	82 0f       	add	r24, r18
     fbe:	93 1f       	adc	r25, r19
     fc0:	84 0f       	add	r24, r20
     fc2:	95 1f       	adc	r25, r21
     fc4:	89 5c       	subi	r24, 0xC9	; 201
     fc6:	9c 4f       	sbci	r25, 0xFC	; 252
     fc8:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <_ZN10SmartMotor7computeEv>
	while(proto.treatIO(p) == 1)
	{
		treat_packet(p);
	}

	for (int i = 0; i < sizeof(motors)/sizeof(SmartMotor); i++)
     fcc:	89 81       	ldd	r24, Y+1	; 0x01
     fce:	9a 81       	ldd	r25, Y+2	; 0x02
     fd0:	01 96       	adiw	r24, 0x01	; 1
     fd2:	9a 83       	std	Y+2, r25	; 0x02
     fd4:	89 83       	std	Y+1, r24	; 0x01
     fd6:	89 81       	ldd	r24, Y+1	; 0x01
     fd8:	9a 81       	ldd	r25, Y+2	; 0x02
     fda:	82 30       	cpi	r24, 0x02	; 2
     fdc:	91 05       	cpc	r25, r1
     fde:	20 f3       	brcs	.-56     	; 0xfa8 <appControl+0x5e>
	{
		motors[i].compute();
	}

  	return HEXAPOD_LOOP_DURATION;
     fe0:	80 e2       	ldi	r24, 0x20	; 32
     fe2:	9e e4       	ldi	r25, 0x4E	; 78
     fe4:	a0 e0       	ldi	r26, 0x00	; 0
     fe6:	b0 e0       	ldi	r27, 0x00	; 0
}
     fe8:	bc 01       	movw	r22, r24
     fea:	cd 01       	movw	r24, r26
     fec:	66 96       	adiw	r28, 0x16	; 22
     fee:	0f b6       	in	r0, 0x3f	; 63
     ff0:	f8 94       	cli
     ff2:	de bf       	out	0x3e, r29	; 62
     ff4:	0f be       	out	0x3f, r0	; 63
     ff6:	cd bf       	out	0x3d, r28	; 61
     ff8:	cf 91       	pop	r28
     ffa:	df 91       	pop	r29
     ffc:	08 95       	ret

00000ffe <appInitSoftware>:
	initHardware();
}


// Initialise the software
TICK_COUNT appInitSoftware(TICK_COUNT loopStart) {
     ffe:	df 93       	push	r29
    1000:	cf 93       	push	r28
    1002:	00 d0       	rcall	.+0      	; 0x1004 <appInitSoftware+0x6>
    1004:	00 d0       	rcall	.+0      	; 0x1006 <appInitSoftware+0x8>
    1006:	cd b7       	in	r28, 0x3d	; 61
    1008:	de b7       	in	r29, 0x3e	; 62
    100a:	69 83       	std	Y+1, r22	; 0x01
    100c:	7a 83       	std	Y+2, r23	; 0x02
    100e:	8b 83       	std	Y+3, r24	; 0x03
    1010:	9c 83       	std	Y+4, r25	; 0x04

	proto.init(&uart1);
    1012:	8a e0       	ldi	r24, 0x0A	; 10
    1014:	93 e0       	ldi	r25, 0x03	; 3
    1016:	2a ef       	ldi	r18, 0xFA	; 250
    1018:	33 e0       	ldi	r19, 0x03	; 3
    101a:	b9 01       	movw	r22, r18
    101c:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <_ZN8Protocol4initEP6UartHW>

	motors[0].link_servo(servo1);
    1020:	87 e3       	ldi	r24, 0x37	; 55
    1022:	93 e0       	ldi	r25, 0x03	; 3
    1024:	2c ee       	ldi	r18, 0xEC	; 236
    1026:	33 e0       	ldi	r19, 0x03	; 3
    1028:	b9 01       	movw	r22, r18
    102a:	0e 94 34 0c 	call	0x1868	; 0x1868 <_ZN10SmartMotor10link_servoER5Servo>

	motors[1].link_servo(servo2);
    102e:	82 e4       	ldi	r24, 0x42	; 66
    1030:	93 e0       	ldi	r25, 0x03	; 3
    1032:	20 ef       	ldi	r18, 0xF0	; 240
    1034:	33 e0       	ldi	r19, 0x03	; 3
    1036:	b9 01       	movw	r22, r18
    1038:	0e 94 34 0c 	call	0x1868	; 0x1868 <_ZN10SmartMotor10link_servoER5Servo>

	return 0;
    103c:	80 e0       	ldi	r24, 0x00	; 0
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	a0 e0       	ldi	r26, 0x00	; 0
    1042:	b0 e0       	ldi	r27, 0x00	; 0
}
    1044:	bc 01       	movw	r22, r24
    1046:	cd 01       	movw	r24, r26
    1048:	0f 90       	pop	r0
    104a:	0f 90       	pop	r0
    104c:	0f 90       	pop	r0
    104e:	0f 90       	pop	r0
    1050:	cf 91       	pop	r28
    1052:	df 91       	pop	r29
    1054:	08 95       	ret

00001056 <appInitHardware>:
Protocol proto;

SmartMotor motors[2];

// Initialise the hardware
void appInitHardware(void) {
    1056:	df 93       	push	r29
    1058:	cf 93       	push	r28
    105a:	cd b7       	in	r28, 0x3d	; 61
    105c:	de b7       	in	r29, 0x3e	; 62
	initHardware();
    105e:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <initHardware>
}
    1062:	cf 91       	pop	r28
    1064:	df 91       	pop	r29
    1066:	08 95       	ret

00001068 <_ZN6PacketC2Ev>:
#include "protocol.h"

#include <stdlib.h>


Packet::Packet()
    1068:	df 93       	push	r29
    106a:	cf 93       	push	r28
    106c:	00 d0       	rcall	.+0      	; 0x106e <_ZN6PacketC2Ev+0x6>
    106e:	cd b7       	in	r28, 0x3d	; 61
    1070:	de b7       	in	r29, 0x3e	; 62
    1072:	9a 83       	std	Y+2, r25	; 0x02
    1074:	89 83       	std	Y+1, r24	; 0x01
{
	cmd_id = 0;
    1076:	e9 81       	ldd	r30, Y+1	; 0x01
    1078:	fa 81       	ldd	r31, Y+2	; 0x02
    107a:	10 82       	st	Z, r1
	motor_id = 0;
    107c:	e9 81       	ldd	r30, Y+1	; 0x01
    107e:	fa 81       	ldd	r31, Y+2	; 0x02
    1080:	11 82       	std	Z+1, r1	; 0x01
	pos = 0;
    1082:	e9 81       	ldd	r30, Y+1	; 0x01
    1084:	fa 81       	ldd	r31, Y+2	; 0x02
    1086:	12 82       	std	Z+2, r1	; 0x02
	t = 0;
    1088:	e9 81       	ldd	r30, Y+1	; 0x01
    108a:	fa 81       	ldd	r31, Y+2	; 0x02
    108c:	14 82       	std	Z+4, r1	; 0x04
    108e:	13 82       	std	Z+3, r1	; 0x03

	status = Packet::STOP;
    1090:	e9 81       	ldd	r30, Y+1	; 0x01
    1092:	fa 81       	ldd	r31, Y+2	; 0x02
    1094:	81 e0       	ldi	r24, 0x01	; 1
    1096:	85 83       	std	Z+5, r24	; 0x05

	//command_len = {5, 2, 2, 2};
}
    1098:	0f 90       	pop	r0
    109a:	0f 90       	pop	r0
    109c:	cf 91       	pop	r28
    109e:	df 91       	pop	r29
    10a0:	08 95       	ret

000010a2 <_ZN6PacketC1Ev>:
#include "protocol.h"

#include <stdlib.h>


Packet::Packet()
    10a2:	df 93       	push	r29
    10a4:	cf 93       	push	r28
    10a6:	00 d0       	rcall	.+0      	; 0x10a8 <_ZN6PacketC1Ev+0x6>
    10a8:	cd b7       	in	r28, 0x3d	; 61
    10aa:	de b7       	in	r29, 0x3e	; 62
    10ac:	9a 83       	std	Y+2, r25	; 0x02
    10ae:	89 83       	std	Y+1, r24	; 0x01
{
	cmd_id = 0;
    10b0:	e9 81       	ldd	r30, Y+1	; 0x01
    10b2:	fa 81       	ldd	r31, Y+2	; 0x02
    10b4:	10 82       	st	Z, r1
	motor_id = 0;
    10b6:	e9 81       	ldd	r30, Y+1	; 0x01
    10b8:	fa 81       	ldd	r31, Y+2	; 0x02
    10ba:	11 82       	std	Z+1, r1	; 0x01
	pos = 0;
    10bc:	e9 81       	ldd	r30, Y+1	; 0x01
    10be:	fa 81       	ldd	r31, Y+2	; 0x02
    10c0:	12 82       	std	Z+2, r1	; 0x02
	t = 0;
    10c2:	e9 81       	ldd	r30, Y+1	; 0x01
    10c4:	fa 81       	ldd	r31, Y+2	; 0x02
    10c6:	14 82       	std	Z+4, r1	; 0x04
    10c8:	13 82       	std	Z+3, r1	; 0x03

	status = Packet::STOP;
    10ca:	e9 81       	ldd	r30, Y+1	; 0x01
    10cc:	fa 81       	ldd	r31, Y+2	; 0x02
    10ce:	81 e0       	ldi	r24, 0x01	; 1
    10d0:	85 83       	std	Z+5, r24	; 0x05

	//command_len = {5, 2, 2, 2};
}
    10d2:	0f 90       	pop	r0
    10d4:	0f 90       	pop	r0
    10d6:	cf 91       	pop	r28
    10d8:	df 91       	pop	r29
    10da:	08 95       	ret

000010dc <_ZN8Protocol4sendER6Packet>:
//////////////////////////////////////////
//
// PRIVATE
//////////////////////////////////////////////

void Protocol::send(Packet &p)
    10dc:	df 93       	push	r29
    10de:	cf 93       	push	r28
    10e0:	00 d0       	rcall	.+0      	; 0x10e2 <_ZN8Protocol4sendER6Packet+0x6>
    10e2:	00 d0       	rcall	.+0      	; 0x10e4 <_ZN8Protocol4sendER6Packet+0x8>
    10e4:	00 d0       	rcall	.+0      	; 0x10e6 <_ZN8Protocol4sendER6Packet+0xa>
    10e6:	cd b7       	in	r28, 0x3d	; 61
    10e8:	de b7       	in	r29, 0x3e	; 62
    10ea:	9a 83       	std	Y+2, r25	; 0x02
    10ec:	89 83       	std	Y+1, r24	; 0x01
    10ee:	7c 83       	std	Y+4, r23	; 0x04
    10f0:	6b 83       	std	Y+3, r22	; 0x03
{
	switch (p.cmd_id)
    10f2:	eb 81       	ldd	r30, Y+3	; 0x03
    10f4:	fc 81       	ldd	r31, Y+4	; 0x04
    10f6:	80 81       	ld	r24, Z
    10f8:	28 2f       	mov	r18, r24
    10fa:	30 e0       	ldi	r19, 0x00	; 0
    10fc:	3e 83       	std	Y+6, r19	; 0x06
    10fe:	2d 83       	std	Y+5, r18	; 0x05
    1100:	8d 81       	ldd	r24, Y+5	; 0x05
    1102:	9e 81       	ldd	r25, Y+6	; 0x06
    1104:	82 30       	cpi	r24, 0x02	; 2
    1106:	91 05       	cpc	r25, r1
    1108:	39 f0       	breq	.+14     	; 0x1118 <_ZN8Protocol4sendER6Packet+0x3c>
    110a:	2d 81       	ldd	r18, Y+5	; 0x05
    110c:	3e 81       	ldd	r19, Y+6	; 0x06
    110e:	23 30       	cpi	r18, 0x03	; 3
    1110:	31 05       	cpc	r19, r1
    1112:	09 f4       	brne	.+2      	; 0x1116 <_ZN8Protocol4sendER6Packet+0x3a>
    1114:	3f c0       	rjmp	.+126    	; 0x1194 <_ZN8Protocol4sendER6Packet+0xb8>
    1116:	7a c0       	rjmp	.+244    	; 0x120c <_ZN8Protocol4sendER6Packet+0x130>
	{
		case Packet::SET_POS :{
			break;
		}
		case Packet::GET_POS: {
			out[out_offset++] = p.cmd_id;
    1118:	e9 81       	ldd	r30, Y+1	; 0x01
    111a:	fa 81       	ldd	r31, Y+2	; 0x02
    111c:	53 a5       	ldd	r21, Z+43	; 0x2b
    111e:	25 2f       	mov	r18, r21
    1120:	30 e0       	ldi	r19, 0x00	; 0
    1122:	eb 81       	ldd	r30, Y+3	; 0x03
    1124:	fc 81       	ldd	r31, Y+4	; 0x04
    1126:	40 81       	ld	r20, Z
    1128:	89 81       	ldd	r24, Y+1	; 0x01
    112a:	9a 81       	ldd	r25, Y+2	; 0x02
    112c:	82 0f       	add	r24, r18
    112e:	93 1f       	adc	r25, r19
    1130:	fc 01       	movw	r30, r24
    1132:	76 96       	adiw	r30, 0x16	; 22
    1134:	40 83       	st	Z, r20
    1136:	85 2f       	mov	r24, r21
    1138:	8f 5f       	subi	r24, 0xFF	; 255
    113a:	e9 81       	ldd	r30, Y+1	; 0x01
    113c:	fa 81       	ldd	r31, Y+2	; 0x02
    113e:	83 a7       	std	Z+43, r24	; 0x2b
			out[out_offset++] = p.motor_id;
    1140:	e9 81       	ldd	r30, Y+1	; 0x01
    1142:	fa 81       	ldd	r31, Y+2	; 0x02
    1144:	53 a5       	ldd	r21, Z+43	; 0x2b
    1146:	25 2f       	mov	r18, r21
    1148:	30 e0       	ldi	r19, 0x00	; 0
    114a:	eb 81       	ldd	r30, Y+3	; 0x03
    114c:	fc 81       	ldd	r31, Y+4	; 0x04
    114e:	41 81       	ldd	r20, Z+1	; 0x01
    1150:	89 81       	ldd	r24, Y+1	; 0x01
    1152:	9a 81       	ldd	r25, Y+2	; 0x02
    1154:	82 0f       	add	r24, r18
    1156:	93 1f       	adc	r25, r19
    1158:	fc 01       	movw	r30, r24
    115a:	76 96       	adiw	r30, 0x16	; 22
    115c:	40 83       	st	Z, r20
    115e:	85 2f       	mov	r24, r21
    1160:	8f 5f       	subi	r24, 0xFF	; 255
    1162:	e9 81       	ldd	r30, Y+1	; 0x01
    1164:	fa 81       	ldd	r31, Y+2	; 0x02
    1166:	83 a7       	std	Z+43, r24	; 0x2b
			out[out_offset++] = p.pos;
    1168:	e9 81       	ldd	r30, Y+1	; 0x01
    116a:	fa 81       	ldd	r31, Y+2	; 0x02
    116c:	53 a5       	ldd	r21, Z+43	; 0x2b
    116e:	25 2f       	mov	r18, r21
    1170:	30 e0       	ldi	r19, 0x00	; 0
    1172:	eb 81       	ldd	r30, Y+3	; 0x03
    1174:	fc 81       	ldd	r31, Y+4	; 0x04
    1176:	82 81       	ldd	r24, Z+2	; 0x02
    1178:	48 2f       	mov	r20, r24
    117a:	89 81       	ldd	r24, Y+1	; 0x01
    117c:	9a 81       	ldd	r25, Y+2	; 0x02
    117e:	82 0f       	add	r24, r18
    1180:	93 1f       	adc	r25, r19
    1182:	fc 01       	movw	r30, r24
    1184:	76 96       	adiw	r30, 0x16	; 22
    1186:	40 83       	st	Z, r20
    1188:	85 2f       	mov	r24, r21
    118a:	8f 5f       	subi	r24, 0xFF	; 255
    118c:	e9 81       	ldd	r30, Y+1	; 0x01
    118e:	fa 81       	ldd	r31, Y+2	; 0x02
    1190:	83 a7       	std	Z+43, r24	; 0x2b
    1192:	3c c0       	rjmp	.+120    	; 0x120c <_ZN8Protocol4sendER6Packet+0x130>
			break;
		}
		case Packet::GET_STATUS:{
			out[out_offset++] = p.cmd_id;
    1194:	e9 81       	ldd	r30, Y+1	; 0x01
    1196:	fa 81       	ldd	r31, Y+2	; 0x02
    1198:	53 a5       	ldd	r21, Z+43	; 0x2b
    119a:	25 2f       	mov	r18, r21
    119c:	30 e0       	ldi	r19, 0x00	; 0
    119e:	eb 81       	ldd	r30, Y+3	; 0x03
    11a0:	fc 81       	ldd	r31, Y+4	; 0x04
    11a2:	40 81       	ld	r20, Z
    11a4:	89 81       	ldd	r24, Y+1	; 0x01
    11a6:	9a 81       	ldd	r25, Y+2	; 0x02
    11a8:	82 0f       	add	r24, r18
    11aa:	93 1f       	adc	r25, r19
    11ac:	fc 01       	movw	r30, r24
    11ae:	76 96       	adiw	r30, 0x16	; 22
    11b0:	40 83       	st	Z, r20
    11b2:	85 2f       	mov	r24, r21
    11b4:	8f 5f       	subi	r24, 0xFF	; 255
    11b6:	e9 81       	ldd	r30, Y+1	; 0x01
    11b8:	fa 81       	ldd	r31, Y+2	; 0x02
    11ba:	83 a7       	std	Z+43, r24	; 0x2b
			out[out_offset++] = p.motor_id;
    11bc:	e9 81       	ldd	r30, Y+1	; 0x01
    11be:	fa 81       	ldd	r31, Y+2	; 0x02
    11c0:	53 a5       	ldd	r21, Z+43	; 0x2b
    11c2:	25 2f       	mov	r18, r21
    11c4:	30 e0       	ldi	r19, 0x00	; 0
    11c6:	eb 81       	ldd	r30, Y+3	; 0x03
    11c8:	fc 81       	ldd	r31, Y+4	; 0x04
    11ca:	41 81       	ldd	r20, Z+1	; 0x01
    11cc:	89 81       	ldd	r24, Y+1	; 0x01
    11ce:	9a 81       	ldd	r25, Y+2	; 0x02
    11d0:	82 0f       	add	r24, r18
    11d2:	93 1f       	adc	r25, r19
    11d4:	fc 01       	movw	r30, r24
    11d6:	76 96       	adiw	r30, 0x16	; 22
    11d8:	40 83       	st	Z, r20
    11da:	85 2f       	mov	r24, r21
    11dc:	8f 5f       	subi	r24, 0xFF	; 255
    11de:	e9 81       	ldd	r30, Y+1	; 0x01
    11e0:	fa 81       	ldd	r31, Y+2	; 0x02
    11e2:	83 a7       	std	Z+43, r24	; 0x2b
			out[out_offset++] = p.status;
    11e4:	e9 81       	ldd	r30, Y+1	; 0x01
    11e6:	fa 81       	ldd	r31, Y+2	; 0x02
    11e8:	53 a5       	ldd	r21, Z+43	; 0x2b
    11ea:	25 2f       	mov	r18, r21
    11ec:	30 e0       	ldi	r19, 0x00	; 0
    11ee:	eb 81       	ldd	r30, Y+3	; 0x03
    11f0:	fc 81       	ldd	r31, Y+4	; 0x04
    11f2:	45 81       	ldd	r20, Z+5	; 0x05
    11f4:	89 81       	ldd	r24, Y+1	; 0x01
    11f6:	9a 81       	ldd	r25, Y+2	; 0x02
    11f8:	82 0f       	add	r24, r18
    11fa:	93 1f       	adc	r25, r19
    11fc:	fc 01       	movw	r30, r24
    11fe:	76 96       	adiw	r30, 0x16	; 22
    1200:	40 83       	st	Z, r20
    1202:	85 2f       	mov	r24, r21
    1204:	8f 5f       	subi	r24, 0xFF	; 255
    1206:	e9 81       	ldd	r30, Y+1	; 0x01
    1208:	fa 81       	ldd	r31, Y+2	; 0x02
    120a:	83 a7       	std	Z+43, r24	; 0x2b
		}
		case Packet::STOP_MOTION: { 
			break;
		}
	}	
}
    120c:	26 96       	adiw	r28, 0x06	; 6
    120e:	0f b6       	in	r0, 0x3f	; 63
    1210:	f8 94       	cli
    1212:	de bf       	out	0x3e, r29	; 62
    1214:	0f be       	out	0x3f, r0	; 63
    1216:	cd bf       	out	0x3d, r28	; 61
    1218:	cf 91       	pop	r28
    121a:	df 91       	pop	r29
    121c:	08 95       	ret

0000121e <_ZN8Protocol5forgeER6Packet>:

void Protocol::forge(Packet &p)
    121e:	df 93       	push	r29
    1220:	cf 93       	push	r28
    1222:	00 d0       	rcall	.+0      	; 0x1224 <_ZN8Protocol5forgeER6Packet+0x6>
    1224:	00 d0       	rcall	.+0      	; 0x1226 <_ZN8Protocol5forgeER6Packet+0x8>
    1226:	00 d0       	rcall	.+0      	; 0x1228 <_ZN8Protocol5forgeER6Packet+0xa>
    1228:	cd b7       	in	r28, 0x3d	; 61
    122a:	de b7       	in	r29, 0x3e	; 62
    122c:	9a 83       	std	Y+2, r25	; 0x02
    122e:	89 83       	std	Y+1, r24	; 0x01
    1230:	7c 83       	std	Y+4, r23	; 0x04
    1232:	6b 83       	std	Y+3, r22	; 0x03
{
	switch (in[0])
    1234:	e9 81       	ldd	r30, Y+1	; 0x01
    1236:	fa 81       	ldd	r31, Y+2	; 0x02
    1238:	82 81       	ldd	r24, Z+2	; 0x02
    123a:	28 2f       	mov	r18, r24
    123c:	30 e0       	ldi	r19, 0x00	; 0
    123e:	3e 83       	std	Y+6, r19	; 0x06
    1240:	2d 83       	std	Y+5, r18	; 0x05
    1242:	8d 81       	ldd	r24, Y+5	; 0x05
    1244:	9e 81       	ldd	r25, Y+6	; 0x06
    1246:	82 30       	cpi	r24, 0x02	; 2
    1248:	91 05       	cpc	r25, r1
    124a:	e9 f1       	breq	.+122    	; 0x12c6 <_ZN8Protocol5forgeER6Packet+0xa8>
    124c:	2d 81       	ldd	r18, Y+5	; 0x05
    124e:	3e 81       	ldd	r19, Y+6	; 0x06
    1250:	23 30       	cpi	r18, 0x03	; 3
    1252:	31 05       	cpc	r19, r1
    1254:	34 f4       	brge	.+12     	; 0x1262 <_ZN8Protocol5forgeER6Packet+0x44>
    1256:	8d 81       	ldd	r24, Y+5	; 0x05
    1258:	9e 81       	ldd	r25, Y+6	; 0x06
    125a:	81 30       	cpi	r24, 0x01	; 1
    125c:	91 05       	cpc	r25, r1
    125e:	69 f0       	breq	.+26     	; 0x127a <_ZN8Protocol5forgeER6Packet+0x5c>
    1260:	58 c0       	rjmp	.+176    	; 0x1312 <_ZN8Protocol5forgeER6Packet+0xf4>
    1262:	2d 81       	ldd	r18, Y+5	; 0x05
    1264:	3e 81       	ldd	r19, Y+6	; 0x06
    1266:	23 30       	cpi	r18, 0x03	; 3
    1268:	31 05       	cpc	r19, r1
    126a:	d1 f1       	breq	.+116    	; 0x12e0 <_ZN8Protocol5forgeER6Packet+0xc2>
    126c:	8d 81       	ldd	r24, Y+5	; 0x05
    126e:	9e 81       	ldd	r25, Y+6	; 0x06
    1270:	84 30       	cpi	r24, 0x04	; 4
    1272:	91 05       	cpc	r25, r1
    1274:	09 f4       	brne	.+2      	; 0x1278 <_ZN8Protocol5forgeER6Packet+0x5a>
    1276:	41 c0       	rjmp	.+130    	; 0x12fa <_ZN8Protocol5forgeER6Packet+0xdc>
    1278:	4c c0       	rjmp	.+152    	; 0x1312 <_ZN8Protocol5forgeER6Packet+0xf4>
	{
		case Packet::SET_POS :{
			p.cmd_id = in[0];
    127a:	e9 81       	ldd	r30, Y+1	; 0x01
    127c:	fa 81       	ldd	r31, Y+2	; 0x02
    127e:	82 81       	ldd	r24, Z+2	; 0x02
    1280:	eb 81       	ldd	r30, Y+3	; 0x03
    1282:	fc 81       	ldd	r31, Y+4	; 0x04
    1284:	80 83       	st	Z, r24
			p.motor_id = in[1];
    1286:	e9 81       	ldd	r30, Y+1	; 0x01
    1288:	fa 81       	ldd	r31, Y+2	; 0x02
    128a:	83 81       	ldd	r24, Z+3	; 0x03
    128c:	eb 81       	ldd	r30, Y+3	; 0x03
    128e:	fc 81       	ldd	r31, Y+4	; 0x04
    1290:	81 83       	std	Z+1, r24	; 0x01
			p.pos = in[2];
    1292:	e9 81       	ldd	r30, Y+1	; 0x01
    1294:	fa 81       	ldd	r31, Y+2	; 0x02
    1296:	84 81       	ldd	r24, Z+4	; 0x04
    1298:	eb 81       	ldd	r30, Y+3	; 0x03
    129a:	fc 81       	ldd	r31, Y+4	; 0x04
    129c:	82 83       	std	Z+2, r24	; 0x02
			p.t = (in[3]<<8 & 0xFF00) | (in[4] & 0x00FF);
    129e:	e9 81       	ldd	r30, Y+1	; 0x01
    12a0:	fa 81       	ldd	r31, Y+2	; 0x02
    12a2:	85 81       	ldd	r24, Z+5	; 0x05
    12a4:	88 2f       	mov	r24, r24
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	98 2f       	mov	r25, r24
    12aa:	88 27       	eor	r24, r24
    12ac:	9c 01       	movw	r18, r24
    12ae:	e9 81       	ldd	r30, Y+1	; 0x01
    12b0:	fa 81       	ldd	r31, Y+2	; 0x02
    12b2:	86 81       	ldd	r24, Z+6	; 0x06
    12b4:	88 2f       	mov	r24, r24
    12b6:	90 e0       	ldi	r25, 0x00	; 0
    12b8:	82 2b       	or	r24, r18
    12ba:	93 2b       	or	r25, r19
    12bc:	eb 81       	ldd	r30, Y+3	; 0x03
    12be:	fc 81       	ldd	r31, Y+4	; 0x04
    12c0:	94 83       	std	Z+4, r25	; 0x04
    12c2:	83 83       	std	Z+3, r24	; 0x03
    12c4:	26 c0       	rjmp	.+76     	; 0x1312 <_ZN8Protocol5forgeER6Packet+0xf4>
			break;
		}
		case Packet::GET_POS: {
			p.cmd_id = in[0];
    12c6:	e9 81       	ldd	r30, Y+1	; 0x01
    12c8:	fa 81       	ldd	r31, Y+2	; 0x02
    12ca:	82 81       	ldd	r24, Z+2	; 0x02
    12cc:	eb 81       	ldd	r30, Y+3	; 0x03
    12ce:	fc 81       	ldd	r31, Y+4	; 0x04
    12d0:	80 83       	st	Z, r24
			p.motor_id = in[1];
    12d2:	e9 81       	ldd	r30, Y+1	; 0x01
    12d4:	fa 81       	ldd	r31, Y+2	; 0x02
    12d6:	83 81       	ldd	r24, Z+3	; 0x03
    12d8:	eb 81       	ldd	r30, Y+3	; 0x03
    12da:	fc 81       	ldd	r31, Y+4	; 0x04
    12dc:	81 83       	std	Z+1, r24	; 0x01
    12de:	19 c0       	rjmp	.+50     	; 0x1312 <_ZN8Protocol5forgeER6Packet+0xf4>
			//uart1<<" command "<<(int)in[0];
			break;
		}
		case Packet::GET_STATUS:{
			p.cmd_id = in[0];
    12e0:	e9 81       	ldd	r30, Y+1	; 0x01
    12e2:	fa 81       	ldd	r31, Y+2	; 0x02
    12e4:	82 81       	ldd	r24, Z+2	; 0x02
    12e6:	eb 81       	ldd	r30, Y+3	; 0x03
    12e8:	fc 81       	ldd	r31, Y+4	; 0x04
    12ea:	80 83       	st	Z, r24
			p.motor_id = in[1];
    12ec:	e9 81       	ldd	r30, Y+1	; 0x01
    12ee:	fa 81       	ldd	r31, Y+2	; 0x02
    12f0:	83 81       	ldd	r24, Z+3	; 0x03
    12f2:	eb 81       	ldd	r30, Y+3	; 0x03
    12f4:	fc 81       	ldd	r31, Y+4	; 0x04
    12f6:	81 83       	std	Z+1, r24	; 0x01
    12f8:	0c c0       	rjmp	.+24     	; 0x1312 <_ZN8Protocol5forgeER6Packet+0xf4>
			break;
		}
		case Packet::STOP_MOTION: { 
			p.cmd_id = in[0];
    12fa:	e9 81       	ldd	r30, Y+1	; 0x01
    12fc:	fa 81       	ldd	r31, Y+2	; 0x02
    12fe:	82 81       	ldd	r24, Z+2	; 0x02
    1300:	eb 81       	ldd	r30, Y+3	; 0x03
    1302:	fc 81       	ldd	r31, Y+4	; 0x04
    1304:	80 83       	st	Z, r24
			p.motor_id = in[1];
    1306:	e9 81       	ldd	r30, Y+1	; 0x01
    1308:	fa 81       	ldd	r31, Y+2	; 0x02
    130a:	83 81       	ldd	r24, Z+3	; 0x03
    130c:	eb 81       	ldd	r30, Y+3	; 0x03
    130e:	fc 81       	ldd	r31, Y+4	; 0x04
    1310:	81 83       	std	Z+1, r24	; 0x01
			break;
		}
	}	
}
    1312:	26 96       	adiw	r28, 0x06	; 6
    1314:	0f b6       	in	r0, 0x3f	; 63
    1316:	f8 94       	cli
    1318:	de bf       	out	0x3e, r29	; 62
    131a:	0f be       	out	0x3f, r0	; 63
    131c:	cd bf       	out	0x3d, r28	; 61
    131e:	cf 91       	pop	r28
    1320:	df 91       	pop	r29
    1322:	08 95       	ret

00001324 <_ZN8Protocol6_writeEPhi>:


void Protocol::_write(uint8_t *data, int size)
    1324:	df 93       	push	r29
    1326:	cf 93       	push	r28
    1328:	cd b7       	in	r28, 0x3d	; 61
    132a:	de b7       	in	r29, 0x3e	; 62
    132c:	28 97       	sbiw	r28, 0x08	; 8
    132e:	0f b6       	in	r0, 0x3f	; 63
    1330:	f8 94       	cli
    1332:	de bf       	out	0x3e, r29	; 62
    1334:	0f be       	out	0x3f, r0	; 63
    1336:	cd bf       	out	0x3d, r28	; 61
    1338:	9c 83       	std	Y+4, r25	; 0x04
    133a:	8b 83       	std	Y+3, r24	; 0x03
    133c:	7e 83       	std	Y+6, r23	; 0x06
    133e:	6d 83       	std	Y+5, r22	; 0x05
    1340:	58 87       	std	Y+8, r21	; 0x08
    1342:	4f 83       	std	Y+7, r20	; 0x07
{
	uint8_t *p = data;
    1344:	8d 81       	ldd	r24, Y+5	; 0x05
    1346:	9e 81       	ldd	r25, Y+6	; 0x06
    1348:	9a 83       	std	Y+2, r25	; 0x02
    134a:	89 83       	std	Y+1, r24	; 0x01
    134c:	19 c0       	rjmp	.+50     	; 0x1380 <_ZN8Protocol6_writeEPhi+0x5c>
	while(p-data < size)
	{
		_uart->write(*p);
    134e:	eb 81       	ldd	r30, Y+3	; 0x03
    1350:	fc 81       	ldd	r31, Y+4	; 0x04
    1352:	01 90       	ld	r0, Z+
    1354:	f0 81       	ld	r31, Z
    1356:	e0 2d       	mov	r30, r0
    1358:	01 90       	ld	r0, Z+
    135a:	f0 81       	ld	r31, Z
    135c:	e0 2d       	mov	r30, r0
    135e:	40 81       	ld	r20, Z
    1360:	51 81       	ldd	r21, Z+1	; 0x01
    1362:	eb 81       	ldd	r30, Y+3	; 0x03
    1364:	fc 81       	ldd	r31, Y+4	; 0x04
    1366:	80 81       	ld	r24, Z
    1368:	91 81       	ldd	r25, Z+1	; 0x01
    136a:	e9 81       	ldd	r30, Y+1	; 0x01
    136c:	fa 81       	ldd	r31, Y+2	; 0x02
    136e:	20 81       	ld	r18, Z
    1370:	62 2f       	mov	r22, r18
    1372:	fa 01       	movw	r30, r20
    1374:	09 95       	icall
		p++;
    1376:	89 81       	ldd	r24, Y+1	; 0x01
    1378:	9a 81       	ldd	r25, Y+2	; 0x02
    137a:	01 96       	adiw	r24, 0x01	; 1
    137c:	9a 83       	std	Y+2, r25	; 0x02
    137e:	89 83       	std	Y+1, r24	; 0x01


void Protocol::_write(uint8_t *data, int size)
{
	uint8_t *p = data;
	while(p-data < size)
    1380:	29 81       	ldd	r18, Y+1	; 0x01
    1382:	3a 81       	ldd	r19, Y+2	; 0x02
    1384:	8d 81       	ldd	r24, Y+5	; 0x05
    1386:	9e 81       	ldd	r25, Y+6	; 0x06
    1388:	28 1b       	sub	r18, r24
    138a:	39 0b       	sbc	r19, r25
    138c:	8f 81       	ldd	r24, Y+7	; 0x07
    138e:	98 85       	ldd	r25, Y+8	; 0x08
    1390:	28 17       	cp	r18, r24
    1392:	39 07       	cpc	r19, r25
    1394:	e4 f2       	brlt	.-72     	; 0x134e <_ZN8Protocol6_writeEPhi+0x2a>
	{
		_uart->write(*p);
		p++;
	}
}
    1396:	28 96       	adiw	r28, 0x08	; 8
    1398:	0f b6       	in	r0, 0x3f	; 63
    139a:	f8 94       	cli
    139c:	de bf       	out	0x3e, r29	; 62
    139e:	0f be       	out	0x3f, r0	; 63
    13a0:	cd bf       	out	0x3d, r28	; 61
    13a2:	cf 91       	pop	r28
    13a4:	df 91       	pop	r29
    13a6:	08 95       	ret

000013a8 <_ZN8Protocol5_readEv>:

uint8_t Protocol::_read()
    13a8:	df 93       	push	r29
    13aa:	cf 93       	push	r28
    13ac:	00 d0       	rcall	.+0      	; 0x13ae <_ZN8Protocol5_readEv+0x6>
    13ae:	00 d0       	rcall	.+0      	; 0x13b0 <_ZN8Protocol5_readEv+0x8>
    13b0:	cd b7       	in	r28, 0x3d	; 61
    13b2:	de b7       	in	r29, 0x3e	; 62
    13b4:	9c 83       	std	Y+4, r25	; 0x04
    13b6:	8b 83       	std	Y+3, r24	; 0x03
{
	int c = -1;
    13b8:	8f ef       	ldi	r24, 0xFF	; 255
    13ba:	9f ef       	ldi	r25, 0xFF	; 255
    13bc:	9a 83       	std	Y+2, r25	; 0x02
    13be:	89 83       	std	Y+1, r24	; 0x01
    13c0:	39 c0       	rjmp	.+114    	; 0x1434 <_ZN8Protocol5_readEv+0x8c>
	//CRITICAL_SECTION{
	while(in_offset < Protocol::BUFFER_SIZE )
	{
		c = _uart->read();
    13c2:	eb 81       	ldd	r30, Y+3	; 0x03
    13c4:	fc 81       	ldd	r31, Y+4	; 0x04
    13c6:	01 90       	ld	r0, Z+
    13c8:	f0 81       	ld	r31, Z
    13ca:	e0 2d       	mov	r30, r0
    13cc:	80 81       	ld	r24, Z
    13ce:	91 81       	ldd	r25, Z+1	; 0x01
    13d0:	fc 01       	movw	r30, r24
    13d2:	32 96       	adiw	r30, 0x02	; 2
    13d4:	20 81       	ld	r18, Z
    13d6:	31 81       	ldd	r19, Z+1	; 0x01
    13d8:	eb 81       	ldd	r30, Y+3	; 0x03
    13da:	fc 81       	ldd	r31, Y+4	; 0x04
    13dc:	80 81       	ld	r24, Z
    13de:	91 81       	ldd	r25, Z+1	; 0x01
    13e0:	f9 01       	movw	r30, r18
    13e2:	09 95       	icall
    13e4:	9a 83       	std	Y+2, r25	; 0x02
    13e6:	89 83       	std	Y+1, r24	; 0x01
		if(c == -1)
    13e8:	89 81       	ldd	r24, Y+1	; 0x01
    13ea:	9a 81       	ldd	r25, Y+2	; 0x02
    13ec:	2f ef       	ldi	r18, 0xFF	; 255
    13ee:	8f 3f       	cpi	r24, 0xFF	; 255
    13f0:	92 07       	cpc	r25, r18
    13f2:	29 f1       	breq	.+74     	; 0x143e <_ZN8Protocol5_readEv+0x96>
			break;
		in[in_offset] = 0;
    13f4:	eb 81       	ldd	r30, Y+3	; 0x03
    13f6:	fc 81       	ldd	r31, Y+4	; 0x04
    13f8:	82 a5       	ldd	r24, Z+42	; 0x2a
    13fa:	28 2f       	mov	r18, r24
    13fc:	30 e0       	ldi	r19, 0x00	; 0
    13fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1400:	9c 81       	ldd	r25, Y+4	; 0x04
    1402:	82 0f       	add	r24, r18
    1404:	93 1f       	adc	r25, r19
    1406:	fc 01       	movw	r30, r24
    1408:	32 96       	adiw	r30, 0x02	; 2
    140a:	10 82       	st	Z, r1
		in[in_offset] = (uint8_t)(c & 0xFF);
    140c:	eb 81       	ldd	r30, Y+3	; 0x03
    140e:	fc 81       	ldd	r31, Y+4	; 0x04
    1410:	82 a5       	ldd	r24, Z+42	; 0x2a
    1412:	28 2f       	mov	r18, r24
    1414:	30 e0       	ldi	r19, 0x00	; 0
    1416:	49 81       	ldd	r20, Y+1	; 0x01
    1418:	8b 81       	ldd	r24, Y+3	; 0x03
    141a:	9c 81       	ldd	r25, Y+4	; 0x04
    141c:	82 0f       	add	r24, r18
    141e:	93 1f       	adc	r25, r19
    1420:	fc 01       	movw	r30, r24
    1422:	32 96       	adiw	r30, 0x02	; 2
    1424:	40 83       	st	Z, r20
		in_offset++;
    1426:	eb 81       	ldd	r30, Y+3	; 0x03
    1428:	fc 81       	ldd	r31, Y+4	; 0x04
    142a:	82 a5       	ldd	r24, Z+42	; 0x2a
    142c:	8f 5f       	subi	r24, 0xFF	; 255
    142e:	eb 81       	ldd	r30, Y+3	; 0x03
    1430:	fc 81       	ldd	r31, Y+4	; 0x04
    1432:	82 a7       	std	Z+42, r24	; 0x2a

uint8_t Protocol::_read()
{
	int c = -1;
	//CRITICAL_SECTION{
	while(in_offset < Protocol::BUFFER_SIZE )
    1434:	eb 81       	ldd	r30, Y+3	; 0x03
    1436:	fc 81       	ldd	r31, Y+4	; 0x04
    1438:	82 a5       	ldd	r24, Z+42	; 0x2a
    143a:	84 31       	cpi	r24, 0x14	; 20
    143c:	10 f2       	brcs	.-124    	; 0x13c2 <_ZN8Protocol5_readEv+0x1a>
		in[in_offset] = 0;
		in[in_offset] = (uint8_t)(c & 0xFF);
		in_offset++;
	}
	//}
	return 0;
    143e:	80 e0       	ldi	r24, 0x00	; 0
}
    1440:	0f 90       	pop	r0
    1442:	0f 90       	pop	r0
    1444:	0f 90       	pop	r0
    1446:	0f 90       	pop	r0
    1448:	cf 91       	pop	r28
    144a:	df 91       	pop	r29
    144c:	08 95       	ret

0000144e <_ZN8Protocol7treatIOER6Packet>:
			_uart->write('\n');
}



int Protocol::treatIO(Packet &p)
    144e:	df 93       	push	r29
    1450:	cf 93       	push	r28
    1452:	cd b7       	in	r28, 0x3d	; 61
    1454:	de b7       	in	r29, 0x3e	; 62
    1456:	28 97       	sbiw	r28, 0x08	; 8
    1458:	0f b6       	in	r0, 0x3f	; 63
    145a:	f8 94       	cli
    145c:	de bf       	out	0x3e, r29	; 62
    145e:	0f be       	out	0x3f, r0	; 63
    1460:	cd bf       	out	0x3d, r28	; 61
    1462:	9c 83       	std	Y+4, r25	; 0x04
    1464:	8b 83       	std	Y+3, r24	; 0x03
    1466:	7e 83       	std	Y+6, r23	; 0x06
    1468:	6d 83       	std	Y+5, r22	; 0x05
{	
	const static uint8_t command_len[] = {BUFFER_SIZE, 5, 1, 1, 1};
	
	//send waiting packet
	if(out_offset>0)
    146a:	eb 81       	ldd	r30, Y+3	; 0x03
    146c:	fc 81       	ldd	r31, Y+4	; 0x04
    146e:	83 a5       	ldd	r24, Z+43	; 0x2b
    1470:	88 23       	and	r24, r24
    1472:	99 f0       	breq	.+38     	; 0x149a <_ZN8Protocol7treatIOER6Packet+0x4c>
	{
		_write(out, out_offset);
    1474:	8b 81       	ldd	r24, Y+3	; 0x03
    1476:	9c 81       	ldd	r25, Y+4	; 0x04
    1478:	ac 01       	movw	r20, r24
    147a:	4a 5e       	subi	r20, 0xEA	; 234
    147c:	5f 4f       	sbci	r21, 0xFF	; 255
    147e:	eb 81       	ldd	r30, Y+3	; 0x03
    1480:	fc 81       	ldd	r31, Y+4	; 0x04
    1482:	83 a5       	ldd	r24, Z+43	; 0x2b
    1484:	28 2f       	mov	r18, r24
    1486:	30 e0       	ldi	r19, 0x00	; 0
    1488:	8b 81       	ldd	r24, Y+3	; 0x03
    148a:	9c 81       	ldd	r25, Y+4	; 0x04
    148c:	ba 01       	movw	r22, r20
    148e:	a9 01       	movw	r20, r18
    1490:	0e 94 92 09 	call	0x1324	; 0x1324 <_ZN8Protocol6_writeEPhi>
		out_offset = 0;
    1494:	eb 81       	ldd	r30, Y+3	; 0x03
    1496:	fc 81       	ldd	r31, Y+4	; 0x04
    1498:	13 a6       	std	Z+43, r1	; 0x2b
	}

	_read();
    149a:	8b 81       	ldd	r24, Y+3	; 0x03
    149c:	9c 81       	ldd	r25, Y+4	; 0x04
    149e:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <_ZN8Protocol5_readEv>
	uint8_t len = BUFFER_SIZE;
    14a2:	84 e1       	ldi	r24, 0x14	; 20
    14a4:	8a 83       	std	Y+2, r24	; 0x02
	//treat incomming packet
	if(in_offset>0)
    14a6:	eb 81       	ldd	r30, Y+3	; 0x03
    14a8:	fc 81       	ldd	r31, Y+4	; 0x04
    14aa:	82 a5       	ldd	r24, Z+42	; 0x2a
    14ac:	88 23       	and	r24, r24
    14ae:	09 f4       	brne	.+2      	; 0x14b2 <_ZN8Protocol7treatIOER6Packet+0x64>
    14b0:	5a c0       	rjmp	.+180    	; 0x1566 <_ZN8Protocol7treatIOER6Packet+0x118>
	{
		

		if(in[0] == 0 || in[0] >= sizeof(command_len)/sizeof(uint8_t))
    14b2:	eb 81       	ldd	r30, Y+3	; 0x03
    14b4:	fc 81       	ldd	r31, Y+4	; 0x04
    14b6:	82 81       	ldd	r24, Z+2	; 0x02
    14b8:	88 23       	and	r24, r24
    14ba:	29 f0       	breq	.+10     	; 0x14c6 <_ZN8Protocol7treatIOER6Packet+0x78>
    14bc:	eb 81       	ldd	r30, Y+3	; 0x03
    14be:	fc 81       	ldd	r31, Y+4	; 0x04
    14c0:	82 81       	ldd	r24, Z+2	; 0x02
    14c2:	85 30       	cpi	r24, 0x05	; 5
    14c4:	30 f0       	brcs	.+12     	; 0x14d2 <_ZN8Protocol7treatIOER6Packet+0x84>
		{
			in_offset = 0;
    14c6:	eb 81       	ldd	r30, Y+3	; 0x03
    14c8:	fc 81       	ldd	r31, Y+4	; 0x04
    14ca:	12 a6       	std	Z+42, r1	; 0x2a
			return 0;
    14cc:	18 86       	std	Y+8, r1	; 0x08
    14ce:	1f 82       	std	Y+7, r1	; 0x07
    14d0:	4c c0       	rjmp	.+152    	; 0x156a <_ZN8Protocol7treatIOER6Packet+0x11c>
		}
		
		len = command_len[in[0]];
    14d2:	eb 81       	ldd	r30, Y+3	; 0x03
    14d4:	fc 81       	ldd	r31, Y+4	; 0x04
    14d6:	82 81       	ldd	r24, Z+2	; 0x02
    14d8:	88 2f       	mov	r24, r24
    14da:	90 e0       	ldi	r25, 0x00	; 0
    14dc:	fc 01       	movw	r30, r24
    14de:	e9 5e       	subi	r30, 0xE9	; 233
    14e0:	fd 4f       	sbci	r31, 0xFD	; 253
    14e2:	80 81       	ld	r24, Z
    14e4:	8a 83       	std	Y+2, r24	; 0x02
		
		if (in_offset>=len)
    14e6:	eb 81       	ldd	r30, Y+3	; 0x03
    14e8:	fc 81       	ldd	r31, Y+4	; 0x04
    14ea:	92 a5       	ldd	r25, Z+42	; 0x2a
    14ec:	8a 81       	ldd	r24, Y+2	; 0x02
    14ee:	98 17       	cp	r25, r24
    14f0:	d0 f1       	brcs	.+116    	; 0x1566 <_ZN8Protocol7treatIOER6Packet+0x118>
		{
			forge(p);
    14f2:	8b 81       	ldd	r24, Y+3	; 0x03
    14f4:	9c 81       	ldd	r25, Y+4	; 0x04
    14f6:	2d 81       	ldd	r18, Y+5	; 0x05
    14f8:	3e 81       	ldd	r19, Y+6	; 0x06
    14fa:	b9 01       	movw	r22, r18
    14fc:	0e 94 0f 09 	call	0x121e	; 0x121e <_ZN8Protocol5forgeER6Packet>
			
			in_offset-=len;
    1500:	eb 81       	ldd	r30, Y+3	; 0x03
    1502:	fc 81       	ldd	r31, Y+4	; 0x04
    1504:	92 a5       	ldd	r25, Z+42	; 0x2a
    1506:	8a 81       	ldd	r24, Y+2	; 0x02
    1508:	29 2f       	mov	r18, r25
    150a:	28 1b       	sub	r18, r24
    150c:	82 2f       	mov	r24, r18
    150e:	eb 81       	ldd	r30, Y+3	; 0x03
    1510:	fc 81       	ldd	r31, Y+4	; 0x04
    1512:	82 a7       	std	Z+42, r24	; 0x2a
			for(uint8_t i=0;i<in_offset;i++)
    1514:	19 82       	std	Y+1, r1	; 0x01
    1516:	1c c0       	rjmp	.+56     	; 0x1550 <_ZN8Protocol7treatIOER6Packet+0x102>
			{
				in[i] = in[i+len];
    1518:	89 81       	ldd	r24, Y+1	; 0x01
    151a:	48 2f       	mov	r20, r24
    151c:	50 e0       	ldi	r21, 0x00	; 0
    151e:	89 81       	ldd	r24, Y+1	; 0x01
    1520:	28 2f       	mov	r18, r24
    1522:	30 e0       	ldi	r19, 0x00	; 0
    1524:	8a 81       	ldd	r24, Y+2	; 0x02
    1526:	88 2f       	mov	r24, r24
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	28 0f       	add	r18, r24
    152c:	39 1f       	adc	r19, r25
    152e:	8b 81       	ldd	r24, Y+3	; 0x03
    1530:	9c 81       	ldd	r25, Y+4	; 0x04
    1532:	82 0f       	add	r24, r18
    1534:	93 1f       	adc	r25, r19
    1536:	fc 01       	movw	r30, r24
    1538:	32 96       	adiw	r30, 0x02	; 2
    153a:	20 81       	ld	r18, Z
    153c:	8b 81       	ldd	r24, Y+3	; 0x03
    153e:	9c 81       	ldd	r25, Y+4	; 0x04
    1540:	84 0f       	add	r24, r20
    1542:	95 1f       	adc	r25, r21
    1544:	fc 01       	movw	r30, r24
    1546:	32 96       	adiw	r30, 0x02	; 2
    1548:	20 83       	st	Z, r18
		if (in_offset>=len)
		{
			forge(p);
			
			in_offset-=len;
			for(uint8_t i=0;i<in_offset;i++)
    154a:	89 81       	ldd	r24, Y+1	; 0x01
    154c:	8f 5f       	subi	r24, 0xFF	; 255
    154e:	89 83       	std	Y+1, r24	; 0x01
    1550:	eb 81       	ldd	r30, Y+3	; 0x03
    1552:	fc 81       	ldd	r31, Y+4	; 0x04
    1554:	92 a5       	ldd	r25, Z+42	; 0x2a
    1556:	89 81       	ldd	r24, Y+1	; 0x01
    1558:	89 17       	cp	r24, r25
    155a:	f0 f2       	brcs	.-68     	; 0x1518 <_ZN8Protocol7treatIOER6Packet+0xca>
			{
				in[i] = in[i+len];
			}
			return 1;
    155c:	81 e0       	ldi	r24, 0x01	; 1
    155e:	90 e0       	ldi	r25, 0x00	; 0
    1560:	98 87       	std	Y+8, r25	; 0x08
    1562:	8f 83       	std	Y+7, r24	; 0x07
    1564:	02 c0       	rjmp	.+4      	; 0x156a <_ZN8Protocol7treatIOER6Packet+0x11c>
		}
	}
	
	return 0;
    1566:	18 86       	std	Y+8, r1	; 0x08
    1568:	1f 82       	std	Y+7, r1	; 0x07
    156a:	8f 81       	ldd	r24, Y+7	; 0x07
    156c:	98 85       	ldd	r25, Y+8	; 0x08
}
    156e:	28 96       	adiw	r28, 0x08	; 8
    1570:	0f b6       	in	r0, 0x3f	; 63
    1572:	f8 94       	cli
    1574:	de bf       	out	0x3e, r29	; 62
    1576:	0f be       	out	0x3f, r0	; 63
    1578:	cd bf       	out	0x3d, r28	; 61
    157a:	cf 91       	pop	r28
    157c:	df 91       	pop	r29
    157e:	08 95       	ret

00001580 <_ZN8Protocol5printEi>:
{
	_uart = uart;
	_uart->setPollingMode(false);
}

void Protocol::print(int16_t i)
    1580:	df 93       	push	r29
    1582:	cf 93       	push	r28
    1584:	cd b7       	in	r28, 0x3d	; 61
    1586:	de b7       	in	r29, 0x3e	; 62
    1588:	64 97       	sbiw	r28, 0x14	; 20
    158a:	0f b6       	in	r0, 0x3f	; 63
    158c:	f8 94       	cli
    158e:	de bf       	out	0x3e, r29	; 62
    1590:	0f be       	out	0x3f, r0	; 63
    1592:	cd bf       	out	0x3d, r28	; 61
    1594:	9a 8b       	std	Y+18, r25	; 0x12
    1596:	89 8b       	std	Y+17, r24	; 0x11
    1598:	7c 8b       	std	Y+20, r23	; 0x14
    159a:	6b 8b       	std	Y+19, r22	; 0x13
{
		char str[10];
		for(int j=0;j<10;j++)
    159c:	1c 82       	std	Y+4, r1	; 0x04
    159e:	1b 82       	std	Y+3, r1	; 0x03
    15a0:	0d c0       	rjmp	.+26     	; 0x15bc <_ZN8Protocol5printEi+0x3c>
			str[j] = 0;
    15a2:	2b 81       	ldd	r18, Y+3	; 0x03
    15a4:	3c 81       	ldd	r19, Y+4	; 0x04
    15a6:	ce 01       	movw	r24, r28
    15a8:	07 96       	adiw	r24, 0x07	; 7
    15aa:	fc 01       	movw	r30, r24
    15ac:	e2 0f       	add	r30, r18
    15ae:	f3 1f       	adc	r31, r19
    15b0:	10 82       	st	Z, r1
}

void Protocol::print(int16_t i)
{
		char str[10];
		for(int j=0;j<10;j++)
    15b2:	8b 81       	ldd	r24, Y+3	; 0x03
    15b4:	9c 81       	ldd	r25, Y+4	; 0x04
    15b6:	01 96       	adiw	r24, 0x01	; 1
    15b8:	9c 83       	std	Y+4, r25	; 0x04
    15ba:	8b 83       	std	Y+3, r24	; 0x03
    15bc:	8b 81       	ldd	r24, Y+3	; 0x03
    15be:	9c 81       	ldd	r25, Y+4	; 0x04
    15c0:	8a 30       	cpi	r24, 0x0A	; 10
    15c2:	91 05       	cpc	r25, r1
    15c4:	74 f3       	brlt	.-36     	; 0x15a2 <_ZN8Protocol5printEi+0x22>
			str[j] = 0;
		char *p = str;
    15c6:	ce 01       	movw	r24, r28
    15c8:	07 96       	adiw	r24, 0x07	; 7
    15ca:	9e 83       	std	Y+6, r25	; 0x06
    15cc:	8d 83       	std	Y+5, r24	; 0x05
		p=itoa(i, (char*)str, 10);
    15ce:	8b 89       	ldd	r24, Y+19	; 0x13
    15d0:	9c 89       	ldd	r25, Y+20	; 0x14
    15d2:	9e 01       	movw	r18, r28
    15d4:	29 5f       	subi	r18, 0xF9	; 249
    15d6:	3f 4f       	sbci	r19, 0xFF	; 255
    15d8:	b9 01       	movw	r22, r18
    15da:	4a e0       	ldi	r20, 0x0A	; 10
    15dc:	50 e0       	ldi	r21, 0x00	; 0
    15de:	0e 94 1e 1e 	call	0x3c3c	; 0x3c3c <itoa>
    15e2:	9e 83       	std	Y+6, r25	; 0x06
    15e4:	8d 83       	std	Y+5, r24	; 0x05
		for(int j=0;j<10;j++)
    15e6:	1a 82       	std	Y+2, r1	; 0x02
    15e8:	19 82       	std	Y+1, r1	; 0x01
    15ea:	20 c0       	rjmp	.+64     	; 0x162c <_ZN8Protocol5printEi+0xac>
		{
			_uart->write(p[j]);
    15ec:	e9 89       	ldd	r30, Y+17	; 0x11
    15ee:	fa 89       	ldd	r31, Y+18	; 0x12
    15f0:	01 90       	ld	r0, Z+
    15f2:	f0 81       	ld	r31, Z
    15f4:	e0 2d       	mov	r30, r0
    15f6:	01 90       	ld	r0, Z+
    15f8:	f0 81       	ld	r31, Z
    15fa:	e0 2d       	mov	r30, r0
    15fc:	a0 81       	ld	r26, Z
    15fe:	b1 81       	ldd	r27, Z+1	; 0x01
    1600:	e9 89       	ldd	r30, Y+17	; 0x11
    1602:	fa 89       	ldd	r31, Y+18	; 0x12
    1604:	80 81       	ld	r24, Z
    1606:	91 81       	ldd	r25, Z+1	; 0x01
    1608:	ac 01       	movw	r20, r24
    160a:	29 81       	ldd	r18, Y+1	; 0x01
    160c:	3a 81       	ldd	r19, Y+2	; 0x02
    160e:	8d 81       	ldd	r24, Y+5	; 0x05
    1610:	9e 81       	ldd	r25, Y+6	; 0x06
    1612:	fc 01       	movw	r30, r24
    1614:	e2 0f       	add	r30, r18
    1616:	f3 1f       	adc	r31, r19
    1618:	20 81       	ld	r18, Z
    161a:	ca 01       	movw	r24, r20
    161c:	62 2f       	mov	r22, r18
    161e:	fd 01       	movw	r30, r26
    1620:	09 95       	icall
		char str[10];
		for(int j=0;j<10;j++)
			str[j] = 0;
		char *p = str;
		p=itoa(i, (char*)str, 10);
		for(int j=0;j<10;j++)
    1622:	89 81       	ldd	r24, Y+1	; 0x01
    1624:	9a 81       	ldd	r25, Y+2	; 0x02
    1626:	01 96       	adiw	r24, 0x01	; 1
    1628:	9a 83       	std	Y+2, r25	; 0x02
    162a:	89 83       	std	Y+1, r24	; 0x01
    162c:	89 81       	ldd	r24, Y+1	; 0x01
    162e:	9a 81       	ldd	r25, Y+2	; 0x02
    1630:	8a 30       	cpi	r24, 0x0A	; 10
    1632:	91 05       	cpc	r25, r1
    1634:	dc f2       	brlt	.-74     	; 0x15ec <_ZN8Protocol5printEi+0x6c>
		{
			_uart->write(p[j]);
		} 
			_uart->write('\r');
    1636:	e9 89       	ldd	r30, Y+17	; 0x11
    1638:	fa 89       	ldd	r31, Y+18	; 0x12
    163a:	01 90       	ld	r0, Z+
    163c:	f0 81       	ld	r31, Z
    163e:	e0 2d       	mov	r30, r0
    1640:	01 90       	ld	r0, Z+
    1642:	f0 81       	ld	r31, Z
    1644:	e0 2d       	mov	r30, r0
    1646:	20 81       	ld	r18, Z
    1648:	31 81       	ldd	r19, Z+1	; 0x01
    164a:	e9 89       	ldd	r30, Y+17	; 0x11
    164c:	fa 89       	ldd	r31, Y+18	; 0x12
    164e:	80 81       	ld	r24, Z
    1650:	91 81       	ldd	r25, Z+1	; 0x01
    1652:	6d e0       	ldi	r22, 0x0D	; 13
    1654:	f9 01       	movw	r30, r18
    1656:	09 95       	icall
			_uart->write('\n');
    1658:	e9 89       	ldd	r30, Y+17	; 0x11
    165a:	fa 89       	ldd	r31, Y+18	; 0x12
    165c:	01 90       	ld	r0, Z+
    165e:	f0 81       	ld	r31, Z
    1660:	e0 2d       	mov	r30, r0
    1662:	01 90       	ld	r0, Z+
    1664:	f0 81       	ld	r31, Z
    1666:	e0 2d       	mov	r30, r0
    1668:	20 81       	ld	r18, Z
    166a:	31 81       	ldd	r19, Z+1	; 0x01
    166c:	e9 89       	ldd	r30, Y+17	; 0x11
    166e:	fa 89       	ldd	r31, Y+18	; 0x12
    1670:	80 81       	ld	r24, Z
    1672:	91 81       	ldd	r25, Z+1	; 0x01
    1674:	6a e0       	ldi	r22, 0x0A	; 10
    1676:	f9 01       	movw	r30, r18
    1678:	09 95       	icall
}
    167a:	64 96       	adiw	r28, 0x14	; 20
    167c:	0f b6       	in	r0, 0x3f	; 63
    167e:	f8 94       	cli
    1680:	de bf       	out	0x3e, r29	; 62
    1682:	0f be       	out	0x3f, r0	; 63
    1684:	cd bf       	out	0x3d, r28	; 61
    1686:	cf 91       	pop	r28
    1688:	df 91       	pop	r29
    168a:	08 95       	ret

0000168c <_ZN6UartHW14setPollingModeEa>:

		return ch;
	}

	// Put the receiver in polling mode (TRUE) or interrupt mode (FALSE)
	void setPollingMode(boolean polling){
    168c:	df 93       	push	r29
    168e:	cf 93       	push	r28
    1690:	00 d0       	rcall	.+0      	; 0x1692 <_ZN6UartHW14setPollingModeEa+0x6>
    1692:	0f 92       	push	r0
    1694:	cd b7       	in	r28, 0x3d	; 61
    1696:	de b7       	in	r29, 0x3e	; 62
    1698:	9a 83       	std	Y+2, r25	; 0x02
    169a:	89 83       	std	Y+1, r24	; 0x01
    169c:	6b 83       	std	Y+3, r22	; 0x03
		uartReceivePollingMode(m_hw, polling);
    169e:	e9 81       	ldd	r30, Y+1	; 0x01
    16a0:	fa 81       	ldd	r31, Y+2	; 0x02
    16a2:	86 89       	ldd	r24, Z+22	; 0x16
    16a4:	97 89       	ldd	r25, Z+23	; 0x17
    16a6:	6b 81       	ldd	r22, Y+3	; 0x03
    16a8:	0e 94 8f 19 	call	0x331e	; 0x331e <uartReceivePollingMode>
		m_polling = polling;
    16ac:	e9 81       	ldd	r30, Y+1	; 0x01
    16ae:	fa 81       	ldd	r31, Y+2	; 0x02
    16b0:	8b 81       	ldd	r24, Y+3	; 0x03
    16b2:	80 8f       	std	Z+24, r24	; 0x18
	}
    16b4:	0f 90       	pop	r0
    16b6:	0f 90       	pop	r0
    16b8:	0f 90       	pop	r0
    16ba:	cf 91       	pop	r28
    16bc:	df 91       	pop	r29
    16be:	08 95       	ret

000016c0 <_ZN8Protocol4initEP6UartHW>:
	memset(in, 0, Protocol::BUFFER_SIZE);
	memset(out, 0, Protocol::BUFFER_SIZE);
	haveMessage = false;
}

void Protocol::init(UartHW *uart)
    16c0:	df 93       	push	r29
    16c2:	cf 93       	push	r28
    16c4:	00 d0       	rcall	.+0      	; 0x16c6 <_ZN8Protocol4initEP6UartHW+0x6>
    16c6:	00 d0       	rcall	.+0      	; 0x16c8 <_ZN8Protocol4initEP6UartHW+0x8>
    16c8:	cd b7       	in	r28, 0x3d	; 61
    16ca:	de b7       	in	r29, 0x3e	; 62
    16cc:	9a 83       	std	Y+2, r25	; 0x02
    16ce:	89 83       	std	Y+1, r24	; 0x01
    16d0:	7c 83       	std	Y+4, r23	; 0x04
    16d2:	6b 83       	std	Y+3, r22	; 0x03
{
	_uart = uart;
    16d4:	e9 81       	ldd	r30, Y+1	; 0x01
    16d6:	fa 81       	ldd	r31, Y+2	; 0x02
    16d8:	8b 81       	ldd	r24, Y+3	; 0x03
    16da:	9c 81       	ldd	r25, Y+4	; 0x04
    16dc:	91 83       	std	Z+1, r25	; 0x01
    16de:	80 83       	st	Z, r24
	_uart->setPollingMode(false);
    16e0:	e9 81       	ldd	r30, Y+1	; 0x01
    16e2:	fa 81       	ldd	r31, Y+2	; 0x02
    16e4:	80 81       	ld	r24, Z
    16e6:	91 81       	ldd	r25, Z+1	; 0x01
    16e8:	60 e0       	ldi	r22, 0x00	; 0
    16ea:	0e 94 46 0b 	call	0x168c	; 0x168c <_ZN6UartHW14setPollingModeEa>
}
    16ee:	0f 90       	pop	r0
    16f0:	0f 90       	pop	r0
    16f2:	0f 90       	pop	r0
    16f4:	0f 90       	pop	r0
    16f6:	cf 91       	pop	r28
    16f8:	df 91       	pop	r29
    16fa:	08 95       	ret

000016fc <_ZN8ProtocolC1Ev>:
	status = Packet::STOP;

	//command_len = {5, 2, 2, 2};
}

Protocol::Protocol()
    16fc:	df 93       	push	r29
    16fe:	cf 93       	push	r28
    1700:	00 d0       	rcall	.+0      	; 0x1702 <_ZN8ProtocolC1Ev+0x6>
    1702:	cd b7       	in	r28, 0x3d	; 61
    1704:	de b7       	in	r29, 0x3e	; 62
    1706:	9a 83       	std	Y+2, r25	; 0x02
    1708:	89 83       	std	Y+1, r24	; 0x01
{
	_uart = NULL;
    170a:	e9 81       	ldd	r30, Y+1	; 0x01
    170c:	fa 81       	ldd	r31, Y+2	; 0x02
    170e:	11 82       	std	Z+1, r1	; 0x01
    1710:	10 82       	st	Z, r1
	in_offset = 0;
    1712:	e9 81       	ldd	r30, Y+1	; 0x01
    1714:	fa 81       	ldd	r31, Y+2	; 0x02
    1716:	12 a6       	std	Z+42, r1	; 0x2a
	out_offset = 0;
    1718:	e9 81       	ldd	r30, Y+1	; 0x01
    171a:	fa 81       	ldd	r31, Y+2	; 0x02
    171c:	13 a6       	std	Z+43, r1	; 0x2b
	memset(in, 0, Protocol::BUFFER_SIZE);
    171e:	89 81       	ldd	r24, Y+1	; 0x01
    1720:	9a 81       	ldd	r25, Y+2	; 0x02
    1722:	02 96       	adiw	r24, 0x02	; 2
    1724:	60 e0       	ldi	r22, 0x00	; 0
    1726:	70 e0       	ldi	r23, 0x00	; 0
    1728:	44 e1       	ldi	r20, 0x14	; 20
    172a:	50 e0       	ldi	r21, 0x00	; 0
    172c:	0e 94 0c 1e 	call	0x3c18	; 0x3c18 <memset>
	memset(out, 0, Protocol::BUFFER_SIZE);
    1730:	89 81       	ldd	r24, Y+1	; 0x01
    1732:	9a 81       	ldd	r25, Y+2	; 0x02
    1734:	46 96       	adiw	r24, 0x16	; 22
    1736:	60 e0       	ldi	r22, 0x00	; 0
    1738:	70 e0       	ldi	r23, 0x00	; 0
    173a:	44 e1       	ldi	r20, 0x14	; 20
    173c:	50 e0       	ldi	r21, 0x00	; 0
    173e:	0e 94 0c 1e 	call	0x3c18	; 0x3c18 <memset>
	haveMessage = false;
    1742:	e9 81       	ldd	r30, Y+1	; 0x01
    1744:	fa 81       	ldd	r31, Y+2	; 0x02
    1746:	14 a6       	std	Z+44, r1	; 0x2c
}
    1748:	0f 90       	pop	r0
    174a:	0f 90       	pop	r0
    174c:	cf 91       	pop	r28
    174e:	df 91       	pop	r29
    1750:	08 95       	ret

00001752 <_ZN8ProtocolC2Ev>:
	status = Packet::STOP;

	//command_len = {5, 2, 2, 2};
}

Protocol::Protocol()
    1752:	df 93       	push	r29
    1754:	cf 93       	push	r28
    1756:	00 d0       	rcall	.+0      	; 0x1758 <_ZN8ProtocolC2Ev+0x6>
    1758:	cd b7       	in	r28, 0x3d	; 61
    175a:	de b7       	in	r29, 0x3e	; 62
    175c:	9a 83       	std	Y+2, r25	; 0x02
    175e:	89 83       	std	Y+1, r24	; 0x01
{
	_uart = NULL;
    1760:	e9 81       	ldd	r30, Y+1	; 0x01
    1762:	fa 81       	ldd	r31, Y+2	; 0x02
    1764:	11 82       	std	Z+1, r1	; 0x01
    1766:	10 82       	st	Z, r1
	in_offset = 0;
    1768:	e9 81       	ldd	r30, Y+1	; 0x01
    176a:	fa 81       	ldd	r31, Y+2	; 0x02
    176c:	12 a6       	std	Z+42, r1	; 0x2a
	out_offset = 0;
    176e:	e9 81       	ldd	r30, Y+1	; 0x01
    1770:	fa 81       	ldd	r31, Y+2	; 0x02
    1772:	13 a6       	std	Z+43, r1	; 0x2b
	memset(in, 0, Protocol::BUFFER_SIZE);
    1774:	89 81       	ldd	r24, Y+1	; 0x01
    1776:	9a 81       	ldd	r25, Y+2	; 0x02
    1778:	02 96       	adiw	r24, 0x02	; 2
    177a:	60 e0       	ldi	r22, 0x00	; 0
    177c:	70 e0       	ldi	r23, 0x00	; 0
    177e:	44 e1       	ldi	r20, 0x14	; 20
    1780:	50 e0       	ldi	r21, 0x00	; 0
    1782:	0e 94 0c 1e 	call	0x3c18	; 0x3c18 <memset>
	memset(out, 0, Protocol::BUFFER_SIZE);
    1786:	89 81       	ldd	r24, Y+1	; 0x01
    1788:	9a 81       	ldd	r25, Y+2	; 0x02
    178a:	46 96       	adiw	r24, 0x16	; 22
    178c:	60 e0       	ldi	r22, 0x00	; 0
    178e:	70 e0       	ldi	r23, 0x00	; 0
    1790:	44 e1       	ldi	r20, 0x14	; 20
    1792:	50 e0       	ldi	r21, 0x00	; 0
    1794:	0e 94 0c 1e 	call	0x3c18	; 0x3c18 <memset>
	haveMessage = false;
    1798:	e9 81       	ldd	r30, Y+1	; 0x01
    179a:	fa 81       	ldd	r31, Y+2	; 0x02
    179c:	14 a6       	std	Z+44, r1	; 0x2c
}
    179e:	0f 90       	pop	r0
    17a0:	0f 90       	pop	r0
    17a2:	cf 91       	pop	r28
    17a4:	df 91       	pop	r29
    17a6:	08 95       	ret

000017a8 <_ZN10SmartMotorC2Ev>:
#include "smart_motor.h"


SmartMotor::SmartMotor()
    17a8:	df 93       	push	r29
    17aa:	cf 93       	push	r28
    17ac:	00 d0       	rcall	.+0      	; 0x17ae <_ZN10SmartMotorC2Ev+0x6>
    17ae:	cd b7       	in	r28, 0x3d	; 61
    17b0:	de b7       	in	r29, 0x3e	; 62
    17b2:	9a 83       	std	Y+2, r25	; 0x02
    17b4:	89 83       	std	Y+1, r24	; 0x01
{

	_limit_min = DRIVE_SPEED_MIN;
    17b6:	e9 81       	ldd	r30, Y+1	; 0x01
    17b8:	fa 81       	ldd	r31, Y+2	; 0x02
    17ba:	81 e8       	ldi	r24, 0x81	; 129
    17bc:	82 83       	std	Z+2, r24	; 0x02
	_limit_max = DRIVE_SPEED_MAX;
    17be:	e9 81       	ldd	r30, Y+1	; 0x01
    17c0:	fa 81       	ldd	r31, Y+2	; 0x02
    17c2:	8f e7       	ldi	r24, 0x7F	; 127
    17c4:	83 83       	std	Z+3, r24	; 0x03

	_position = 0;
    17c6:	e9 81       	ldd	r30, Y+1	; 0x01
    17c8:	fa 81       	ldd	r31, Y+2	; 0x02
    17ca:	15 82       	std	Z+5, r1	; 0x05
    17cc:	14 82       	std	Z+4, r1	; 0x04
	_step_size = 0;
    17ce:	e9 81       	ldd	r30, Y+1	; 0x01
    17d0:	fa 81       	ldd	r31, Y+2	; 0x02
    17d2:	17 82       	std	Z+7, r1	; 0x07
    17d4:	16 82       	std	Z+6, r1	; 0x06
	_step_count = 0;
    17d6:	e9 81       	ldd	r30, Y+1	; 0x01
    17d8:	fa 81       	ldd	r31, Y+2	; 0x02
    17da:	11 86       	std	Z+9, r1	; 0x09
    17dc:	10 86       	std	Z+8, r1	; 0x08

	_firsttime = true;
    17de:	e9 81       	ldd	r30, Y+1	; 0x01
    17e0:	fa 81       	ldd	r31, Y+2	; 0x02
    17e2:	81 e0       	ldi	r24, 0x01	; 1
    17e4:	82 87       	std	Z+10, r24	; 0x0a
}
    17e6:	0f 90       	pop	r0
    17e8:	0f 90       	pop	r0
    17ea:	cf 91       	pop	r28
    17ec:	df 91       	pop	r29
    17ee:	08 95       	ret

000017f0 <_ZN10SmartMotorC1Ev>:
#include "smart_motor.h"


SmartMotor::SmartMotor()
    17f0:	df 93       	push	r29
    17f2:	cf 93       	push	r28
    17f4:	00 d0       	rcall	.+0      	; 0x17f6 <_ZN10SmartMotorC1Ev+0x6>
    17f6:	cd b7       	in	r28, 0x3d	; 61
    17f8:	de b7       	in	r29, 0x3e	; 62
    17fa:	9a 83       	std	Y+2, r25	; 0x02
    17fc:	89 83       	std	Y+1, r24	; 0x01
{

	_limit_min = DRIVE_SPEED_MIN;
    17fe:	e9 81       	ldd	r30, Y+1	; 0x01
    1800:	fa 81       	ldd	r31, Y+2	; 0x02
    1802:	81 e8       	ldi	r24, 0x81	; 129
    1804:	82 83       	std	Z+2, r24	; 0x02
	_limit_max = DRIVE_SPEED_MAX;
    1806:	e9 81       	ldd	r30, Y+1	; 0x01
    1808:	fa 81       	ldd	r31, Y+2	; 0x02
    180a:	8f e7       	ldi	r24, 0x7F	; 127
    180c:	83 83       	std	Z+3, r24	; 0x03

	_position = 0;
    180e:	e9 81       	ldd	r30, Y+1	; 0x01
    1810:	fa 81       	ldd	r31, Y+2	; 0x02
    1812:	15 82       	std	Z+5, r1	; 0x05
    1814:	14 82       	std	Z+4, r1	; 0x04
	_step_size = 0;
    1816:	e9 81       	ldd	r30, Y+1	; 0x01
    1818:	fa 81       	ldd	r31, Y+2	; 0x02
    181a:	17 82       	std	Z+7, r1	; 0x07
    181c:	16 82       	std	Z+6, r1	; 0x06
	_step_count = 0;
    181e:	e9 81       	ldd	r30, Y+1	; 0x01
    1820:	fa 81       	ldd	r31, Y+2	; 0x02
    1822:	11 86       	std	Z+9, r1	; 0x09
    1824:	10 86       	std	Z+8, r1	; 0x08

	_firsttime = true;
    1826:	e9 81       	ldd	r30, Y+1	; 0x01
    1828:	fa 81       	ldd	r31, Y+2	; 0x02
    182a:	81 e0       	ldi	r24, 0x01	; 1
    182c:	82 87       	std	Z+10, r24	; 0x0a
}
    182e:	0f 90       	pop	r0
    1830:	0f 90       	pop	r0
    1832:	cf 91       	pop	r28
    1834:	df 91       	pop	r29
    1836:	08 95       	ret

00001838 <_ZN10SmartMotorD2Ev>:

SmartMotor::~SmartMotor()
    1838:	df 93       	push	r29
    183a:	cf 93       	push	r28
    183c:	00 d0       	rcall	.+0      	; 0x183e <_ZN10SmartMotorD2Ev+0x6>
    183e:	cd b7       	in	r28, 0x3d	; 61
    1840:	de b7       	in	r29, 0x3e	; 62
    1842:	9a 83       	std	Y+2, r25	; 0x02
    1844:	89 83       	std	Y+1, r24	; 0x01
{
}
    1846:	0f 90       	pop	r0
    1848:	0f 90       	pop	r0
    184a:	cf 91       	pop	r28
    184c:	df 91       	pop	r29
    184e:	08 95       	ret

00001850 <_ZN10SmartMotorD1Ev>:
	_step_count = 0;

	_firsttime = true;
}

SmartMotor::~SmartMotor()
    1850:	df 93       	push	r29
    1852:	cf 93       	push	r28
    1854:	00 d0       	rcall	.+0      	; 0x1856 <_ZN10SmartMotorD1Ev+0x6>
    1856:	cd b7       	in	r28, 0x3d	; 61
    1858:	de b7       	in	r29, 0x3e	; 62
    185a:	9a 83       	std	Y+2, r25	; 0x02
    185c:	89 83       	std	Y+1, r24	; 0x01
{
}
    185e:	0f 90       	pop	r0
    1860:	0f 90       	pop	r0
    1862:	cf 91       	pop	r28
    1864:	df 91       	pop	r29
    1866:	08 95       	ret

00001868 <_ZN10SmartMotor10link_servoER5Servo>:

void SmartMotor::link_servo(Servo &servo)
    1868:	df 93       	push	r29
    186a:	cf 93       	push	r28
    186c:	00 d0       	rcall	.+0      	; 0x186e <_ZN10SmartMotor10link_servoER5Servo+0x6>
    186e:	00 d0       	rcall	.+0      	; 0x1870 <_ZN10SmartMotor10link_servoER5Servo+0x8>
    1870:	cd b7       	in	r28, 0x3d	; 61
    1872:	de b7       	in	r29, 0x3e	; 62
    1874:	9a 83       	std	Y+2, r25	; 0x02
    1876:	89 83       	std	Y+1, r24	; 0x01
    1878:	7c 83       	std	Y+4, r23	; 0x04
    187a:	6b 83       	std	Y+3, r22	; 0x03
{
	_servo = &servo;
    187c:	e9 81       	ldd	r30, Y+1	; 0x01
    187e:	fa 81       	ldd	r31, Y+2	; 0x02
    1880:	8b 81       	ldd	r24, Y+3	; 0x03
    1882:	9c 81       	ldd	r25, Y+4	; 0x04
    1884:	91 83       	std	Z+1, r25	; 0x01
    1886:	80 83       	st	Z, r24
}
    1888:	0f 90       	pop	r0
    188a:	0f 90       	pop	r0
    188c:	0f 90       	pop	r0
    188e:	0f 90       	pop	r0
    1890:	cf 91       	pop	r28
    1892:	df 91       	pop	r29
    1894:	08 95       	ret

00001896 <_ZN10SmartMotor9set_limitEaa>:


void SmartMotor::set_limit(DRIVE_SPEED min, DRIVE_SPEED max)
    1896:	df 93       	push	r29
    1898:	cf 93       	push	r28
    189a:	00 d0       	rcall	.+0      	; 0x189c <_ZN10SmartMotor9set_limitEaa+0x6>
    189c:	00 d0       	rcall	.+0      	; 0x189e <_ZN10SmartMotor9set_limitEaa+0x8>
    189e:	cd b7       	in	r28, 0x3d	; 61
    18a0:	de b7       	in	r29, 0x3e	; 62
    18a2:	9a 83       	std	Y+2, r25	; 0x02
    18a4:	89 83       	std	Y+1, r24	; 0x01
    18a6:	6b 83       	std	Y+3, r22	; 0x03
    18a8:	4c 83       	std	Y+4, r20	; 0x04
{
	_limit_min = min;
    18aa:	e9 81       	ldd	r30, Y+1	; 0x01
    18ac:	fa 81       	ldd	r31, Y+2	; 0x02
    18ae:	8b 81       	ldd	r24, Y+3	; 0x03
    18b0:	82 83       	std	Z+2, r24	; 0x02
	_limit_max = max;
    18b2:	e9 81       	ldd	r30, Y+1	; 0x01
    18b4:	fa 81       	ldd	r31, Y+2	; 0x02
    18b6:	8c 81       	ldd	r24, Y+4	; 0x04
    18b8:	83 83       	std	Z+3, r24	; 0x03
}
    18ba:	0f 90       	pop	r0
    18bc:	0f 90       	pop	r0
    18be:	0f 90       	pop	r0
    18c0:	0f 90       	pop	r0
    18c2:	cf 91       	pop	r28
    18c4:	df 91       	pop	r29
    18c6:	08 95       	ret

000018c8 <_ZN10SmartMotor9is_movingEv>:
		_step_size = ((pos - _position) / t) * (HEXAPOD_LOOP_DURATION / 1000);
		_step_count = (pos - _position) / _step_size;	
	}
}

bool SmartMotor::is_moving()
    18c8:	df 93       	push	r29
    18ca:	cf 93       	push	r28
    18cc:	00 d0       	rcall	.+0      	; 0x18ce <_ZN10SmartMotor9is_movingEv+0x6>
    18ce:	0f 92       	push	r0
    18d0:	cd b7       	in	r28, 0x3d	; 61
    18d2:	de b7       	in	r29, 0x3e	; 62
    18d4:	9a 83       	std	Y+2, r25	; 0x02
    18d6:	89 83       	std	Y+1, r24	; 0x01
{
	return _step_count != 0;
    18d8:	e9 81       	ldd	r30, Y+1	; 0x01
    18da:	fa 81       	ldd	r31, Y+2	; 0x02
    18dc:	80 85       	ldd	r24, Z+8	; 0x08
    18de:	91 85       	ldd	r25, Z+9	; 0x09
    18e0:	1b 82       	std	Y+3, r1	; 0x03
    18e2:	00 97       	sbiw	r24, 0x00	; 0
    18e4:	11 f0       	breq	.+4      	; 0x18ea <_ZN10SmartMotor9is_movingEv+0x22>
    18e6:	81 e0       	ldi	r24, 0x01	; 1
    18e8:	8b 83       	std	Y+3, r24	; 0x03
    18ea:	8b 81       	ldd	r24, Y+3	; 0x03
}
    18ec:	0f 90       	pop	r0
    18ee:	0f 90       	pop	r0
    18f0:	0f 90       	pop	r0
    18f2:	cf 91       	pop	r28
    18f4:	df 91       	pop	r29
    18f6:	08 95       	ret

000018f8 <_ZN10SmartMotor11stop_motionEv>:

void SmartMotor::stop_motion()
    18f8:	df 93       	push	r29
    18fa:	cf 93       	push	r28
    18fc:	00 d0       	rcall	.+0      	; 0x18fe <_ZN10SmartMotor11stop_motionEv+0x6>
    18fe:	cd b7       	in	r28, 0x3d	; 61
    1900:	de b7       	in	r29, 0x3e	; 62
    1902:	9a 83       	std	Y+2, r25	; 0x02
    1904:	89 83       	std	Y+1, r24	; 0x01
{
	_step_count = 0;
    1906:	e9 81       	ldd	r30, Y+1	; 0x01
    1908:	fa 81       	ldd	r31, Y+2	; 0x02
    190a:	11 86       	std	Z+9, r1	; 0x09
    190c:	10 86       	std	Z+8, r1	; 0x08
}
    190e:	0f 90       	pop	r0
    1910:	0f 90       	pop	r0
    1912:	cf 91       	pop	r28
    1914:	df 91       	pop	r29
    1916:	08 95       	ret

00001918 <_ZN10SmartMotor12set_positionEai>:
DRIVE_SPEED SmartMotor::get_position()
{
	return interpolate(_position, -SMART_SPEED, SMART_SPEED, DRIVE_SPEED_MIN, DRIVE_SPEED_MAX);
}

void SmartMotor::set_position(DRIVE_SPEED position, int16_t t)
    1918:	0f 93       	push	r16
    191a:	1f 93       	push	r17
    191c:	df 93       	push	r29
    191e:	cf 93       	push	r28
    1920:	cd b7       	in	r28, 0x3d	; 61
    1922:	de b7       	in	r29, 0x3e	; 62
    1924:	29 97       	sbiw	r28, 0x09	; 9
    1926:	0f b6       	in	r0, 0x3f	; 63
    1928:	f8 94       	cli
    192a:	de bf       	out	0x3e, r29	; 62
    192c:	0f be       	out	0x3f, r0	; 63
    192e:	cd bf       	out	0x3d, r28	; 61
    1930:	9c 83       	std	Y+4, r25	; 0x04
    1932:	8b 83       	std	Y+3, r24	; 0x03
    1934:	6d 83       	std	Y+5, r22	; 0x05
    1936:	5f 83       	std	Y+7, r21	; 0x07
    1938:	4e 83       	std	Y+6, r20	; 0x06

	//uart1.print("time");
	//print(position);
	//print(t);
	
	position = (position < _limit_min)? _limit_min : position;
    193a:	eb 81       	ldd	r30, Y+3	; 0x03
    193c:	fc 81       	ldd	r31, Y+4	; 0x04
    193e:	92 81       	ldd	r25, Z+2	; 0x02
    1940:	8d 81       	ldd	r24, Y+5	; 0x05
    1942:	89 17       	cp	r24, r25
    1944:	2c f4       	brge	.+10     	; 0x1950 <_ZN10SmartMotor12set_positionEai+0x38>
    1946:	eb 81       	ldd	r30, Y+3	; 0x03
    1948:	fc 81       	ldd	r31, Y+4	; 0x04
    194a:	82 81       	ldd	r24, Z+2	; 0x02
    194c:	89 87       	std	Y+9, r24	; 0x09
    194e:	02 c0       	rjmp	.+4      	; 0x1954 <_ZN10SmartMotor12set_positionEai+0x3c>
    1950:	8d 81       	ldd	r24, Y+5	; 0x05
    1952:	89 87       	std	Y+9, r24	; 0x09
    1954:	89 85       	ldd	r24, Y+9	; 0x09
    1956:	8d 83       	std	Y+5, r24	; 0x05
	position = (position > _limit_max)? _limit_max : position;
    1958:	eb 81       	ldd	r30, Y+3	; 0x03
    195a:	fc 81       	ldd	r31, Y+4	; 0x04
    195c:	93 81       	ldd	r25, Z+3	; 0x03
    195e:	8d 81       	ldd	r24, Y+5	; 0x05
    1960:	98 17       	cp	r25, r24
    1962:	2c f4       	brge	.+10     	; 0x196e <_ZN10SmartMotor12set_positionEai+0x56>
    1964:	eb 81       	ldd	r30, Y+3	; 0x03
    1966:	fc 81       	ldd	r31, Y+4	; 0x04
    1968:	83 81       	ldd	r24, Z+3	; 0x03
    196a:	88 87       	std	Y+8, r24	; 0x08
    196c:	02 c0       	rjmp	.+4      	; 0x1972 <_ZN10SmartMotor12set_positionEai+0x5a>
    196e:	8d 81       	ldd	r24, Y+5	; 0x05
    1970:	88 87       	std	Y+8, r24	; 0x08
    1972:	88 85       	ldd	r24, Y+8	; 0x08
    1974:	8d 83       	std	Y+5, r24	; 0x05

	int16_t pos = interpolate(position, DRIVE_SPEED_MIN, DRIVE_SPEED_MAX, -SMART_SPEED, SMART_SPEED);
    1976:	8d 81       	ldd	r24, Y+5	; 0x05
    1978:	99 27       	eor	r25, r25
    197a:	87 fd       	sbrc	r24, 7
    197c:	90 95       	com	r25
    197e:	61 e8       	ldi	r22, 0x81	; 129
    1980:	7f ef       	ldi	r23, 0xFF	; 255
    1982:	4f e7       	ldi	r20, 0x7F	; 127
    1984:	50 e0       	ldi	r21, 0x00	; 0
    1986:	24 e0       	ldi	r18, 0x04	; 4
    1988:	30 ec       	ldi	r19, 0xC0	; 192
    198a:	0c ef       	ldi	r16, 0xFC	; 252
    198c:	1f e3       	ldi	r17, 0x3F	; 63
    198e:	0e 94 da 12 	call	0x25b4	; 0x25b4 <interpolate>
    1992:	9a 83       	std	Y+2, r25	; 0x02
    1994:	89 83       	std	Y+1, r24	; 0x01
	
	if(t < HEXAPOD_LOOP_DURATION/1000)
    1996:	8e 81       	ldd	r24, Y+6	; 0x06
    1998:	9f 81       	ldd	r25, Y+7	; 0x07
    199a:	84 31       	cpi	r24, 0x14	; 20
    199c:	91 05       	cpc	r25, r1
    199e:	9c f4       	brge	.+38     	; 0x19c6 <_ZN10SmartMotor12set_positionEai+0xae>
	{
		_step_size = (pos - _position);
    19a0:	eb 81       	ldd	r30, Y+3	; 0x03
    19a2:	fc 81       	ldd	r31, Y+4	; 0x04
    19a4:	24 81       	ldd	r18, Z+4	; 0x04
    19a6:	35 81       	ldd	r19, Z+5	; 0x05
    19a8:	89 81       	ldd	r24, Y+1	; 0x01
    19aa:	9a 81       	ldd	r25, Y+2	; 0x02
    19ac:	82 1b       	sub	r24, r18
    19ae:	93 0b       	sbc	r25, r19
    19b0:	eb 81       	ldd	r30, Y+3	; 0x03
    19b2:	fc 81       	ldd	r31, Y+4	; 0x04
    19b4:	97 83       	std	Z+7, r25	; 0x07
    19b6:	86 83       	std	Z+6, r24	; 0x06
		_step_count = 1;
    19b8:	eb 81       	ldd	r30, Y+3	; 0x03
    19ba:	fc 81       	ldd	r31, Y+4	; 0x04
    19bc:	81 e0       	ldi	r24, 0x01	; 1
    19be:	90 e0       	ldi	r25, 0x00	; 0
    19c0:	91 87       	std	Z+9, r25	; 0x09
    19c2:	80 87       	std	Z+8, r24	; 0x08
    19c4:	32 c0       	rjmp	.+100    	; 0x1a2a <_ZN10SmartMotor12set_positionEai+0x112>
	}
	else
	{
		_step_size = ((pos - _position) / t) * (HEXAPOD_LOOP_DURATION / 1000);
    19c6:	eb 81       	ldd	r30, Y+3	; 0x03
    19c8:	fc 81       	ldd	r31, Y+4	; 0x04
    19ca:	24 81       	ldd	r18, Z+4	; 0x04
    19cc:	35 81       	ldd	r19, Z+5	; 0x05
    19ce:	89 81       	ldd	r24, Y+1	; 0x01
    19d0:	9a 81       	ldd	r25, Y+2	; 0x02
    19d2:	82 1b       	sub	r24, r18
    19d4:	93 0b       	sbc	r25, r19
    19d6:	2e 81       	ldd	r18, Y+6	; 0x06
    19d8:	3f 81       	ldd	r19, Y+7	; 0x07
    19da:	b9 01       	movw	r22, r18
    19dc:	0e 94 82 1f 	call	0x3f04	; 0x3f04 <__divmodhi4>
    19e0:	cb 01       	movw	r24, r22
    19e2:	9c 01       	movw	r18, r24
    19e4:	22 0f       	add	r18, r18
    19e6:	33 1f       	adc	r19, r19
    19e8:	22 0f       	add	r18, r18
    19ea:	33 1f       	adc	r19, r19
    19ec:	c9 01       	movw	r24, r18
    19ee:	88 0f       	add	r24, r24
    19f0:	99 1f       	adc	r25, r25
    19f2:	88 0f       	add	r24, r24
    19f4:	99 1f       	adc	r25, r25
    19f6:	82 0f       	add	r24, r18
    19f8:	93 1f       	adc	r25, r19
    19fa:	eb 81       	ldd	r30, Y+3	; 0x03
    19fc:	fc 81       	ldd	r31, Y+4	; 0x04
    19fe:	97 83       	std	Z+7, r25	; 0x07
    1a00:	86 83       	std	Z+6, r24	; 0x06
		_step_count = (pos - _position) / _step_size;	
    1a02:	eb 81       	ldd	r30, Y+3	; 0x03
    1a04:	fc 81       	ldd	r31, Y+4	; 0x04
    1a06:	24 81       	ldd	r18, Z+4	; 0x04
    1a08:	35 81       	ldd	r19, Z+5	; 0x05
    1a0a:	89 81       	ldd	r24, Y+1	; 0x01
    1a0c:	9a 81       	ldd	r25, Y+2	; 0x02
    1a0e:	82 1b       	sub	r24, r18
    1a10:	93 0b       	sbc	r25, r19
    1a12:	eb 81       	ldd	r30, Y+3	; 0x03
    1a14:	fc 81       	ldd	r31, Y+4	; 0x04
    1a16:	26 81       	ldd	r18, Z+6	; 0x06
    1a18:	37 81       	ldd	r19, Z+7	; 0x07
    1a1a:	b9 01       	movw	r22, r18
    1a1c:	0e 94 82 1f 	call	0x3f04	; 0x3f04 <__divmodhi4>
    1a20:	cb 01       	movw	r24, r22
    1a22:	eb 81       	ldd	r30, Y+3	; 0x03
    1a24:	fc 81       	ldd	r31, Y+4	; 0x04
    1a26:	91 87       	std	Z+9, r25	; 0x09
    1a28:	80 87       	std	Z+8, r24	; 0x08
	}
}
    1a2a:	29 96       	adiw	r28, 0x09	; 9
    1a2c:	0f b6       	in	r0, 0x3f	; 63
    1a2e:	f8 94       	cli
    1a30:	de bf       	out	0x3e, r29	; 62
    1a32:	0f be       	out	0x3f, r0	; 63
    1a34:	cd bf       	out	0x3d, r28	; 61
    1a36:	cf 91       	pop	r28
    1a38:	df 91       	pop	r29
    1a3a:	1f 91       	pop	r17
    1a3c:	0f 91       	pop	r16
    1a3e:	08 95       	ret

00001a40 <_ZN10SmartMotor12get_positionEv>:
{
	_limit_min = min;
	_limit_max = max;
}

DRIVE_SPEED SmartMotor::get_position()
    1a40:	0f 93       	push	r16
    1a42:	1f 93       	push	r17
    1a44:	df 93       	push	r29
    1a46:	cf 93       	push	r28
    1a48:	00 d0       	rcall	.+0      	; 0x1a4a <_ZN10SmartMotor12get_positionEv+0xa>
    1a4a:	cd b7       	in	r28, 0x3d	; 61
    1a4c:	de b7       	in	r29, 0x3e	; 62
    1a4e:	9a 83       	std	Y+2, r25	; 0x02
    1a50:	89 83       	std	Y+1, r24	; 0x01
{
	return interpolate(_position, -SMART_SPEED, SMART_SPEED, DRIVE_SPEED_MIN, DRIVE_SPEED_MAX);
    1a52:	e9 81       	ldd	r30, Y+1	; 0x01
    1a54:	fa 81       	ldd	r31, Y+2	; 0x02
    1a56:	84 81       	ldd	r24, Z+4	; 0x04
    1a58:	95 81       	ldd	r25, Z+5	; 0x05
    1a5a:	64 e0       	ldi	r22, 0x04	; 4
    1a5c:	70 ec       	ldi	r23, 0xC0	; 192
    1a5e:	4c ef       	ldi	r20, 0xFC	; 252
    1a60:	5f e3       	ldi	r21, 0x3F	; 63
    1a62:	21 e8       	ldi	r18, 0x81	; 129
    1a64:	3f ef       	ldi	r19, 0xFF	; 255
    1a66:	0f e7       	ldi	r16, 0x7F	; 127
    1a68:	10 e0       	ldi	r17, 0x00	; 0
    1a6a:	0e 94 da 12 	call	0x25b4	; 0x25b4 <interpolate>
}
    1a6e:	0f 90       	pop	r0
    1a70:	0f 90       	pop	r0
    1a72:	cf 91       	pop	r28
    1a74:	df 91       	pop	r29
    1a76:	1f 91       	pop	r17
    1a78:	0f 91       	pop	r16
    1a7a:	08 95       	ret

00001a7c <_ZN8Actuator8setSpeedEa>:
class Actuator{
public:
	Actuator(__ACTUATOR* cstr){
		m_cstr = cstr;
	}
	void setSpeed(DRIVE_SPEED speed){
    1a7c:	df 93       	push	r29
    1a7e:	cf 93       	push	r28
    1a80:	00 d0       	rcall	.+0      	; 0x1a82 <_ZN8Actuator8setSpeedEa+0x6>
    1a82:	0f 92       	push	r0
    1a84:	cd b7       	in	r28, 0x3d	; 61
    1a86:	de b7       	in	r29, 0x3e	; 62
    1a88:	9a 83       	std	Y+2, r25	; 0x02
    1a8a:	89 83       	std	Y+1, r24	; 0x01
    1a8c:	6b 83       	std	Y+3, r22	; 0x03
		__act_setSpeed(m_cstr,speed);
    1a8e:	e9 81       	ldd	r30, Y+1	; 0x01
    1a90:	fa 81       	ldd	r31, Y+2	; 0x02
    1a92:	80 81       	ld	r24, Z
    1a94:	91 81       	ldd	r25, Z+1	; 0x01
    1a96:	6b 81       	ldd	r22, Y+3	; 0x03
    1a98:	0e 94 9f 12 	call	0x253e	; 0x253e <__act_setSpeed>
	}
    1a9c:	0f 90       	pop	r0
    1a9e:	0f 90       	pop	r0
    1aa0:	0f 90       	pop	r0
    1aa2:	cf 91       	pop	r28
    1aa4:	df 91       	pop	r29
    1aa6:	08 95       	ret

00001aa8 <_ZN10SmartMotor7computeEv>:
		} 
			uart1.write('\r');
			uart1.write('\n');
}

void SmartMotor::compute()
    1aa8:	0f 93       	push	r16
    1aaa:	1f 93       	push	r17
    1aac:	df 93       	push	r29
    1aae:	cf 93       	push	r28
    1ab0:	00 d0       	rcall	.+0      	; 0x1ab2 <_ZN10SmartMotor7computeEv+0xa>
    1ab2:	00 d0       	rcall	.+0      	; 0x1ab4 <_ZN10SmartMotor7computeEv+0xc>
    1ab4:	cd b7       	in	r28, 0x3d	; 61
    1ab6:	de b7       	in	r29, 0x3e	; 62
    1ab8:	9c 83       	std	Y+4, r25	; 0x04
    1aba:	8b 83       	std	Y+3, r24	; 0x03
{
	if(_firsttime == true)
    1abc:	eb 81       	ldd	r30, Y+3	; 0x03
    1abe:	fc 81       	ldd	r31, Y+4	; 0x04
    1ac0:	82 85       	ldd	r24, Z+10	; 0x0a
    1ac2:	88 2f       	mov	r24, r24
    1ac4:	90 e0       	ldi	r25, 0x00	; 0
    1ac6:	2f ef       	ldi	r18, 0xFF	; 255
    1ac8:	8f 3f       	cpi	r24, 0xFF	; 255
    1aca:	92 07       	cpc	r25, r18
    1acc:	51 f4       	brne	.+20     	; 0x1ae2 <_ZN10SmartMotor7computeEv+0x3a>
	{
		_servo->setSpeed(0);
    1ace:	eb 81       	ldd	r30, Y+3	; 0x03
    1ad0:	fc 81       	ldd	r31, Y+4	; 0x04
    1ad2:	80 81       	ld	r24, Z
    1ad4:	91 81       	ldd	r25, Z+1	; 0x01
    1ad6:	60 e0       	ldi	r22, 0x00	; 0
    1ad8:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <_ZN8Actuator8setSpeedEa>
		_firsttime = false;
    1adc:	eb 81       	ldd	r30, Y+3	; 0x03
    1ade:	fc 81       	ldd	r31, Y+4	; 0x04
    1ae0:	12 86       	std	Z+10, r1	; 0x0a
	}
	if(_step_count > 0)
    1ae2:	eb 81       	ldd	r30, Y+3	; 0x03
    1ae4:	fc 81       	ldd	r31, Y+4	; 0x04
    1ae6:	80 85       	ldd	r24, Z+8	; 0x08
    1ae8:	91 85       	ldd	r25, Z+9	; 0x09
    1aea:	00 97       	sbiw	r24, 0x00	; 0
    1aec:	79 f1       	breq	.+94     	; 0x1b4c <_ZN10SmartMotor7computeEv+0xa4>
	{
		_position = _position + _step_size;
    1aee:	eb 81       	ldd	r30, Y+3	; 0x03
    1af0:	fc 81       	ldd	r31, Y+4	; 0x04
    1af2:	24 81       	ldd	r18, Z+4	; 0x04
    1af4:	35 81       	ldd	r19, Z+5	; 0x05
    1af6:	eb 81       	ldd	r30, Y+3	; 0x03
    1af8:	fc 81       	ldd	r31, Y+4	; 0x04
    1afa:	86 81       	ldd	r24, Z+6	; 0x06
    1afc:	97 81       	ldd	r25, Z+7	; 0x07
    1afe:	82 0f       	add	r24, r18
    1b00:	93 1f       	adc	r25, r19
    1b02:	eb 81       	ldd	r30, Y+3	; 0x03
    1b04:	fc 81       	ldd	r31, Y+4	; 0x04
    1b06:	95 83       	std	Z+5, r25	; 0x05
    1b08:	84 83       	std	Z+4, r24	; 0x04
		int16_t i = interpolate(_position, -SMART_SPEED, SMART_SPEED, DRIVE_SPEED_MIN, DRIVE_SPEED_MAX);
    1b0a:	eb 81       	ldd	r30, Y+3	; 0x03
    1b0c:	fc 81       	ldd	r31, Y+4	; 0x04
    1b0e:	84 81       	ldd	r24, Z+4	; 0x04
    1b10:	95 81       	ldd	r25, Z+5	; 0x05
    1b12:	64 e0       	ldi	r22, 0x04	; 4
    1b14:	70 ec       	ldi	r23, 0xC0	; 192
    1b16:	4c ef       	ldi	r20, 0xFC	; 252
    1b18:	5f e3       	ldi	r21, 0x3F	; 63
    1b1a:	21 e8       	ldi	r18, 0x81	; 129
    1b1c:	3f ef       	ldi	r19, 0xFF	; 255
    1b1e:	0f e7       	ldi	r16, 0x7F	; 127
    1b20:	10 e0       	ldi	r17, 0x00	; 0
    1b22:	0e 94 da 12 	call	0x25b4	; 0x25b4 <interpolate>
    1b26:	9a 83       	std	Y+2, r25	; 0x02
    1b28:	89 83       	std	Y+1, r24	; 0x01
		_servo->setSpeed(i);
    1b2a:	eb 81       	ldd	r30, Y+3	; 0x03
    1b2c:	fc 81       	ldd	r31, Y+4	; 0x04
    1b2e:	80 81       	ld	r24, Z
    1b30:	91 81       	ldd	r25, Z+1	; 0x01
    1b32:	29 81       	ldd	r18, Y+1	; 0x01
    1b34:	62 2f       	mov	r22, r18
    1b36:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <_ZN8Actuator8setSpeedEa>
		//print(i);
		_step_count--;
    1b3a:	eb 81       	ldd	r30, Y+3	; 0x03
    1b3c:	fc 81       	ldd	r31, Y+4	; 0x04
    1b3e:	80 85       	ldd	r24, Z+8	; 0x08
    1b40:	91 85       	ldd	r25, Z+9	; 0x09
    1b42:	01 97       	sbiw	r24, 0x01	; 1
    1b44:	eb 81       	ldd	r30, Y+3	; 0x03
    1b46:	fc 81       	ldd	r31, Y+4	; 0x04
    1b48:	91 87       	std	Z+9, r25	; 0x09
    1b4a:	80 87       	std	Z+8, r24	; 0x08
	}

}
    1b4c:	0f 90       	pop	r0
    1b4e:	0f 90       	pop	r0
    1b50:	0f 90       	pop	r0
    1b52:	0f 90       	pop	r0
    1b54:	cf 91       	pop	r28
    1b56:	df 91       	pop	r29
    1b58:	1f 91       	pop	r17
    1b5a:	0f 91       	pop	r16
    1b5c:	08 95       	ret

00001b5e <_ZN4Uart5writeEh>:
	operator UART*() const{
		return m_cstr;
	}

	/* Implement the raw methods from Stream */
	virtual int write(uint8_t data){
    1b5e:	df 93       	push	r29
    1b60:	cf 93       	push	r28
    1b62:	00 d0       	rcall	.+0      	; 0x1b64 <_ZN4Uart5writeEh+0x6>
    1b64:	0f 92       	push	r0
    1b66:	cd b7       	in	r28, 0x3d	; 61
    1b68:	de b7       	in	r29, 0x3e	; 62
    1b6a:	9a 83       	std	Y+2, r25	; 0x02
    1b6c:	89 83       	std	Y+1, r24	; 0x01
    1b6e:	6b 83       	std	Y+3, r22	; 0x03
		return _uartSendByte(m_cstr, data);
    1b70:	e9 81       	ldd	r30, Y+1	; 0x01
    1b72:	fa 81       	ldd	r31, Y+2	; 0x02
    1b74:	80 89       	ldd	r24, Z+16	; 0x10
    1b76:	91 89       	ldd	r25, Z+17	; 0x11
    1b78:	6b 81       	ldd	r22, Y+3	; 0x03
    1b7a:	0e 94 5c 19 	call	0x32b8	; 0x32b8 <_uartSendByte>
    1b7e:	88 2f       	mov	r24, r24
    1b80:	90 e0       	ldi	r25, 0x00	; 0
	}
    1b82:	0f 90       	pop	r0
    1b84:	0f 90       	pop	r0
    1b86:	0f 90       	pop	r0
    1b88:	cf 91       	pop	r28
    1b8a:	df 91       	pop	r29
    1b8c:	08 95       	ret

00001b8e <_ZN10SmartMotor5printEi>:
void SmartMotor::stop_motion()
{
	_step_count = 0;
}

void SmartMotor::print(int16_t i)
    1b8e:	df 93       	push	r29
    1b90:	cf 93       	push	r28
    1b92:	cd b7       	in	r28, 0x3d	; 61
    1b94:	de b7       	in	r29, 0x3e	; 62
    1b96:	64 97       	sbiw	r28, 0x14	; 20
    1b98:	0f b6       	in	r0, 0x3f	; 63
    1b9a:	f8 94       	cli
    1b9c:	de bf       	out	0x3e, r29	; 62
    1b9e:	0f be       	out	0x3f, r0	; 63
    1ba0:	cd bf       	out	0x3d, r28	; 61
    1ba2:	9a 8b       	std	Y+18, r25	; 0x12
    1ba4:	89 8b       	std	Y+17, r24	; 0x11
    1ba6:	7c 8b       	std	Y+20, r23	; 0x14
    1ba8:	6b 8b       	std	Y+19, r22	; 0x13
{
		char str[10];
		for(int j=0;j<10;j++)
    1baa:	1c 82       	std	Y+4, r1	; 0x04
    1bac:	1b 82       	std	Y+3, r1	; 0x03
    1bae:	0d c0       	rjmp	.+26     	; 0x1bca <_ZN10SmartMotor5printEi+0x3c>
			str[j] = 0;
    1bb0:	2b 81       	ldd	r18, Y+3	; 0x03
    1bb2:	3c 81       	ldd	r19, Y+4	; 0x04
    1bb4:	ce 01       	movw	r24, r28
    1bb6:	07 96       	adiw	r24, 0x07	; 7
    1bb8:	fc 01       	movw	r30, r24
    1bba:	e2 0f       	add	r30, r18
    1bbc:	f3 1f       	adc	r31, r19
    1bbe:	10 82       	st	Z, r1
}

void SmartMotor::print(int16_t i)
{
		char str[10];
		for(int j=0;j<10;j++)
    1bc0:	8b 81       	ldd	r24, Y+3	; 0x03
    1bc2:	9c 81       	ldd	r25, Y+4	; 0x04
    1bc4:	01 96       	adiw	r24, 0x01	; 1
    1bc6:	9c 83       	std	Y+4, r25	; 0x04
    1bc8:	8b 83       	std	Y+3, r24	; 0x03
    1bca:	8b 81       	ldd	r24, Y+3	; 0x03
    1bcc:	9c 81       	ldd	r25, Y+4	; 0x04
    1bce:	8a 30       	cpi	r24, 0x0A	; 10
    1bd0:	91 05       	cpc	r25, r1
    1bd2:	74 f3       	brlt	.-36     	; 0x1bb0 <_ZN10SmartMotor5printEi+0x22>
			str[j] = 0;
		char *p = str;
    1bd4:	ce 01       	movw	r24, r28
    1bd6:	07 96       	adiw	r24, 0x07	; 7
    1bd8:	9e 83       	std	Y+6, r25	; 0x06
    1bda:	8d 83       	std	Y+5, r24	; 0x05
		p=itoa(i, (char*)str, 10);
    1bdc:	8b 89       	ldd	r24, Y+19	; 0x13
    1bde:	9c 89       	ldd	r25, Y+20	; 0x14
    1be0:	9e 01       	movw	r18, r28
    1be2:	29 5f       	subi	r18, 0xF9	; 249
    1be4:	3f 4f       	sbci	r19, 0xFF	; 255
    1be6:	b9 01       	movw	r22, r18
    1be8:	4a e0       	ldi	r20, 0x0A	; 10
    1bea:	50 e0       	ldi	r21, 0x00	; 0
    1bec:	0e 94 1e 1e 	call	0x3c3c	; 0x3c3c <itoa>
    1bf0:	9e 83       	std	Y+6, r25	; 0x06
    1bf2:	8d 83       	std	Y+5, r24	; 0x05
		for(int j=0;j<10;j++)
    1bf4:	1a 82       	std	Y+2, r1	; 0x02
    1bf6:	19 82       	std	Y+1, r1	; 0x01
    1bf8:	12 c0       	rjmp	.+36     	; 0x1c1e <_ZN10SmartMotor5printEi+0x90>
		{
			uart1.write(p[j]);
    1bfa:	29 81       	ldd	r18, Y+1	; 0x01
    1bfc:	3a 81       	ldd	r19, Y+2	; 0x02
    1bfe:	8d 81       	ldd	r24, Y+5	; 0x05
    1c00:	9e 81       	ldd	r25, Y+6	; 0x06
    1c02:	fc 01       	movw	r30, r24
    1c04:	e2 0f       	add	r30, r18
    1c06:	f3 1f       	adc	r31, r19
    1c08:	20 81       	ld	r18, Z
    1c0a:	8a ef       	ldi	r24, 0xFA	; 250
    1c0c:	93 e0       	ldi	r25, 0x03	; 3
    1c0e:	62 2f       	mov	r22, r18
    1c10:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <_ZN4Uart5writeEh>
		char str[10];
		for(int j=0;j<10;j++)
			str[j] = 0;
		char *p = str;
		p=itoa(i, (char*)str, 10);
		for(int j=0;j<10;j++)
    1c14:	89 81       	ldd	r24, Y+1	; 0x01
    1c16:	9a 81       	ldd	r25, Y+2	; 0x02
    1c18:	01 96       	adiw	r24, 0x01	; 1
    1c1a:	9a 83       	std	Y+2, r25	; 0x02
    1c1c:	89 83       	std	Y+1, r24	; 0x01
    1c1e:	89 81       	ldd	r24, Y+1	; 0x01
    1c20:	9a 81       	ldd	r25, Y+2	; 0x02
    1c22:	8a 30       	cpi	r24, 0x0A	; 10
    1c24:	91 05       	cpc	r25, r1
    1c26:	4c f3       	brlt	.-46     	; 0x1bfa <_ZN10SmartMotor5printEi+0x6c>
		{
			uart1.write(p[j]);
		} 
			uart1.write('\r');
    1c28:	8a ef       	ldi	r24, 0xFA	; 250
    1c2a:	93 e0       	ldi	r25, 0x03	; 3
    1c2c:	6d e0       	ldi	r22, 0x0D	; 13
    1c2e:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <_ZN4Uart5writeEh>
			uart1.write('\n');
    1c32:	8a ef       	ldi	r24, 0xFA	; 250
    1c34:	93 e0       	ldi	r25, 0x03	; 3
    1c36:	6a e0       	ldi	r22, 0x0A	; 10
    1c38:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <_ZN4Uart5writeEh>
}
    1c3c:	64 96       	adiw	r28, 0x14	; 20
    1c3e:	0f b6       	in	r0, 0x3f	; 63
    1c40:	f8 94       	cli
    1c42:	de bf       	out	0x3e, r29	; 62
    1c44:	0f be       	out	0x3f, r0	; 63
    1c46:	cd bf       	out	0x3d, r28	; 61
    1c48:	cf 91       	pop	r28
    1c4a:	df 91       	pop	r29
    1c4c:	08 95       	ret

00001c4e <marquee_put_char>:
    1c4e:	68 2f       	mov	r22, r24
    1c50:	89 e6       	ldi	r24, 0x69	; 105
    1c52:	92 e0       	ldi	r25, 0x02	; 2
    1c54:	0e 94 ba 14 	call	0x2974	; 0x2974 <marqueeSendByte>
    1c58:	90 e0       	ldi	r25, 0x00	; 0
    1c5a:	08 95       	ret

00001c5c <registerLED>:
    1c5c:	8b e0       	ldi	r24, 0x0B	; 11
    1c5e:	93 e0       	ldi	r25, 0x03	; 3
    1c60:	90 93 46 04 	sts	0x0446, r25
    1c64:	80 93 45 04 	sts	0x0445, r24
    1c68:	80 91 47 04 	lds	r24, 0x0447
    1c6c:	8c 7f       	andi	r24, 0xFC	; 252
    1c6e:	80 93 47 04 	sts	0x0447, r24
    1c72:	85 e4       	ldi	r24, 0x45	; 69
    1c74:	94 e0       	ldi	r25, 0x04	; 4
    1c76:	6f ef       	ldi	r22, 0xFF	; 255
    1c78:	0e 94 30 14 	call	0x2860	; 0x2860 <LED_set>
    1c7c:	08 95       	ret

00001c7e <initHardware>:
    1c7e:	82 ec       	ldi	r24, 0xC2	; 194
    1c80:	92 e0       	ldi	r25, 0x02	; 2
    1c82:	0e 94 c0 10 	call	0x2180	; 0x2180 <servoPWMInit>
    1c86:	08 95       	ret

00001c88 <sysInitHardware>:
    1c88:	80 91 56 02 	lds	r24, 0x0256
    1c8c:	90 91 57 02 	lds	r25, 0x0257
    1c90:	6f ef       	ldi	r22, 0xFF	; 255
    1c92:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <pin_make_input>
    1c96:	84 e2       	ldi	r24, 0x24	; 36
    1c98:	92 e0       	ldi	r25, 0x02	; 2
    1c9a:	40 e0       	ldi	r20, 0x00	; 0
    1c9c:	52 ec       	ldi	r21, 0xC2	; 194
    1c9e:	61 e0       	ldi	r22, 0x01	; 1
    1ca0:	70 e0       	ldi	r23, 0x00	; 0
    1ca2:	0e 94 87 17 	call	0x2f0e	; 0x2f0e <_uartInit>
    1ca6:	08 95       	ret

00001ca8 <__vector_36>:
    1ca8:	1f 92       	push	r1
    1caa:	0f 92       	push	r0
    1cac:	0f b6       	in	r0, 0x3f	; 63
    1cae:	0f 92       	push	r0
    1cb0:	11 24       	eor	r1, r1
    1cb2:	2f 93       	push	r18
    1cb4:	3f 93       	push	r19
    1cb6:	4f 93       	push	r20
    1cb8:	5f 93       	push	r21
    1cba:	6f 93       	push	r22
    1cbc:	7f 93       	push	r23
    1cbe:	8f 93       	push	r24
    1cc0:	9f 93       	push	r25
    1cc2:	af 93       	push	r26
    1cc4:	bf 93       	push	r27
    1cc6:	ef 93       	push	r30
    1cc8:	ff 93       	push	r31
    1cca:	e0 91 50 02 	lds	r30, 0x0250
    1cce:	f0 91 51 02 	lds	r31, 0x0251
    1cd2:	60 81       	ld	r22, Z
    1cd4:	84 e2       	ldi	r24, 0x24	; 36
    1cd6:	92 e0       	ldi	r25, 0x02	; 2
    1cd8:	0e 94 bb 18 	call	0x3176	; 0x3176 <__uartReceiveService>
    1cdc:	ff 91       	pop	r31
    1cde:	ef 91       	pop	r30
    1ce0:	bf 91       	pop	r27
    1ce2:	af 91       	pop	r26
    1ce4:	9f 91       	pop	r25
    1ce6:	8f 91       	pop	r24
    1ce8:	7f 91       	pop	r23
    1cea:	6f 91       	pop	r22
    1cec:	5f 91       	pop	r21
    1cee:	4f 91       	pop	r20
    1cf0:	3f 91       	pop	r19
    1cf2:	2f 91       	pop	r18
    1cf4:	0f 90       	pop	r0
    1cf6:	0f be       	out	0x3f, r0	; 63
    1cf8:	0f 90       	pop	r0
    1cfa:	1f 90       	pop	r1
    1cfc:	18 95       	reti

00001cfe <__vector_38>:
    1cfe:	1f 92       	push	r1
    1d00:	0f 92       	push	r0
    1d02:	0f b6       	in	r0, 0x3f	; 63
    1d04:	0f 92       	push	r0
    1d06:	11 24       	eor	r1, r1
    1d08:	2f 93       	push	r18
    1d0a:	3f 93       	push	r19
    1d0c:	4f 93       	push	r20
    1d0e:	5f 93       	push	r21
    1d10:	6f 93       	push	r22
    1d12:	7f 93       	push	r23
    1d14:	8f 93       	push	r24
    1d16:	9f 93       	push	r25
    1d18:	af 93       	push	r26
    1d1a:	bf 93       	push	r27
    1d1c:	ef 93       	push	r30
    1d1e:	ff 93       	push	r31
    1d20:	84 e2       	ldi	r24, 0x24	; 36
    1d22:	92 e0       	ldi	r25, 0x02	; 2
    1d24:	0e 94 66 19 	call	0x32cc	; 0x32cc <__uartTransmitService>
    1d28:	ff 91       	pop	r31
    1d2a:	ef 91       	pop	r30
    1d2c:	bf 91       	pop	r27
    1d2e:	af 91       	pop	r26
    1d30:	9f 91       	pop	r25
    1d32:	8f 91       	pop	r24
    1d34:	7f 91       	pop	r23
    1d36:	6f 91       	pop	r22
    1d38:	5f 91       	pop	r21
    1d3a:	4f 91       	pop	r20
    1d3c:	3f 91       	pop	r19
    1d3e:	2f 91       	pop	r18
    1d40:	0f 90       	pop	r0
    1d42:	0f be       	out	0x3f, r0	; 63
    1d44:	0f 90       	pop	r0
    1d46:	1f 90       	pop	r1
    1d48:	18 95       	reti

00001d4a <uart1GetByte>:
    1d4a:	84 e2       	ldi	r24, 0x24	; 36
    1d4c:	92 e0       	ldi	r25, 0x02	; 2
    1d4e:	0e 94 d5 18 	call	0x31aa	; 0x31aa <__uartGetByte>
    1d52:	08 95       	ret

00001d54 <uart1SendByte>:
    1d54:	68 2f       	mov	r22, r24
    1d56:	84 e2       	ldi	r24, 0x24	; 36
    1d58:	92 e0       	ldi	r25, 0x02	; 2
    1d5a:	0e 94 5c 19 	call	0x32b8	; 0x32b8 <_uartSendByte>
    1d5e:	90 e0       	ldi	r25, 0x00	; 0
    1d60:	08 95       	ret

00001d62 <clockGetSnapshot>:
    1d62:	fc 01       	movw	r30, r24
    1d64:	6f b7       	in	r22, 0x3f	; 63
    1d66:	f8 94       	cli
    1d68:	80 91 24 01 	lds	r24, 0x0124
    1d6c:	90 91 25 01 	lds	r25, 0x0125
    1d70:	20 91 cf 03 	lds	r18, 0x03CF
    1d74:	30 91 d0 03 	lds	r19, 0x03D0
    1d78:	40 91 d1 03 	lds	r20, 0x03D1
    1d7c:	50 91 d2 03 	lds	r21, 0x03D2
    1d80:	20 83       	st	Z, r18
    1d82:	31 83       	std	Z+1, r19	; 0x01
    1d84:	42 83       	std	Z+2, r20	; 0x02
    1d86:	53 83       	std	Z+3, r21	; 0x03
    1d88:	20 91 24 01 	lds	r18, 0x0124
    1d8c:	30 91 25 01 	lds	r19, 0x0125
    1d90:	35 83       	std	Z+5, r19	; 0x05
    1d92:	24 83       	std	Z+4, r18	; 0x04
    1d94:	28 17       	cp	r18, r24
    1d96:	39 07       	cpc	r19, r25
    1d98:	10 f0       	brcs	.+4      	; 0x1d9e <clockGetSnapshot+0x3c>
    1d9a:	d1 9b       	sbis	0x1a, 1	; 26
    1d9c:	12 c0       	rjmp	.+36     	; 0x1dc2 <clockGetSnapshot+0x60>
    1d9e:	80 81       	ld	r24, Z
    1da0:	91 81       	ldd	r25, Z+1	; 0x01
    1da2:	a2 81       	ldd	r26, Z+2	; 0x02
    1da4:	b3 81       	ldd	r27, Z+3	; 0x03
    1da6:	80 50       	subi	r24, 0x00	; 0
    1da8:	93 48       	sbci	r25, 0x83	; 131
    1daa:	af 4f       	sbci	r26, 0xFF	; 255
    1dac:	bf 4f       	sbci	r27, 0xFF	; 255
    1dae:	80 83       	st	Z, r24
    1db0:	91 83       	std	Z+1, r25	; 0x01
    1db2:	a2 83       	std	Z+2, r26	; 0x02
    1db4:	b3 83       	std	Z+3, r27	; 0x03
    1db6:	80 91 24 01 	lds	r24, 0x0124
    1dba:	90 91 25 01 	lds	r25, 0x0125
    1dbe:	95 83       	std	Z+5, r25	; 0x05
    1dc0:	84 83       	std	Z+4, r24	; 0x04
    1dc2:	6f bf       	out	0x3f, r22	; 63
    1dc4:	08 95       	ret

00001dc6 <clockSnapshotToTicks>:
    1dc6:	ef 92       	push	r14
    1dc8:	ff 92       	push	r15
    1dca:	0f 93       	push	r16
    1dcc:	1f 93       	push	r17
    1dce:	fc 01       	movw	r30, r24
    1dd0:	e0 80       	ld	r14, Z
    1dd2:	f1 80       	ldd	r15, Z+1	; 0x01
    1dd4:	02 81       	ldd	r16, Z+2	; 0x02
    1dd6:	13 81       	ldd	r17, Z+3	; 0x03
    1dd8:	64 81       	ldd	r22, Z+4	; 0x04
    1dda:	75 81       	ldd	r23, Z+5	; 0x05
    1ddc:	80 e0       	ldi	r24, 0x00	; 0
    1dde:	90 e0       	ldi	r25, 0x00	; 0
    1de0:	20 e0       	ldi	r18, 0x00	; 0
    1de2:	3d e7       	ldi	r19, 0x7D	; 125
    1de4:	40 e0       	ldi	r20, 0x00	; 0
    1de6:	50 e0       	ldi	r21, 0x00	; 0
    1de8:	0e 94 4f 1f 	call	0x3e9e	; 0x3e9e <__mulsi3>
    1dec:	20 e0       	ldi	r18, 0x00	; 0
    1dee:	3a ef       	ldi	r19, 0xFA	; 250
    1df0:	40 e0       	ldi	r20, 0x00	; 0
    1df2:	50 e0       	ldi	r21, 0x00	; 0
    1df4:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__udivmodsi4>
    1df8:	2e 0d       	add	r18, r14
    1dfa:	3f 1d       	adc	r19, r15
    1dfc:	40 1f       	adc	r20, r16
    1dfe:	51 1f       	adc	r21, r17
    1e00:	b9 01       	movw	r22, r18
    1e02:	ca 01       	movw	r24, r20
    1e04:	1f 91       	pop	r17
    1e06:	0f 91       	pop	r16
    1e08:	ff 90       	pop	r15
    1e0a:	ef 90       	pop	r14
    1e0c:	08 95       	ret

00001e0e <clockGetus>:
    1e0e:	0f 93       	push	r16
    1e10:	1f 93       	push	r17
    1e12:	df 93       	push	r29
    1e14:	cf 93       	push	r28
    1e16:	00 d0       	rcall	.+0      	; 0x1e18 <clockGetus+0xa>
    1e18:	00 d0       	rcall	.+0      	; 0x1e1a <clockGetus+0xc>
    1e1a:	00 d0       	rcall	.+0      	; 0x1e1c <clockGetus+0xe>
    1e1c:	cd b7       	in	r28, 0x3d	; 61
    1e1e:	de b7       	in	r29, 0x3e	; 62
    1e20:	8e 01       	movw	r16, r28
    1e22:	0f 5f       	subi	r16, 0xFF	; 255
    1e24:	1f 4f       	sbci	r17, 0xFF	; 255
    1e26:	c8 01       	movw	r24, r16
    1e28:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <clockGetSnapshot>
    1e2c:	c8 01       	movw	r24, r16
    1e2e:	0e 94 e3 0e 	call	0x1dc6	; 0x1dc6 <clockSnapshotToTicks>
    1e32:	26 96       	adiw	r28, 0x06	; 6
    1e34:	0f b6       	in	r0, 0x3f	; 63
    1e36:	f8 94       	cli
    1e38:	de bf       	out	0x3e, r29	; 62
    1e3a:	0f be       	out	0x3f, r0	; 63
    1e3c:	cd bf       	out	0x3d, r28	; 61
    1e3e:	cf 91       	pop	r28
    1e40:	df 91       	pop	r29
    1e42:	1f 91       	pop	r17
    1e44:	0f 91       	pop	r16
    1e46:	08 95       	ret

00001e48 <__clockInit>:
    1e48:	d1 9a       	sbi	0x1a, 1	; 26
    1e4a:	e3 e7       	ldi	r30, 0x73	; 115
    1e4c:	f0 e0       	ldi	r31, 0x00	; 0
    1e4e:	80 81       	ld	r24, Z
    1e50:	82 60       	ori	r24, 0x02	; 2
    1e52:	80 83       	st	Z, r24
    1e54:	08 95       	ret

00001e56 <__vector_47>:
    1e56:	1f 92       	push	r1
    1e58:	0f 92       	push	r0
    1e5a:	0f b6       	in	r0, 0x3f	; 63
    1e5c:	0f 92       	push	r0
    1e5e:	11 24       	eor	r1, r1
    1e60:	2f 93       	push	r18
    1e62:	8f 93       	push	r24
    1e64:	9f 93       	push	r25
    1e66:	af 93       	push	r26
    1e68:	bf 93       	push	r27
    1e6a:	80 91 cf 03 	lds	r24, 0x03CF
    1e6e:	90 91 d0 03 	lds	r25, 0x03D0
    1e72:	a0 91 d1 03 	lds	r26, 0x03D1
    1e76:	b0 91 d2 03 	lds	r27, 0x03D2
    1e7a:	80 50       	subi	r24, 0x00	; 0
    1e7c:	93 48       	sbci	r25, 0x83	; 131
    1e7e:	af 4f       	sbci	r26, 0xFF	; 255
    1e80:	bf 4f       	sbci	r27, 0xFF	; 255
    1e82:	80 93 cf 03 	sts	0x03CF, r24
    1e86:	90 93 d0 03 	sts	0x03D0, r25
    1e8a:	a0 93 d1 03 	sts	0x03D1, r26
    1e8e:	b0 93 d2 03 	sts	0x03D2, r27
    1e92:	20 91 40 04 	lds	r18, 0x0440
    1e96:	22 23       	and	r18, r18
    1e98:	b9 f1       	breq	.+110    	; 0x1f08 <__vector_47+0xb2>
    1e9a:	39 9b       	sbis	0x07, 1	; 7
    1e9c:	35 c0       	rjmp	.+106    	; 0x1f08 <__vector_47+0xb2>
    1e9e:	80 91 d3 03 	lds	r24, 0x03D3
    1ea2:	88 23       	and	r24, r24
    1ea4:	19 f0       	breq	.+6      	; 0x1eac <__vector_47+0x56>
    1ea6:	81 50       	subi	r24, 0x01	; 1
    1ea8:	80 93 d3 03 	sts	0x03D3, r24
    1eac:	80 91 d3 03 	lds	r24, 0x03D3
    1eb0:	88 23       	and	r24, r24
    1eb2:	51 f5       	brne	.+84     	; 0x1f08 <__vector_47+0xb2>
    1eb4:	80 91 41 04 	lds	r24, 0x0441
    1eb8:	88 23       	and	r24, r24
    1eba:	59 f4       	brne	.+22     	; 0x1ed2 <__vector_47+0x7c>
    1ebc:	82 2f       	mov	r24, r18
    1ebe:	99 27       	eor	r25, r25
    1ec0:	87 fd       	sbrc	r24, 7
    1ec2:	90 95       	com	r25
    1ec4:	97 ff       	sbrs	r25, 7
    1ec6:	03 c0       	rjmp	.+6      	; 0x1ece <__vector_47+0x78>
    1ec8:	90 95       	com	r25
    1eca:	81 95       	neg	r24
    1ecc:	9f 4f       	sbci	r25, 0xFF	; 255
    1ece:	80 93 41 04 	sts	0x0441, r24
    1ed2:	27 fd       	sbrc	r18, 7
    1ed4:	02 c0       	rjmp	.+4      	; 0x1eda <__vector_47+0x84>
    1ed6:	9f e0       	ldi	r25, 0x0F	; 15
    1ed8:	01 c0       	rjmp	.+2      	; 0x1edc <__vector_47+0x86>
    1eda:	97 e0       	ldi	r25, 0x07	; 7
    1edc:	20 91 42 04 	lds	r18, 0x0442
    1ee0:	22 23       	and	r18, r18
    1ee2:	41 f0       	breq	.+16     	; 0x1ef4 <__vector_47+0x9e>
    1ee4:	80 91 41 04 	lds	r24, 0x0441
    1ee8:	81 50       	subi	r24, 0x01	; 1
    1eea:	80 93 41 04 	sts	0x0441, r24
    1eee:	88 23       	and	r24, r24
    1ef0:	09 f4       	brne	.+2      	; 0x1ef4 <__vector_47+0x9e>
    1ef2:	9e e3       	ldi	r25, 0x3E	; 62
    1ef4:	10 92 42 04 	sts	0x0442, r1
    1ef8:	22 23       	and	r18, r18
    1efa:	19 f4       	brne	.+6      	; 0x1f02 <__vector_47+0xac>
    1efc:	81 e0       	ldi	r24, 0x01	; 1
    1efe:	80 93 42 04 	sts	0x0442, r24
    1f02:	90 93 d3 03 	sts	0x03D3, r25
    1f06:	31 9a       	sbi	0x06, 1	; 6
    1f08:	bf 91       	pop	r27
    1f0a:	af 91       	pop	r26
    1f0c:	9f 91       	pop	r25
    1f0e:	8f 91       	pop	r24
    1f10:	2f 91       	pop	r18
    1f12:	0f 90       	pop	r0
    1f14:	0f be       	out	0x3f, r0	; 63
    1f16:	0f 90       	pop	r0
    1f18:	1f 90       	pop	r1
    1f1a:	18 95       	reti

00001f1c <_ZN6Stream4_putEcP6__file>:
    1f1c:	28 2f       	mov	r18, r24
    1f1e:	61 15       	cp	r22, r1
    1f20:	71 05       	cpc	r23, r1
    1f22:	19 f4       	brne	.+6      	; 0x1f2a <_ZN6Stream4_putEcP6__file+0xe>
    1f24:	a0 e0       	ldi	r26, 0x00	; 0
    1f26:	b0 e0       	ldi	r27, 0x00	; 0
    1f28:	02 c0       	rjmp	.+4      	; 0x1f2e <_ZN6Stream4_putEcP6__file+0x12>
    1f2a:	db 01       	movw	r26, r22
    1f2c:	12 97       	sbiw	r26, 0x02	; 2
    1f2e:	ed 91       	ld	r30, X+
    1f30:	fc 91       	ld	r31, X
    1f32:	11 97       	sbiw	r26, 0x01	; 1
    1f34:	01 90       	ld	r0, Z+
    1f36:	f0 81       	ld	r31, Z
    1f38:	e0 2d       	mov	r30, r0
    1f3a:	cd 01       	movw	r24, r26
    1f3c:	62 2f       	mov	r22, r18
    1f3e:	09 95       	icall
    1f40:	08 95       	ret

00001f42 <_ZN6Stream4_getEP6__file>:
    1f42:	00 97       	sbiw	r24, 0x00	; 0
    1f44:	19 f4       	brne	.+6      	; 0x1f4c <_ZN6Stream4_getEP6__file+0xa>
    1f46:	a0 e0       	ldi	r26, 0x00	; 0
    1f48:	b0 e0       	ldi	r27, 0x00	; 0
    1f4a:	02 c0       	rjmp	.+4      	; 0x1f50 <_ZN6Stream4_getEP6__file+0xe>
    1f4c:	dc 01       	movw	r26, r24
    1f4e:	12 97       	sbiw	r26, 0x02	; 2
    1f50:	ed 91       	ld	r30, X+
    1f52:	fc 91       	ld	r31, X
    1f54:	11 97       	sbiw	r26, 0x01	; 1
    1f56:	02 80       	ldd	r0, Z+2	; 0x02
    1f58:	f3 81       	ldd	r31, Z+3	; 0x03
    1f5a:	e0 2d       	mov	r30, r0
    1f5c:	cd 01       	movw	r24, r26
    1f5e:	09 95       	icall
    1f60:	08 95       	ret

00001f62 <_ZN10NullStream5writeEh>:
    1f62:	86 2f       	mov	r24, r22
    1f64:	90 e0       	ldi	r25, 0x00	; 0
    1f66:	08 95       	ret

00001f68 <_ZN10NullStream4readEv>:
    1f68:	8f ef       	ldi	r24, 0xFF	; 255
    1f6a:	9f ef       	ldi	r25, 0xFF	; 255
    1f6c:	08 95       	ret

00001f6e <_ZN7Marquee4readEv>:
    1f6e:	8f ef       	ldi	r24, 0xFF	; 255
    1f70:	9f ef       	ldi	r25, 0xFF	; 255
    1f72:	08 95       	ret

00001f74 <_Z10_cpp_Init_v>:
    1f74:	08 95       	ret

00001f76 <__cxa_pure_virtual>:
    1f76:	ff cf       	rjmp	.-2      	; 0x1f76 <__cxa_pure_virtual>

00001f78 <_GLOBAL__I_statusLed>:
    1f78:	85 e4       	ldi	r24, 0x45	; 69
    1f7a:	94 e0       	ldi	r25, 0x04	; 4
    1f7c:	90 93 d7 03 	sts	0x03D7, r25
    1f80:	80 93 d6 03 	sts	0x03D6, r24
    1f84:	83 ed       	ldi	r24, 0xD3	; 211
    1f86:	92 e0       	ldi	r25, 0x02	; 2
    1f88:	90 93 d5 03 	sts	0x03D5, r25
    1f8c:	80 93 d4 03 	sts	0x03D4, r24
    1f90:	86 e5       	ldi	r24, 0x56	; 86
    1f92:	92 e0       	ldi	r25, 0x02	; 2
    1f94:	90 93 d9 03 	sts	0x03D9, r25
    1f98:	80 93 d8 03 	sts	0x03D8, r24
    1f9c:	6e e8       	ldi	r22, 0x8E	; 142
    1f9e:	7f e0       	ldi	r23, 0x0F	; 15
    1fa0:	70 93 e5 03 	sts	0x03E5, r23
    1fa4:	60 93 e4 03 	sts	0x03E4, r22
    1fa8:	41 ea       	ldi	r20, 0xA1	; 161
    1faa:	5f e0       	ldi	r21, 0x0F	; 15
    1fac:	50 93 e7 03 	sts	0x03E7, r21
    1fb0:	40 93 e6 03 	sts	0x03E6, r20
    1fb4:	a3 e0       	ldi	r26, 0x03	; 3
    1fb6:	a0 93 df 03 	sts	0x03DF, r26
    1fba:	10 92 e9 03 	sts	0x03E9, r1
    1fbe:	10 92 e8 03 	sts	0x03E8, r1
    1fc2:	8f ed       	ldi	r24, 0xDF	; 223
    1fc4:	92 e0       	ldi	r25, 0x02	; 2
    1fc6:	90 93 db 03 	sts	0x03DB, r25
    1fca:	80 93 da 03 	sts	0x03DA, r24
    1fce:	89 e6       	ldi	r24, 0x69	; 105
    1fd0:	92 e0       	ldi	r25, 0x02	; 2
    1fd2:	90 93 eb 03 	sts	0x03EB, r25
    1fd6:	80 93 ea 03 	sts	0x03EA, r24
    1fda:	80 e8       	ldi	r24, 0x80	; 128
    1fdc:	92 e0       	ldi	r25, 0x02	; 2
    1fde:	90 93 ed 03 	sts	0x03ED, r25
    1fe2:	80 93 ec 03 	sts	0x03EC, r24
    1fe6:	90 93 ef 03 	sts	0x03EF, r25
    1fea:	80 93 ee 03 	sts	0x03EE, r24
    1fee:	86 e9       	ldi	r24, 0x96	; 150
    1ff0:	92 e0       	ldi	r25, 0x02	; 2
    1ff2:	90 93 f1 03 	sts	0x03F1, r25
    1ff6:	80 93 f0 03 	sts	0x03F0, r24
    1ffa:	90 93 f3 03 	sts	0x03F3, r25
    1ffe:	80 93 f2 03 	sts	0x03F2, r24
    2002:	8c ea       	ldi	r24, 0xAC	; 172
    2004:	92 e0       	ldi	r25, 0x02	; 2
    2006:	90 93 f5 03 	sts	0x03F5, r25
    200a:	80 93 f4 03 	sts	0x03F4, r24
    200e:	90 93 f7 03 	sts	0x03F7, r25
    2012:	80 93 f6 03 	sts	0x03F6, r24
    2016:	82 ec       	ldi	r24, 0xC2	; 194
    2018:	92 e0       	ldi	r25, 0x02	; 2
    201a:	90 93 f9 03 	sts	0x03F9, r25
    201e:	80 93 f8 03 	sts	0x03F8, r24
    2022:	70 93 05 04 	sts	0x0405, r23
    2026:	60 93 04 04 	sts	0x0404, r22
    202a:	50 93 07 04 	sts	0x0407, r21
    202e:	40 93 06 04 	sts	0x0406, r20
    2032:	a0 93 ff 03 	sts	0x03FF, r26
    2036:	10 92 09 04 	sts	0x0409, r1
    203a:	10 92 08 04 	sts	0x0408, r1
    203e:	24 e2       	ldi	r18, 0x24	; 36
    2040:	32 e0       	ldi	r19, 0x02	; 2
    2042:	30 93 0b 04 	sts	0x040B, r19
    2046:	20 93 0a 04 	sts	0x040A, r18
    204a:	ea ef       	ldi	r30, 0xFA	; 250
    204c:	f3 e0       	ldi	r31, 0x03	; 3
    204e:	f0 93 3a 02 	sts	0x023A, r31
    2052:	e0 93 39 02 	sts	0x0239, r30
    2056:	8f ee       	ldi	r24, 0xEF	; 239
    2058:	92 e0       	ldi	r25, 0x02	; 2
    205a:	91 83       	std	Z+1, r25	; 0x01
    205c:	80 83       	st	Z, r24
    205e:	30 93 11 04 	sts	0x0411, r19
    2062:	20 93 10 04 	sts	0x0410, r18
    2066:	10 92 12 04 	sts	0x0412, r1
    206a:	70 93 1e 04 	sts	0x041E, r23
    206e:	60 93 1d 04 	sts	0x041D, r22
    2072:	50 93 20 04 	sts	0x0420, r21
    2076:	40 93 1f 04 	sts	0x041F, r20
    207a:	a0 93 18 04 	sts	0x0418, r26
    207e:	10 92 22 04 	sts	0x0422, r1
    2082:	10 92 21 04 	sts	0x0421, r1
    2086:	8f ef       	ldi	r24, 0xFF	; 255
    2088:	92 e0       	ldi	r25, 0x02	; 2
    208a:	90 93 14 04 	sts	0x0414, r25
    208e:	80 93 13 04 	sts	0x0413, r24
    2092:	08 95       	ret

00002094 <_ZNK9StatusLed3setEa>:
    2094:	1f 93       	push	r17
    2096:	16 2f       	mov	r17, r22
    2098:	80 91 45 04 	lds	r24, 0x0445
    209c:	90 91 46 04 	lds	r25, 0x0446
    20a0:	0e 94 cd 13 	call	0x279a	; 0x279a <pin_is_output>
    20a4:	88 23       	and	r24, r24
    20a6:	29 f0       	breq	.+10     	; 0x20b2 <_ZNK9StatusLed3setEa+0x1e>
    20a8:	85 e4       	ldi	r24, 0x45	; 69
    20aa:	94 e0       	ldi	r25, 0x04	; 4
    20ac:	61 2f       	mov	r22, r17
    20ae:	0e 94 30 14 	call	0x2860	; 0x2860 <LED_set>
    20b2:	1f 91       	pop	r17
    20b4:	08 95       	ret

000020b6 <_ZNK3Led3setEa>:
    20b6:	fc 01       	movw	r30, r24
    20b8:	82 81       	ldd	r24, Z+2	; 0x02
    20ba:	93 81       	ldd	r25, Z+3	; 0x03
    20bc:	0e 94 30 14 	call	0x2860	; 0x2860 <LED_set>
    20c0:	08 95       	ret

000020c2 <_ZN7Marquee5writeEh>:
    20c2:	fc 01       	movw	r30, r24
    20c4:	80 89       	ldd	r24, Z+16	; 0x10
    20c6:	91 89       	ldd	r25, Z+17	; 0x11
    20c8:	0e 94 ba 14 	call	0x2974	; 0x2974 <marqueeSendByte>
    20cc:	90 e0       	ldi	r25, 0x00	; 0
    20ce:	08 95       	ret

000020d0 <_ZN6UartHW4readEv>:
    20d0:	fc 01       	movw	r30, r24
    20d2:	80 8d       	ldd	r24, Z+24	; 0x18
    20d4:	88 23       	and	r24, r24
    20d6:	29 f0       	breq	.+10     	; 0x20e2 <_ZN6UartHW4readEv+0x12>
    20d8:	86 89       	ldd	r24, Z+22	; 0x16
    20da:	97 89       	ldd	r25, Z+23	; 0x17
    20dc:	0e 94 9d 19 	call	0x333a	; 0x333a <uartPollByte>
    20e0:	08 95       	ret
    20e2:	80 89       	ldd	r24, Z+16	; 0x10
    20e4:	91 89       	ldd	r25, Z+17	; 0x11
    20e6:	0e 94 d5 18 	call	0x31aa	; 0x31aa <__uartGetByte>
    20ea:	08 95       	ret

000020ec <_ZN4Uart4readEv>:
    20ec:	fc 01       	movw	r30, r24
    20ee:	80 89       	ldd	r24, Z+16	; 0x10
    20f0:	91 89       	ldd	r25, Z+17	; 0x11
    20f2:	0e 94 d5 18 	call	0x31aa	; 0x31aa <__uartGetByte>
    20f6:	08 95       	ret
    20f8:	fc 01       	movw	r30, r24
    20fa:	80 89       	ldd	r24, Z+16	; 0x10
    20fc:	91 89       	ldd	r25, Z+17	; 0x11
    20fe:	0e 94 5c 19 	call	0x32b8	; 0x32b8 <_uartSendByte>
    2102:	90 e0       	ldi	r25, 0x00	; 0
    2104:	08 95       	ret

00002106 <__initTimers>:
    2106:	24 ea       	ldi	r18, 0xA4	; 164
    2108:	32 e0       	ldi	r19, 0x02	; 2
    210a:	f9 01       	movw	r30, r18
    210c:	a5 91       	lpm	r26, Z+
    210e:	b4 91       	lpm	r27, Z+
    2110:	8e e0       	ldi	r24, 0x0E	; 14
    2112:	1a 96       	adiw	r26, 0x0a	; 10
    2114:	8c 93       	st	X, r24
    2116:	1a 97       	sbiw	r26, 0x0a	; 10
    2118:	e0 ea       	ldi	r30, 0xA0	; 160
    211a:	f0 e0       	ldi	r31, 0x00	; 0
    211c:	80 81       	ld	r24, Z
    211e:	82 60       	ori	r24, 0x02	; 2
    2120:	80 83       	st	Z, r24
    2122:	e1 ea       	ldi	r30, 0xA1	; 161
    2124:	f0 e0       	ldi	r31, 0x00	; 0
    2126:	80 81       	ld	r24, Z
    2128:	88 60       	ori	r24, 0x08	; 8
    212a:	80 83       	st	Z, r24
    212c:	80 81       	ld	r24, Z
    212e:	80 61       	ori	r24, 0x10	; 16
    2130:	80 83       	st	Z, r24
    2132:	80 e4       	ldi	r24, 0x40	; 64
    2134:	9c e9       	ldi	r25, 0x9C	; 156
    2136:	90 93 a7 00 	sts	0x00A7, r25
    213a:	80 93 a6 00 	sts	0x00A6, r24
    213e:	48 e0       	ldi	r20, 0x08	; 8
    2140:	50 e0       	ldi	r21, 0x00	; 0
    2142:	4d 93       	st	X+, r20
    2144:	5c 93       	st	X, r21
    2146:	80 81       	ld	r24, Z
    2148:	82 60       	ori	r24, 0x02	; 2
    214a:	80 83       	st	Z, r24
    214c:	24 5d       	subi	r18, 0xD4	; 212
    214e:	3f 4f       	sbci	r19, 0xFF	; 255
    2150:	f9 01       	movw	r30, r18
    2152:	a5 91       	lpm	r26, Z+
    2154:	b4 91       	lpm	r27, Z+
    2156:	84 e0       	ldi	r24, 0x04	; 4
    2158:	1a 96       	adiw	r26, 0x0a	; 10
    215a:	8c 93       	st	X, r24
    215c:	1a 97       	sbiw	r26, 0x0a	; 10
    215e:	e1 e2       	ldi	r30, 0x21	; 33
    2160:	f1 e0       	ldi	r31, 0x01	; 1
    2162:	80 81       	ld	r24, Z
    2164:	88 60       	ori	r24, 0x08	; 8
    2166:	80 83       	st	Z, r24
    2168:	80 e0       	ldi	r24, 0x00	; 0
    216a:	9a ef       	ldi	r25, 0xFA	; 250
    216c:	90 93 29 01 	sts	0x0129, r25
    2170:	80 93 28 01 	sts	0x0128, r24
    2174:	4d 93       	st	X+, r20
    2176:	5c 93       	st	X, r21
    2178:	80 81       	ld	r24, Z
    217a:	82 60       	ori	r24, 0x02	; 2
    217c:	80 83       	st	Z, r24
    217e:	08 95       	ret

00002180 <servoPWMInit>:
    2180:	8f 92       	push	r8
    2182:	9f 92       	push	r9
    2184:	af 92       	push	r10
    2186:	bf 92       	push	r11
    2188:	cf 92       	push	r12
    218a:	df 92       	push	r13
    218c:	ef 92       	push	r14
    218e:	ff 92       	push	r15
    2190:	0f 93       	push	r16
    2192:	1f 93       	push	r17
    2194:	cf 93       	push	r28
    2196:	df 93       	push	r29
    2198:	6c 01       	movw	r12, r24
    219a:	dc 01       	movw	r26, r24
    219c:	12 96       	adiw	r26, 0x02	; 2
    219e:	8c 91       	ld	r24, X
    21a0:	c8 2f       	mov	r28, r24
    21a2:	d0 e0       	ldi	r29, 0x00	; 0
    21a4:	21 97       	sbiw	r28, 0x01	; 1
    21a6:	7e 01       	movw	r14, r28
    21a8:	ee 0c       	add	r14, r14
    21aa:	ff 1c       	adc	r15, r15
    21ac:	9f e7       	ldi	r25, 0x7F	; 127
    21ae:	89 2e       	mov	r8, r25
    21b0:	93 e0       	ldi	r25, 0x03	; 3
    21b2:	99 2e       	mov	r9, r25
    21b4:	8c e2       	ldi	r24, 0x2C	; 44
    21b6:	a8 2e       	mov	r10, r24
    21b8:	47 c0       	rjmp	.+142    	; 0x2248 <__stack+0x49>
    21ba:	d6 01       	movw	r26, r12
    21bc:	ed 91       	ld	r30, X+
    21be:	fc 91       	ld	r31, X
    21c0:	ee 0d       	add	r30, r14
    21c2:	ff 1d       	adc	r31, r15
    21c4:	05 91       	lpm	r16, Z+
    21c6:	14 91       	lpm	r17, Z+
    21c8:	f8 01       	movw	r30, r16
    21ca:	d5 82       	std	Z+5, r13	; 0x05
    21cc:	c4 82       	std	Z+4, r12	; 0x04
    21ce:	86 81       	ldd	r24, Z+6	; 0x06
    21d0:	97 81       	ldd	r25, Z+7	; 0x07
    21d2:	0e 94 d8 16 	call	0x2db0	; 0x2db0 <compareFromIOPin>
    21d6:	fc 01       	movw	r30, r24
    21d8:	d8 01       	movw	r26, r16
    21da:	55 96       	adiw	r26, 0x15	; 21
    21dc:	9c 93       	st	X, r25
    21de:	8e 93       	st	-X, r24
    21e0:	54 97       	sbiw	r26, 0x14	; 20
    21e2:	32 96       	adiw	r30, 0x02	; 2
    21e4:	b4 90       	lpm	r11, Z+
    21e6:	11 96       	adiw	r26, 0x01	; 1
    21e8:	9c 92       	st	X, r9
    21ea:	8e 92       	st	-X, r8
    21ec:	16 96       	adiw	r26, 0x06	; 6
    21ee:	8d 91       	ld	r24, X+
    21f0:	9c 91       	ld	r25, X
    21f2:	17 97       	sbiw	r26, 0x07	; 7
    21f4:	60 e0       	ldi	r22, 0x00	; 0
    21f6:	0e 94 09 14 	call	0x2812	; 0x2812 <pin_make_output>
    21fa:	ba 9c       	mul	r11, r10
    21fc:	c0 01       	movw	r24, r0
    21fe:	11 24       	eor	r1, r1
    2200:	8d 5e       	subi	r24, 0xED	; 237
    2202:	9d 4f       	sbci	r25, 0xFD	; 253
    2204:	fc 01       	movw	r30, r24
    2206:	a5 91       	lpm	r26, Z+
    2208:	b4 91       	lpm	r27, Z+
    220a:	8d 91       	ld	r24, X+
    220c:	9c 91       	ld	r25, X
    220e:	d8 01       	movw	r26, r16
    2210:	53 96       	adiw	r26, 0x13	; 19
    2212:	9c 93       	st	X, r25
    2214:	8e 93       	st	-X, r24
    2216:	52 97       	sbiw	r26, 0x12	; 18
    2218:	18 96       	adiw	r26, 0x08	; 8
    221a:	6d 91       	ld	r22, X+
    221c:	7c 91       	ld	r23, X
    221e:	19 97       	sbiw	r26, 0x09	; 9
    2220:	1a 96       	adiw	r26, 0x0a	; 10
    2222:	4d 91       	ld	r20, X+
    2224:	5c 91       	ld	r21, X
    2226:	1b 97       	sbiw	r26, 0x0b	; 11
    2228:	c8 01       	movw	r24, r16
    222a:	0e 94 5c 11 	call	0x22b8	; 0x22b8 <servoSetConfig>
    222e:	c8 01       	movw	r24, r16
    2230:	60 e0       	ldi	r22, 0x00	; 0
    2232:	0e 94 9f 12 	call	0x253e	; 0x253e <__act_setSpeed>
    2236:	c8 01       	movw	r24, r16
    2238:	6f ef       	ldi	r22, 0xFF	; 255
    223a:	0e 94 bf 12 	call	0x257e	; 0x257e <__act_setConnected>
    223e:	21 97       	sbiw	r28, 0x01	; 1
    2240:	ee ef       	ldi	r30, 0xFE	; 254
    2242:	ff ef       	ldi	r31, 0xFF	; 255
    2244:	ee 0e       	add	r14, r30
    2246:	ff 1e       	adc	r15, r31
    2248:	ff ef       	ldi	r31, 0xFF	; 255
    224a:	cf 3f       	cpi	r28, 0xFF	; 255
    224c:	df 07       	cpc	r29, r31
    224e:	09 f0       	breq	.+2      	; 0x2252 <__stack+0x53>
    2250:	b4 cf       	rjmp	.-152    	; 0x21ba <servoPWMInit+0x3a>
    2252:	df 91       	pop	r29
    2254:	cf 91       	pop	r28
    2256:	1f 91       	pop	r17
    2258:	0f 91       	pop	r16
    225a:	ff 90       	pop	r15
    225c:	ef 90       	pop	r14
    225e:	df 90       	pop	r13
    2260:	cf 90       	pop	r12
    2262:	bf 90       	pop	r11
    2264:	af 90       	pop	r10
    2266:	9f 90       	pop	r9
    2268:	8f 90       	pop	r8
    226a:	08 95       	ret

0000226c <setConnected>:
    226c:	fc 01       	movw	r30, r24
    226e:	84 89       	ldd	r24, Z+20	; 0x14
    2270:	95 89       	ldd	r25, Z+21	; 0x15
    2272:	61 11       	cpse	r22, r1
    2274:	62 e0       	ldi	r22, 0x02	; 2
    2276:	0e 94 24 17 	call	0x2e48	; 0x2e48 <compareSetOutputMode>
    227a:	08 95       	ret

0000227c <setSpeed>:
    227c:	ef 92       	push	r14
    227e:	ff 92       	push	r15
    2280:	0f 93       	push	r16
    2282:	1f 93       	push	r17
    2284:	fc 01       	movw	r30, r24
    2286:	e4 88       	ldd	r14, Z+20	; 0x14
    2288:	f5 88       	ldd	r15, Z+21	; 0x15
    228a:	24 85       	ldd	r18, Z+12	; 0x0c
    228c:	35 85       	ldd	r19, Z+13	; 0x0d
    228e:	06 85       	ldd	r16, Z+14	; 0x0e
    2290:	17 85       	ldd	r17, Z+15	; 0x0f
    2292:	86 2f       	mov	r24, r22
    2294:	99 27       	eor	r25, r25
    2296:	87 fd       	sbrc	r24, 7
    2298:	90 95       	com	r25
    229a:	61 e8       	ldi	r22, 0x81	; 129
    229c:	7f ef       	ldi	r23, 0xFF	; 255
    229e:	4f e7       	ldi	r20, 0x7F	; 127
    22a0:	50 e0       	ldi	r21, 0x00	; 0
    22a2:	0e 94 21 13 	call	0x2642	; 0x2642 <interpolateU>
    22a6:	bc 01       	movw	r22, r24
    22a8:	c7 01       	movw	r24, r14
    22aa:	0e 94 46 17 	call	0x2e8c	; 0x2e8c <compareSetThreshold>
    22ae:	1f 91       	pop	r17
    22b0:	0f 91       	pop	r16
    22b2:	ff 90       	pop	r15
    22b4:	ef 90       	pop	r14
    22b6:	08 95       	ret

000022b8 <servoSetConfig>:
    22b8:	9f 92       	push	r9
    22ba:	af 92       	push	r10
    22bc:	bf 92       	push	r11
    22be:	cf 92       	push	r12
    22c0:	df 92       	push	r13
    22c2:	ef 92       	push	r14
    22c4:	ff 92       	push	r15
    22c6:	0f 93       	push	r16
    22c8:	1f 93       	push	r17
    22ca:	cf 93       	push	r28
    22cc:	df 93       	push	r29
    22ce:	ec 01       	movw	r28, r24
    22d0:	7b 01       	movw	r14, r22
    22d2:	8a 01       	movw	r16, r20
    22d4:	79 87       	std	Y+9, r23	; 0x09
    22d6:	68 87       	std	Y+8, r22	; 0x08
    22d8:	5b 87       	std	Y+11, r21	; 0x0b
    22da:	4a 87       	std	Y+10, r20	; 0x0a
    22dc:	8c 81       	ldd	r24, Y+4	; 0x04
    22de:	9d 81       	ldd	r25, Y+5	; 0x05
    22e0:	89 2b       	or	r24, r25
    22e2:	09 f4       	brne	.+2      	; 0x22e6 <servoSetConfig+0x2e>
    22e4:	5e c0       	rjmp	.+188    	; 0x23a2 <servoSetConfig+0xea>
    22e6:	9f b6       	in	r9, 0x3f	; 63
    22e8:	f8 94       	cli
    22ea:	8a 89       	ldd	r24, Y+18	; 0x12
    22ec:	9b 89       	ldd	r25, Y+19	; 0x13
    22ee:	68 ee       	ldi	r22, 0xE8	; 232
    22f0:	73 e0       	ldi	r23, 0x03	; 3
    22f2:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <__udivmodhi4>
    22f6:	5b 01       	movw	r10, r22
    22f8:	cc 24       	eor	r12, r12
    22fa:	dd 24       	eor	r13, r13
    22fc:	b7 01       	movw	r22, r14
    22fe:	60 1b       	sub	r22, r16
    2300:	71 0b       	sbc	r23, r17
    2302:	80 e0       	ldi	r24, 0x00	; 0
    2304:	90 e0       	ldi	r25, 0x00	; 0
    2306:	a6 01       	movw	r20, r12
    2308:	95 01       	movw	r18, r10
    230a:	0e 94 4f 1f 	call	0x3e9e	; 0x3e9e <__mulsi3>
    230e:	24 e1       	ldi	r18, 0x14	; 20
    2310:	30 e0       	ldi	r19, 0x00	; 0
    2312:	40 e0       	ldi	r20, 0x00	; 0
    2314:	50 e0       	ldi	r21, 0x00	; 0
    2316:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__udivmodsi4>
    231a:	c9 01       	movw	r24, r18
    231c:	da 01       	movw	r26, r20
    231e:	9c 01       	movw	r18, r24
    2320:	ad 01       	movw	r20, r26
    2322:	da 01       	movw	r26, r20
    2324:	c9 01       	movw	r24, r18
    2326:	80 70       	andi	r24, 0x00	; 0
    2328:	90 70       	andi	r25, 0x00	; 0
    232a:	00 97       	sbiw	r24, 0x00	; 0
    232c:	a1 05       	cpc	r26, r1
    232e:	b1 05       	cpc	r27, r1
    2330:	39 f0       	breq	.+14     	; 0x2340 <servoSetConfig+0x88>
    2332:	86 ee       	ldi	r24, 0xE6	; 230
    2334:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <setError>
    2338:	2f ef       	ldi	r18, 0xFF	; 255
    233a:	3f ef       	ldi	r19, 0xFF	; 255
    233c:	40 e0       	ldi	r20, 0x00	; 0
    233e:	50 e0       	ldi	r21, 0x00	; 0
    2340:	3d 87       	std	Y+13, r19	; 0x0d
    2342:	2c 87       	std	Y+12, r18	; 0x0c
    2344:	0e 0d       	add	r16, r14
    2346:	1f 1d       	adc	r17, r15
    2348:	b8 01       	movw	r22, r16
    234a:	80 e0       	ldi	r24, 0x00	; 0
    234c:	90 e0       	ldi	r25, 0x00	; 0
    234e:	a6 01       	movw	r20, r12
    2350:	95 01       	movw	r18, r10
    2352:	0e 94 4f 1f 	call	0x3e9e	; 0x3e9e <__mulsi3>
    2356:	24 e1       	ldi	r18, 0x14	; 20
    2358:	30 e0       	ldi	r19, 0x00	; 0
    235a:	40 e0       	ldi	r20, 0x00	; 0
    235c:	50 e0       	ldi	r21, 0x00	; 0
    235e:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__udivmodsi4>
    2362:	c9 01       	movw	r24, r18
    2364:	da 01       	movw	r26, r20
    2366:	9c 01       	movw	r18, r24
    2368:	ad 01       	movw	r20, r26
    236a:	da 01       	movw	r26, r20
    236c:	c9 01       	movw	r24, r18
    236e:	80 70       	andi	r24, 0x00	; 0
    2370:	90 70       	andi	r25, 0x00	; 0
    2372:	00 97       	sbiw	r24, 0x00	; 0
    2374:	a1 05       	cpc	r26, r1
    2376:	b1 05       	cpc	r27, r1
    2378:	39 f0       	breq	.+14     	; 0x2388 <servoSetConfig+0xd0>
    237a:	86 ee       	ldi	r24, 0xE6	; 230
    237c:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <setError>
    2380:	2f ef       	ldi	r18, 0xFF	; 255
    2382:	3f ef       	ldi	r19, 0xFF	; 255
    2384:	40 e0       	ldi	r20, 0x00	; 0
    2386:	50 e0       	ldi	r21, 0x00	; 0
    2388:	3f 87       	std	Y+15, r19	; 0x0f
    238a:	2e 87       	std	Y+14, r18	; 0x0e
    238c:	8b 81       	ldd	r24, Y+3	; 0x03
    238e:	80 ff       	sbrs	r24, 0
    2390:	07 c0       	rjmp	.+14     	; 0x23a0 <servoSetConfig+0xe8>
    2392:	6a 81       	ldd	r22, Y+2	; 0x02
    2394:	61 50       	subi	r22, 0x01	; 1
    2396:	6a 83       	std	Y+2, r22	; 0x02
    2398:	6f 5f       	subi	r22, 0xFF	; 255
    239a:	ce 01       	movw	r24, r28
    239c:	0e 94 9f 12 	call	0x253e	; 0x253e <__act_setSpeed>
    23a0:	9f be       	out	0x3f, r9	; 63
    23a2:	df 91       	pop	r29
    23a4:	cf 91       	pop	r28
    23a6:	1f 91       	pop	r17
    23a8:	0f 91       	pop	r16
    23aa:	ff 90       	pop	r15
    23ac:	ef 90       	pop	r14
    23ae:	df 90       	pop	r13
    23b0:	cf 90       	pop	r12
    23b2:	bf 90       	pop	r11
    23b4:	af 90       	pop	r10
    23b6:	9f 90       	pop	r9
    23b8:	08 95       	ret

000023ba <_ZN6Stream5printElh>:
    23ba:	0f 93       	push	r16
    23bc:	1f 93       	push	r17
    23be:	df 93       	push	r29
    23c0:	cf 93       	push	r28
    23c2:	cd b7       	in	r28, 0x3d	; 61
    23c4:	de b7       	in	r29, 0x3e	; 62
    23c6:	a1 97       	sbiw	r28, 0x21	; 33
    23c8:	0f b6       	in	r0, 0x3f	; 63
    23ca:	f8 94       	cli
    23cc:	de bf       	out	0x3e, r29	; 62
    23ce:	0f be       	out	0x3f, r0	; 63
    23d0:	cd bf       	out	0x3d, r28	; 61
    23d2:	8c 01       	movw	r16, r24
    23d4:	22 30       	cpi	r18, 0x02	; 2
    23d6:	08 f4       	brcc	.+2      	; 0x23da <_ZN6Stream5printElh+0x20>
    23d8:	22 e0       	ldi	r18, 0x02	; 2
    23da:	cb 01       	movw	r24, r22
    23dc:	ba 01       	movw	r22, r20
    23de:	ae 01       	movw	r20, r28
    23e0:	4f 5f       	subi	r20, 0xFF	; 255
    23e2:	5f 4f       	sbci	r21, 0xFF	; 255
    23e4:	30 e0       	ldi	r19, 0x00	; 0
    23e6:	0e 94 3f 1e 	call	0x3c7e	; 0x3c7e <ltoa>
    23ea:	bc 01       	movw	r22, r24
    23ec:	c8 01       	movw	r24, r16
    23ee:	0e 94 37 12 	call	0x246e	; 0x246e <_ZN6Stream5printEPKc>
    23f2:	a1 96       	adiw	r28, 0x21	; 33
    23f4:	0f b6       	in	r0, 0x3f	; 63
    23f6:	f8 94       	cli
    23f8:	de bf       	out	0x3e, r29	; 62
    23fa:	0f be       	out	0x3f, r0	; 63
    23fc:	cd bf       	out	0x3d, r28	; 61
    23fe:	cf 91       	pop	r28
    2400:	df 91       	pop	r29
    2402:	1f 91       	pop	r17
    2404:	0f 91       	pop	r16
    2406:	08 95       	ret

00002408 <_ZN6Stream5printEl>:
    2408:	2a e0       	ldi	r18, 0x0A	; 10
    240a:	0e 94 dd 11 	call	0x23ba	; 0x23ba <_ZN6Stream5printElh>
    240e:	08 95       	ret

00002410 <_ZN6Stream5printEih>:
    2410:	ab 01       	movw	r20, r22
    2412:	66 27       	eor	r22, r22
    2414:	57 fd       	sbrc	r21, 7
    2416:	60 95       	com	r22
    2418:	76 2f       	mov	r23, r22
    241a:	0e 94 04 12 	call	0x2408	; 0x2408 <_ZN6Stream5printEl>
    241e:	08 95       	ret

00002420 <_ZN6Stream5printEi>:
    2420:	ab 01       	movw	r20, r22
    2422:	66 27       	eor	r22, r22
    2424:	57 fd       	sbrc	r21, 7
    2426:	60 95       	com	r22
    2428:	76 2f       	mov	r23, r22
    242a:	2a e0       	ldi	r18, 0x0A	; 10
    242c:	0e 94 dd 11 	call	0x23ba	; 0x23ba <_ZN6Stream5printElh>
    2430:	08 95       	ret

00002432 <_ZN6Stream5printEa>:
    2432:	46 2f       	mov	r20, r22
    2434:	55 27       	eor	r21, r21
    2436:	47 fd       	sbrc	r20, 7
    2438:	50 95       	com	r21
    243a:	65 2f       	mov	r22, r21
    243c:	75 2f       	mov	r23, r21
    243e:	2a e0       	ldi	r18, 0x0A	; 10
    2440:	0e 94 dd 11 	call	0x23ba	; 0x23ba <_ZN6Stream5printElh>
    2444:	08 95       	ret

00002446 <_ZN6Stream5printEah>:
    2446:	ef 92       	push	r14
    2448:	ff 92       	push	r15
    244a:	0f 93       	push	r16
    244c:	1f 93       	push	r17
    244e:	e6 2e       	mov	r14, r22
    2450:	24 2f       	mov	r18, r20
    2452:	ff 24       	eor	r15, r15
    2454:	e7 fc       	sbrc	r14, 7
    2456:	f0 94       	com	r15
    2458:	0f 2d       	mov	r16, r15
    245a:	1f 2d       	mov	r17, r15
    245c:	b8 01       	movw	r22, r16
    245e:	a7 01       	movw	r20, r14
    2460:	0e 94 dd 11 	call	0x23ba	; 0x23ba <_ZN6Stream5printElh>
    2464:	1f 91       	pop	r17
    2466:	0f 91       	pop	r16
    2468:	ff 90       	pop	r15
    246a:	ef 90       	pop	r14
    246c:	08 95       	ret

0000246e <_ZN6Stream5printEPKc>:
    246e:	0f 93       	push	r16
    2470:	1f 93       	push	r17
    2472:	cf 93       	push	r28
    2474:	df 93       	push	r29
    2476:	18 2f       	mov	r17, r24
    2478:	09 2f       	mov	r16, r25
    247a:	eb 01       	movw	r28, r22
    247c:	04 c0       	rjmp	.+8      	; 0x2486 <_ZN6Stream5printEPKc+0x18>
    247e:	81 2f       	mov	r24, r17
    2480:	90 2f       	mov	r25, r16
    2482:	0e 94 b1 19 	call	0x3362	; 0x3362 <_ZN6Stream5printEc>
    2486:	69 91       	ld	r22, Y+
    2488:	66 23       	and	r22, r22
    248a:	c9 f7       	brne	.-14     	; 0x247e <_ZN6Stream5printEPKc+0x10>
    248c:	81 2f       	mov	r24, r17
    248e:	90 2f       	mov	r25, r16
    2490:	df 91       	pop	r29
    2492:	cf 91       	pop	r28
    2494:	1f 91       	pop	r17
    2496:	0f 91       	pop	r16
    2498:	08 95       	ret

0000249a <_ZN6Stream5printEmh>:
    249a:	0f 93       	push	r16
    249c:	1f 93       	push	r17
    249e:	df 93       	push	r29
    24a0:	cf 93       	push	r28
    24a2:	cd b7       	in	r28, 0x3d	; 61
    24a4:	de b7       	in	r29, 0x3e	; 62
    24a6:	a1 97       	sbiw	r28, 0x21	; 33
    24a8:	0f b6       	in	r0, 0x3f	; 63
    24aa:	f8 94       	cli
    24ac:	de bf       	out	0x3e, r29	; 62
    24ae:	0f be       	out	0x3f, r0	; 63
    24b0:	cd bf       	out	0x3d, r28	; 61
    24b2:	8c 01       	movw	r16, r24
    24b4:	22 30       	cpi	r18, 0x02	; 2
    24b6:	08 f4       	brcc	.+2      	; 0x24ba <_ZN6Stream5printEmh+0x20>
    24b8:	22 e0       	ldi	r18, 0x02	; 2
    24ba:	cb 01       	movw	r24, r22
    24bc:	ba 01       	movw	r22, r20
    24be:	ae 01       	movw	r20, r28
    24c0:	4f 5f       	subi	r20, 0xFF	; 255
    24c2:	5f 4f       	sbci	r21, 0xFF	; 255
    24c4:	30 e0       	ldi	r19, 0x00	; 0
    24c6:	0e 94 73 1e 	call	0x3ce6	; 0x3ce6 <ultoa>
    24ca:	bc 01       	movw	r22, r24
    24cc:	c8 01       	movw	r24, r16
    24ce:	0e 94 37 12 	call	0x246e	; 0x246e <_ZN6Stream5printEPKc>
    24d2:	a1 96       	adiw	r28, 0x21	; 33
    24d4:	0f b6       	in	r0, 0x3f	; 63
    24d6:	f8 94       	cli
    24d8:	de bf       	out	0x3e, r29	; 62
    24da:	0f be       	out	0x3f, r0	; 63
    24dc:	cd bf       	out	0x3d, r28	; 61
    24de:	cf 91       	pop	r28
    24e0:	df 91       	pop	r29
    24e2:	1f 91       	pop	r17
    24e4:	0f 91       	pop	r16
    24e6:	08 95       	ret

000024e8 <_ZN6Stream5printEm>:
    24e8:	2a e0       	ldi	r18, 0x0A	; 10
    24ea:	0e 94 4d 12 	call	0x249a	; 0x249a <_ZN6Stream5printEmh>
    24ee:	08 95       	ret

000024f0 <_ZN6Stream5printEjh>:
    24f0:	ab 01       	movw	r20, r22
    24f2:	60 e0       	ldi	r22, 0x00	; 0
    24f4:	70 e0       	ldi	r23, 0x00	; 0
    24f6:	0e 94 74 12 	call	0x24e8	; 0x24e8 <_ZN6Stream5printEm>
    24fa:	08 95       	ret

000024fc <_ZN6Stream5printEj>:
    24fc:	ab 01       	movw	r20, r22
    24fe:	60 e0       	ldi	r22, 0x00	; 0
    2500:	70 e0       	ldi	r23, 0x00	; 0
    2502:	2a e0       	ldi	r18, 0x0A	; 10
    2504:	0e 94 4d 12 	call	0x249a	; 0x249a <_ZN6Stream5printEmh>
    2508:	08 95       	ret

0000250a <_ZN6Stream5printEh>:
    250a:	46 2f       	mov	r20, r22
    250c:	50 e0       	ldi	r21, 0x00	; 0
    250e:	60 e0       	ldi	r22, 0x00	; 0
    2510:	70 e0       	ldi	r23, 0x00	; 0
    2512:	2a e0       	ldi	r18, 0x0A	; 10
    2514:	0e 94 4d 12 	call	0x249a	; 0x249a <_ZN6Stream5printEmh>
    2518:	08 95       	ret

0000251a <_ZN6Stream5printEhh>:
    251a:	ef 92       	push	r14
    251c:	ff 92       	push	r15
    251e:	0f 93       	push	r16
    2520:	1f 93       	push	r17
    2522:	24 2f       	mov	r18, r20
    2524:	e6 2e       	mov	r14, r22
    2526:	ff 24       	eor	r15, r15
    2528:	00 e0       	ldi	r16, 0x00	; 0
    252a:	10 e0       	ldi	r17, 0x00	; 0
    252c:	b8 01       	movw	r22, r16
    252e:	a7 01       	movw	r20, r14
    2530:	0e 94 4d 12 	call	0x249a	; 0x249a <_ZN6Stream5printEmh>
    2534:	1f 91       	pop	r17
    2536:	0f 91       	pop	r16
    2538:	ff 90       	pop	r15
    253a:	ef 90       	pop	r14
    253c:	08 95       	ret

0000253e <__act_setSpeed>:
    253e:	1f 93       	push	r17
    2540:	cf 93       	push	r28
    2542:	df 93       	push	r29
    2544:	ec 01       	movw	r28, r24
    2546:	16 2f       	mov	r17, r22
    2548:	61 38       	cpi	r22, 0x81	; 129
    254a:	0c f4       	brge	.+2      	; 0x254e <__act_setSpeed+0x10>
    254c:	11 e8       	ldi	r17, 0x81	; 129
    254e:	e8 81       	ld	r30, Y
    2550:	f9 81       	ldd	r31, Y+1	; 0x01
    2552:	30 97       	sbiw	r30, 0x00	; 0
    2554:	79 f0       	breq	.+30     	; 0x2574 <__act_setSpeed+0x36>
    2556:	25 91       	lpm	r18, Z+
    2558:	34 91       	lpm	r19, Z+
    255a:	21 15       	cp	r18, r1
    255c:	31 05       	cpc	r19, r1
    255e:	51 f0       	breq	.+20     	; 0x2574 <__act_setSpeed+0x36>
    2560:	8b 81       	ldd	r24, Y+3	; 0x03
    2562:	81 fd       	sbrc	r24, 1
    2564:	02 c0       	rjmp	.+4      	; 0x256a <__act_setSpeed+0x2c>
    2566:	61 2f       	mov	r22, r17
    2568:	02 c0       	rjmp	.+4      	; 0x256e <__act_setSpeed+0x30>
    256a:	61 2f       	mov	r22, r17
    256c:	61 95       	neg	r22
    256e:	ce 01       	movw	r24, r28
    2570:	f9 01       	movw	r30, r18
    2572:	09 95       	icall
    2574:	1a 83       	std	Y+2, r17	; 0x02
    2576:	df 91       	pop	r29
    2578:	cf 91       	pop	r28
    257a:	1f 91       	pop	r17
    257c:	08 95       	ret

0000257e <__act_setConnected>:
    257e:	dc 01       	movw	r26, r24
    2580:	96 2f       	mov	r25, r22
    2582:	91 70       	andi	r25, 0x01	; 1
    2584:	13 96       	adiw	r26, 0x03	; 3
    2586:	8c 91       	ld	r24, X
    2588:	13 97       	sbiw	r26, 0x03	; 3
    258a:	8e 7f       	andi	r24, 0xFE	; 254
    258c:	89 2b       	or	r24, r25
    258e:	13 96       	adiw	r26, 0x03	; 3
    2590:	8c 93       	st	X, r24
    2592:	13 97       	sbiw	r26, 0x03	; 3
    2594:	8d 91       	ld	r24, X+
    2596:	9c 91       	ld	r25, X
    2598:	11 97       	sbiw	r26, 0x01	; 1
    259a:	00 97       	sbiw	r24, 0x00	; 0
    259c:	51 f0       	breq	.+20     	; 0x25b2 <__act_setConnected+0x34>
    259e:	fc 01       	movw	r30, r24
    25a0:	32 96       	adiw	r30, 0x02	; 2
    25a2:	25 91       	lpm	r18, Z+
    25a4:	34 91       	lpm	r19, Z+
    25a6:	21 15       	cp	r18, r1
    25a8:	31 05       	cpc	r19, r1
    25aa:	19 f0       	breq	.+6      	; 0x25b2 <__act_setConnected+0x34>
    25ac:	cd 01       	movw	r24, r26
    25ae:	f9 01       	movw	r30, r18
    25b0:	09 95       	icall
    25b2:	08 95       	ret

000025b4 <interpolate>:
    25b4:	4f 92       	push	r4
    25b6:	5f 92       	push	r5
    25b8:	6f 92       	push	r6
    25ba:	7f 92       	push	r7
    25bc:	8f 92       	push	r8
    25be:	9f 92       	push	r9
    25c0:	af 92       	push	r10
    25c2:	bf 92       	push	r11
    25c4:	cf 92       	push	r12
    25c6:	df 92       	push	r13
    25c8:	ef 92       	push	r14
    25ca:	ff 92       	push	r15
    25cc:	0f 93       	push	r16
    25ce:	1f 93       	push	r17
    25d0:	2b 01       	movw	r4, r22
    25d2:	3a 01       	movw	r6, r20
    25d4:	59 01       	movw	r10, r18
    25d6:	78 01       	movw	r14, r16
    25d8:	e2 1a       	sub	r14, r18
    25da:	f3 0a       	sbc	r15, r19
    25dc:	00 27       	eor	r16, r16
    25de:	f7 fc       	sbrc	r15, 7
    25e0:	00 95       	com	r16
    25e2:	10 2f       	mov	r17, r16
    25e4:	9c 01       	movw	r18, r24
    25e6:	26 1b       	sub	r18, r22
    25e8:	37 0b       	sbc	r19, r23
    25ea:	44 27       	eor	r20, r20
    25ec:	37 fd       	sbrc	r19, 7
    25ee:	40 95       	com	r20
    25f0:	54 2f       	mov	r21, r20
    25f2:	c8 01       	movw	r24, r16
    25f4:	b7 01       	movw	r22, r14
    25f6:	0e 94 4f 1f 	call	0x3e9e	; 0x3e9e <__mulsi3>
    25fa:	64 18       	sub	r6, r4
    25fc:	75 08       	sbc	r7, r5
    25fe:	88 24       	eor	r8, r8
    2600:	77 fc       	sbrc	r7, 7
    2602:	80 94       	com	r8
    2604:	98 2c       	mov	r9, r8
    2606:	a4 01       	movw	r20, r8
    2608:	93 01       	movw	r18, r6
    260a:	0e 94 b7 1f 	call	0x3f6e	; 0x3f6e <__divmodsi4>
    260e:	c9 01       	movw	r24, r18
    2610:	da 01       	movw	r26, r20
    2612:	cc 24       	eor	r12, r12
    2614:	b7 fc       	sbrc	r11, 7
    2616:	c0 94       	com	r12
    2618:	dc 2c       	mov	r13, r12
    261a:	a8 0e       	add	r10, r24
    261c:	b9 1e       	adc	r11, r25
    261e:	ca 1e       	adc	r12, r26
    2620:	db 1e       	adc	r13, r27
    2622:	c5 01       	movw	r24, r10
    2624:	1f 91       	pop	r17
    2626:	0f 91       	pop	r16
    2628:	ff 90       	pop	r15
    262a:	ef 90       	pop	r14
    262c:	df 90       	pop	r13
    262e:	cf 90       	pop	r12
    2630:	bf 90       	pop	r11
    2632:	af 90       	pop	r10
    2634:	9f 90       	pop	r9
    2636:	8f 90       	pop	r8
    2638:	7f 90       	pop	r7
    263a:	6f 90       	pop	r6
    263c:	5f 90       	pop	r5
    263e:	4f 90       	pop	r4
    2640:	08 95       	ret

00002642 <interpolateU>:
    2642:	4f 92       	push	r4
    2644:	5f 92       	push	r5
    2646:	6f 92       	push	r6
    2648:	7f 92       	push	r7
    264a:	8f 92       	push	r8
    264c:	9f 92       	push	r9
    264e:	af 92       	push	r10
    2650:	bf 92       	push	r11
    2652:	cf 92       	push	r12
    2654:	df 92       	push	r13
    2656:	ef 92       	push	r14
    2658:	ff 92       	push	r15
    265a:	0f 93       	push	r16
    265c:	1f 93       	push	r17
    265e:	2b 01       	movw	r4, r22
    2660:	5a 01       	movw	r10, r20
    2662:	39 01       	movw	r6, r18
    2664:	78 01       	movw	r14, r16
    2666:	e2 1a       	sub	r14, r18
    2668:	f3 0a       	sbc	r15, r19
    266a:	00 e0       	ldi	r16, 0x00	; 0
    266c:	10 e0       	ldi	r17, 0x00	; 0
    266e:	9c 01       	movw	r18, r24
    2670:	26 1b       	sub	r18, r22
    2672:	37 0b       	sbc	r19, r23
    2674:	44 27       	eor	r20, r20
    2676:	37 fd       	sbrc	r19, 7
    2678:	40 95       	com	r20
    267a:	54 2f       	mov	r21, r20
    267c:	c8 01       	movw	r24, r16
    267e:	b7 01       	movw	r22, r14
    2680:	0e 94 4f 1f 	call	0x3e9e	; 0x3e9e <__mulsi3>
    2684:	a4 18       	sub	r10, r4
    2686:	b5 08       	sbc	r11, r5
    2688:	cc 24       	eor	r12, r12
    268a:	b7 fc       	sbrc	r11, 7
    268c:	c0 94       	com	r12
    268e:	dc 2c       	mov	r13, r12
    2690:	a6 01       	movw	r20, r12
    2692:	95 01       	movw	r18, r10
    2694:	0e 94 b7 1f 	call	0x3f6e	; 0x3f6e <__divmodsi4>
    2698:	88 24       	eor	r8, r8
    269a:	99 24       	eor	r9, r9
    269c:	26 0d       	add	r18, r6
    269e:	37 1d       	adc	r19, r7
    26a0:	48 1d       	adc	r20, r8
    26a2:	59 1d       	adc	r21, r9
    26a4:	c9 01       	movw	r24, r18
    26a6:	1f 91       	pop	r17
    26a8:	0f 91       	pop	r16
    26aa:	ff 90       	pop	r15
    26ac:	ef 90       	pop	r14
    26ae:	df 90       	pop	r13
    26b0:	cf 90       	pop	r12
    26b2:	bf 90       	pop	r11
    26b4:	af 90       	pop	r10
    26b6:	9f 90       	pop	r9
    26b8:	8f 90       	pop	r8
    26ba:	7f 90       	pop	r7
    26bc:	6f 90       	pop	r6
    26be:	5f 90       	pop	r5
    26c0:	4f 90       	pop	r4
    26c2:	08 95       	ret

000026c4 <getError>:
    26c4:	80 91 40 04 	lds	r24, 0x0440
    26c8:	08 95       	ret

000026ca <setErrorLog>:
    26ca:	90 93 44 04 	sts	0x0444, r25
    26ce:	80 93 43 04 	sts	0x0443, r24
    26d2:	08 95       	ret

000026d4 <setError>:
    26d4:	1f 93       	push	r17
    26d6:	18 2f       	mov	r17, r24
    26d8:	80 91 40 04 	lds	r24, 0x0440
    26dc:	88 23       	and	r24, r24
    26de:	09 f0       	breq	.+2      	; 0x26e2 <setError+0xe>
    26e0:	5a c0       	rjmp	.+180    	; 0x2796 <setError+0xc2>
    26e2:	10 93 40 04 	sts	0x0440, r17
    26e6:	80 91 45 04 	lds	r24, 0x0445
    26ea:	90 91 46 04 	lds	r25, 0x0446
    26ee:	00 97       	sbiw	r24, 0x00	; 0
    26f0:	49 f0       	breq	.+18     	; 0x2704 <setError+0x30>
    26f2:	0e 94 cd 13 	call	0x279a	; 0x279a <pin_is_output>
    26f6:	88 23       	and	r24, r24
    26f8:	29 f0       	breq	.+10     	; 0x2704 <setError+0x30>
    26fa:	85 e4       	ldi	r24, 0x45	; 69
    26fc:	94 e0       	ldi	r25, 0x04	; 4
    26fe:	60 e0       	ldi	r22, 0x00	; 0
    2700:	0e 94 30 14 	call	0x2860	; 0x2860 <LED_set>
    2704:	80 91 50 04 	lds	r24, 0x0450
    2708:	90 91 51 04 	lds	r25, 0x0451
    270c:	00 97       	sbiw	r24, 0x00	; 0
    270e:	09 f4       	brne	.+2      	; 0x2712 <setError+0x3e>
    2710:	42 c0       	rjmp	.+132    	; 0x2796 <setError+0xc2>
    2712:	17 ff       	sbrs	r17, 7
    2714:	12 c0       	rjmp	.+36     	; 0x273a <setError+0x66>
    2716:	00 d0       	rcall	.+0      	; 0x2718 <setError+0x44>
    2718:	00 d0       	rcall	.+0      	; 0x271a <setError+0x46>
    271a:	ad b7       	in	r26, 0x3d	; 61
    271c:	be b7       	in	r27, 0x3e	; 62
    271e:	12 96       	adiw	r26, 0x02	; 2
    2720:	9c 93       	st	X, r25
    2722:	8e 93       	st	-X, r24
    2724:	11 97       	sbiw	r26, 0x01	; 1
    2726:	84 e9       	ldi	r24, 0x94	; 148
    2728:	93 e0       	ldi	r25, 0x03	; 3
    272a:	14 96       	adiw	r26, 0x04	; 4
    272c:	9c 93       	st	X, r25
    272e:	8e 93       	st	-X, r24
    2730:	13 97       	sbiw	r26, 0x03	; 3
    2732:	0e 94 98 1e 	call	0x3d30	; 0x3d30 <fprintf_P>
    2736:	11 95       	neg	r17
    2738:	0c c0       	rjmp	.+24     	; 0x2752 <setError+0x7e>
    273a:	00 d0       	rcall	.+0      	; 0x273c <setError+0x68>
    273c:	00 d0       	rcall	.+0      	; 0x273e <setError+0x6a>
    273e:	ed b7       	in	r30, 0x3d	; 61
    2740:	fe b7       	in	r31, 0x3e	; 62
    2742:	92 83       	std	Z+2, r25	; 0x02
    2744:	81 83       	std	Z+1, r24	; 0x01
    2746:	8f e8       	ldi	r24, 0x8F	; 143
    2748:	93 e0       	ldi	r25, 0x03	; 3
    274a:	94 83       	std	Z+4, r25	; 0x04
    274c:	83 83       	std	Z+3, r24	; 0x03
    274e:	0e 94 98 1e 	call	0x3d30	; 0x3d30 <fprintf_P>
    2752:	00 d0       	rcall	.+0      	; 0x2754 <setError+0x80>
    2754:	ed b7       	in	r30, 0x3d	; 61
    2756:	fe b7       	in	r31, 0x3e	; 62
    2758:	31 96       	adiw	r30, 0x01	; 1
    275a:	80 91 50 04 	lds	r24, 0x0450
    275e:	90 91 51 04 	lds	r25, 0x0451
    2762:	ad b7       	in	r26, 0x3d	; 61
    2764:	be b7       	in	r27, 0x3e	; 62
    2766:	12 96       	adiw	r26, 0x02	; 2
    2768:	9c 93       	st	X, r25
    276a:	8e 93       	st	-X, r24
    276c:	11 97       	sbiw	r26, 0x01	; 1
    276e:	83 e8       	ldi	r24, 0x83	; 131
    2770:	93 e0       	ldi	r25, 0x03	; 3
    2772:	93 83       	std	Z+3, r25	; 0x03
    2774:	82 83       	std	Z+2, r24	; 0x02
    2776:	81 2f       	mov	r24, r17
    2778:	99 27       	eor	r25, r25
    277a:	87 fd       	sbrc	r24, 7
    277c:	90 95       	com	r25
    277e:	95 83       	std	Z+5, r25	; 0x05
    2780:	84 83       	std	Z+4, r24	; 0x04
    2782:	0e 94 98 1e 	call	0x3d30	; 0x3d30 <fprintf_P>
    2786:	ed b7       	in	r30, 0x3d	; 61
    2788:	fe b7       	in	r31, 0x3e	; 62
    278a:	36 96       	adiw	r30, 0x06	; 6
    278c:	0f b6       	in	r0, 0x3f	; 63
    278e:	f8 94       	cli
    2790:	fe bf       	out	0x3e, r31	; 62
    2792:	0f be       	out	0x3f, r0	; 63
    2794:	ed bf       	out	0x3d, r30	; 61
    2796:	1f 91       	pop	r17
    2798:	08 95       	ret

0000279a <pin_is_output>:
    279a:	9c 01       	movw	r18, r24
    279c:	00 97       	sbiw	r24, 0x00	; 0
    279e:	81 f0       	breq	.+32     	; 0x27c0 <pin_is_output+0x26>
    27a0:	fc 01       	movw	r30, r24
    27a2:	85 91       	lpm	r24, Z+
    27a4:	94 91       	lpm	r25, Z+
    27a6:	02 96       	adiw	r24, 0x02	; 2
    27a8:	fc 01       	movw	r30, r24
    27aa:	a5 91       	lpm	r26, Z+
    27ac:	b4 91       	lpm	r27, Z+
    27ae:	2e 5f       	subi	r18, 0xFE	; 254
    27b0:	3f 4f       	sbci	r19, 0xFF	; 255
    27b2:	f9 01       	movw	r30, r18
    27b4:	94 91       	lpm	r25, Z+
    27b6:	8c 91       	ld	r24, X
    27b8:	89 23       	and	r24, r25
    27ba:	11 f0       	breq	.+4      	; 0x27c0 <pin_is_output+0x26>
    27bc:	8f ef       	ldi	r24, 0xFF	; 255
    27be:	08 95       	ret
    27c0:	80 e0       	ldi	r24, 0x00	; 0
    27c2:	08 95       	ret

000027c4 <pin_make_input>:
    27c4:	cf 93       	push	r28
    27c6:	df 93       	push	r29
    27c8:	9c 01       	movw	r18, r24
    27ca:	00 97       	sbiw	r24, 0x00	; 0
    27cc:	f9 f0       	breq	.+62     	; 0x280c <pin_make_input+0x48>
    27ce:	fc 01       	movw	r30, r24
    27d0:	45 91       	lpm	r20, Z+
    27d2:	54 91       	lpm	r21, Z+
    27d4:	ca 01       	movw	r24, r20
    27d6:	02 96       	adiw	r24, 0x02	; 2
    27d8:	fc 01       	movw	r30, r24
    27da:	a5 91       	lpm	r26, Z+
    27dc:	b4 91       	lpm	r27, Z+
    27de:	fa 01       	movw	r30, r20
    27e0:	c5 91       	lpm	r28, Z+
    27e2:	d4 91       	lpm	r29, Z+
    27e4:	2e 5f       	subi	r18, 0xFE	; 254
    27e6:	3f 4f       	sbci	r19, 0xFF	; 255
    27e8:	f9 01       	movw	r30, r18
    27ea:	94 91       	lpm	r25, Z+
    27ec:	3f b7       	in	r19, 0x3f	; 63
    27ee:	f8 94       	cli
    27f0:	8c 91       	ld	r24, X
    27f2:	29 2f       	mov	r18, r25
    27f4:	20 95       	com	r18
    27f6:	82 23       	and	r24, r18
    27f8:	8c 93       	st	X, r24
    27fa:	66 23       	and	r22, r22
    27fc:	19 f0       	breq	.+6      	; 0x2804 <pin_make_input+0x40>
    27fe:	88 81       	ld	r24, Y
    2800:	89 2b       	or	r24, r25
    2802:	02 c0       	rjmp	.+4      	; 0x2808 <pin_make_input+0x44>
    2804:	88 81       	ld	r24, Y
    2806:	82 23       	and	r24, r18
    2808:	88 83       	st	Y, r24
    280a:	3f bf       	out	0x3f, r19	; 63
    280c:	df 91       	pop	r29
    280e:	cf 91       	pop	r28
    2810:	08 95       	ret

00002812 <pin_make_output>:
    2812:	cf 93       	push	r28
    2814:	df 93       	push	r29
    2816:	9c 01       	movw	r18, r24
    2818:	00 97       	sbiw	r24, 0x00	; 0
    281a:	f9 f0       	breq	.+62     	; 0x285a <pin_make_output+0x48>
    281c:	fc 01       	movw	r30, r24
    281e:	45 91       	lpm	r20, Z+
    2820:	54 91       	lpm	r21, Z+
    2822:	ca 01       	movw	r24, r20
    2824:	02 96       	adiw	r24, 0x02	; 2
    2826:	fc 01       	movw	r30, r24
    2828:	c5 91       	lpm	r28, Z+
    282a:	d4 91       	lpm	r29, Z+
    282c:	fa 01       	movw	r30, r20
    282e:	a5 91       	lpm	r26, Z+
    2830:	b4 91       	lpm	r27, Z+
    2832:	2e 5f       	subi	r18, 0xFE	; 254
    2834:	3f 4f       	sbci	r19, 0xFF	; 255
    2836:	f9 01       	movw	r30, r18
    2838:	24 91       	lpm	r18, Z+
    283a:	3f b7       	in	r19, 0x3f	; 63
    283c:	f8 94       	cli
    283e:	66 23       	and	r22, r22
    2840:	19 f0       	breq	.+6      	; 0x2848 <pin_make_output+0x36>
    2842:	8c 91       	ld	r24, X
    2844:	82 2b       	or	r24, r18
    2846:	04 c0       	rjmp	.+8      	; 0x2850 <pin_make_output+0x3e>
    2848:	8c 91       	ld	r24, X
    284a:	92 2f       	mov	r25, r18
    284c:	90 95       	com	r25
    284e:	89 23       	and	r24, r25
    2850:	8c 93       	st	X, r24
    2852:	88 81       	ld	r24, Y
    2854:	82 2b       	or	r24, r18
    2856:	88 83       	st	Y, r24
    2858:	3f bf       	out	0x3f, r19	; 63
    285a:	df 91       	pop	r29
    285c:	cf 91       	pop	r28
    285e:	08 95       	ret

00002860 <LED_set>:
    2860:	1f 93       	push	r17
    2862:	cf 93       	push	r28
    2864:	df 93       	push	r29
    2866:	ec 01       	movw	r28, r24
    2868:	16 2f       	mov	r17, r22
    286a:	88 81       	ld	r24, Y
    286c:	99 81       	ldd	r25, Y+1	; 0x01
    286e:	00 97       	sbiw	r24, 0x00	; 0
    2870:	a9 f0       	breq	.+42     	; 0x289c <LED_set+0x3c>
    2872:	3a 81       	ldd	r19, Y+2	; 0x02
    2874:	30 fd       	sbrc	r19, 0
    2876:	05 c0       	rjmp	.+10     	; 0x2882 <LED_set+0x22>
    2878:	20 e0       	ldi	r18, 0x00	; 0
    287a:	66 23       	and	r22, r22
    287c:	09 f4       	brne	.+2      	; 0x2880 <LED_set+0x20>
    287e:	21 e0       	ldi	r18, 0x01	; 1
    2880:	12 2f       	mov	r17, r18
    2882:	31 fd       	sbrc	r19, 1
    2884:	06 c0       	rjmp	.+12     	; 0x2892 <LED_set+0x32>
    2886:	61 2f       	mov	r22, r17
    2888:	0e 94 09 14 	call	0x2812	; 0x2812 <pin_make_output>
    288c:	8a 81       	ldd	r24, Y+2	; 0x02
    288e:	82 60       	ori	r24, 0x02	; 2
    2890:	8a 83       	std	Y+2, r24	; 0x02
    2892:	88 81       	ld	r24, Y
    2894:	99 81       	ldd	r25, Y+1	; 0x01
    2896:	61 2f       	mov	r22, r17
    2898:	0e 94 6b 1a 	call	0x34d6	; 0x34d6 <pin_set>
    289c:	df 91       	pop	r29
    289e:	cf 91       	pop	r28
    28a0:	1f 91       	pop	r17
    28a2:	08 95       	ret

000028a4 <main>:
    28a4:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <registerLED>
    28a8:	0e 94 83 10 	call	0x2106	; 0x2106 <__initTimers>
    28ac:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <__clockInit>
    28b0:	78 94       	sei
    28b2:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <sysInitHardware>
    28b6:	0e 94 2b 08 	call	0x1056	; 0x1056 <appInitHardware>
    28ba:	0e 94 07 0f 	call	0x1e0e	; 0x1e0e <clockGetus>
    28be:	60 93 27 04 	sts	0x0427, r22
    28c2:	70 93 28 04 	sts	0x0428, r23
    28c6:	80 93 29 04 	sts	0x0429, r24
    28ca:	90 93 2a 04 	sts	0x042A, r25
    28ce:	0e 94 ff 07 	call	0xffe	; 0xffe <appInitSoftware>
    28d2:	60 93 2b 04 	sts	0x042B, r22
    28d6:	70 93 2c 04 	sts	0x042C, r23
    28da:	80 93 2d 04 	sts	0x042D, r24
    28de:	90 93 2e 04 	sts	0x042E, r25
    28e2:	78 94       	sei
    28e4:	0e 94 17 1a 	call	0x342e	; 0x342e <breathe>
    28e8:	80 91 2b 04 	lds	r24, 0x042B
    28ec:	90 91 2c 04 	lds	r25, 0x042C
    28f0:	a0 91 2d 04 	lds	r26, 0x042D
    28f4:	b0 91 2e 04 	lds	r27, 0x042E
    28f8:	00 97       	sbiw	r24, 0x00	; 0
    28fa:	a1 05       	cpc	r26, r1
    28fc:	b1 05       	cpc	r27, r1
    28fe:	19 f4       	brne	.+6      	; 0x2906 <main+0x62>
    2900:	16 c0       	rjmp	.+44     	; 0x292e <main+0x8a>
    2902:	0e 94 17 1a 	call	0x342e	; 0x342e <breathe>
    2906:	60 91 27 04 	lds	r22, 0x0427
    290a:	70 91 28 04 	lds	r23, 0x0428
    290e:	80 91 29 04 	lds	r24, 0x0429
    2912:	90 91 2a 04 	lds	r25, 0x042A
    2916:	20 91 2b 04 	lds	r18, 0x042B
    291a:	30 91 2c 04 	lds	r19, 0x042C
    291e:	40 91 2d 04 	lds	r20, 0x042D
    2922:	50 91 2e 04 	lds	r21, 0x042E
    2926:	0e 94 cc 19 	call	0x3398	; 0x3398 <clockHasElapsed>
    292a:	88 23       	and	r24, r24
    292c:	51 f3       	breq	.-44     	; 0x2902 <main+0x5e>
    292e:	0e 94 07 0f 	call	0x1e0e	; 0x1e0e <clockGetus>
    2932:	9b 01       	movw	r18, r22
    2934:	ac 01       	movw	r20, r24
    2936:	60 93 27 04 	sts	0x0427, r22
    293a:	70 93 28 04 	sts	0x0428, r23
    293e:	80 93 29 04 	sts	0x0429, r24
    2942:	90 93 2a 04 	sts	0x042A, r25
    2946:	60 91 23 04 	lds	r22, 0x0423
    294a:	70 91 24 04 	lds	r23, 0x0424
    294e:	80 91 25 04 	lds	r24, 0x0425
    2952:	90 91 26 04 	lds	r25, 0x0426
    2956:	6f 5f       	subi	r22, 0xFF	; 255
    2958:	7f 4f       	sbci	r23, 0xFF	; 255
    295a:	8f 4f       	sbci	r24, 0xFF	; 255
    295c:	9f 4f       	sbci	r25, 0xFF	; 255
    295e:	60 93 23 04 	sts	0x0423, r22
    2962:	70 93 24 04 	sts	0x0424, r23
    2966:	80 93 25 04 	sts	0x0425, r24
    296a:	90 93 26 04 	sts	0x0426, r25
    296e:	0e 94 a5 07 	call	0xf4a	; 0xf4a <appControl>
    2972:	af cf       	rjmp	.-162    	; 0x28d2 <main+0x2e>

00002974 <marqueeSendByte>:
    2974:	cf 92       	push	r12
    2976:	df 92       	push	r13
    2978:	ef 92       	push	r14
    297a:	ff 92       	push	r15
    297c:	0f 93       	push	r16
    297e:	1f 93       	push	r17
    2980:	cf 93       	push	r28
    2982:	df 93       	push	r29
    2984:	ec 01       	movw	r28, r24
    2986:	d6 2e       	mov	r13, r22
    2988:	8c 81       	ldd	r24, Y+4	; 0x04
    298a:	9d 81       	ldd	r25, Y+5	; 0x05
    298c:	89 2b       	or	r24, r25
    298e:	a9 f5       	brne	.+106    	; 0x29fa <marqueeSendByte+0x86>
    2990:	8a 85       	ldd	r24, Y+10	; 0x0a
    2992:	9b 85       	ldd	r25, Y+11	; 0x0b
    2994:	01 96       	adiw	r24, 0x01	; 1
    2996:	0e 94 21 1c 	call	0x3842	; 0x3842 <malloc>
    299a:	9d 83       	std	Y+5, r25	; 0x05
    299c:	8c 83       	std	Y+4, r24	; 0x04
    299e:	00 97       	sbiw	r24, 0x00	; 0
    29a0:	61 f1       	breq	.+88     	; 0x29fa <marqueeSendByte+0x86>
    29a2:	20 e0       	ldi	r18, 0x00	; 0
    29a4:	30 e0       	ldi	r19, 0x00	; 0
    29a6:	07 c0       	rjmp	.+14     	; 0x29b6 <marqueeSendByte+0x42>
    29a8:	ec 81       	ldd	r30, Y+4	; 0x04
    29aa:	fd 81       	ldd	r31, Y+5	; 0x05
    29ac:	e2 0f       	add	r30, r18
    29ae:	f3 1f       	adc	r31, r19
    29b0:	10 82       	st	Z, r1
    29b2:	2f 5f       	subi	r18, 0xFF	; 255
    29b4:	3f 4f       	sbci	r19, 0xFF	; 255
    29b6:	8a 85       	ldd	r24, Y+10	; 0x0a
    29b8:	9b 85       	ldd	r25, Y+11	; 0x0b
    29ba:	82 17       	cp	r24, r18
    29bc:	93 07       	cpc	r25, r19
    29be:	a0 f7       	brcc	.-24     	; 0x29a8 <marqueeSendByte+0x34>
    29c0:	19 86       	std	Y+9, r1	; 0x09
    29c2:	18 86       	std	Y+8, r1	; 0x08
    29c4:	1f 82       	std	Y+7, r1	; 0x07
    29c6:	1e 82       	std	Y+6, r1	; 0x06
    29c8:	8c 89       	ldd	r24, Y+20	; 0x14
    29ca:	8e 7f       	andi	r24, 0xFE	; 254
    29cc:	8c 8b       	std	Y+20, r24	; 0x14
    29ce:	00 e0       	ldi	r16, 0x00	; 0
    29d0:	10 e0       	ldi	r17, 0x00	; 0
    29d2:	0e c0       	rjmp	.+28     	; 0x29f0 <marqueeSendByte+0x7c>
    29d4:	c8 01       	movw	r24, r16
    29d6:	88 0f       	add	r24, r24
    29d8:	99 1f       	adc	r25, r25
    29da:	e8 81       	ld	r30, Y
    29dc:	f9 81       	ldd	r31, Y+1	; 0x01
    29de:	e8 0f       	add	r30, r24
    29e0:	f9 1f       	adc	r31, r25
    29e2:	85 91       	lpm	r24, Z+
    29e4:	94 91       	lpm	r25, Z+
    29e6:	60 e2       	ldi	r22, 0x20	; 32
    29e8:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <segled_put_char>
    29ec:	0f 5f       	subi	r16, 0xFF	; 255
    29ee:	1f 4f       	sbci	r17, 0xFF	; 255
    29f0:	8a 81       	ldd	r24, Y+2	; 0x02
    29f2:	9b 81       	ldd	r25, Y+3	; 0x03
    29f4:	08 17       	cp	r16, r24
    29f6:	19 07       	cpc	r17, r25
    29f8:	68 f3       	brcs	.-38     	; 0x29d4 <marqueeSendByte+0x60>
    29fa:	ec 81       	ldd	r30, Y+4	; 0x04
    29fc:	fd 81       	ldd	r31, Y+5	; 0x05
    29fe:	30 97       	sbiw	r30, 0x00	; 0
    2a00:	09 f4       	brne	.+2      	; 0x2a04 <marqueeSendByte+0x90>
    2a02:	3e c0       	rjmp	.+124    	; 0x2a80 <marqueeSendByte+0x10c>
    2a04:	8a e0       	ldi	r24, 0x0A	; 10
    2a06:	d8 16       	cp	r13, r24
    2a08:	19 f5       	brne	.+70     	; 0x2a50 <marqueeSendByte+0xdc>
    2a0a:	88 85       	ldd	r24, Y+8	; 0x08
    2a0c:	99 85       	ldd	r25, Y+9	; 0x09
    2a0e:	e8 0f       	add	r30, r24
    2a10:	f9 1f       	adc	r31, r25
    2a12:	10 82       	st	Z, r1
    2a14:	19 86       	std	Y+9, r1	; 0x09
    2a16:	18 86       	std	Y+8, r1	; 0x08
    2a18:	cf b6       	in	r12, 0x3f	; 63
    2a1a:	f8 94       	cli
    2a1c:	8c 89       	ldd	r24, Y+20	; 0x14
    2a1e:	80 fd       	sbrc	r24, 0
    2a20:	15 c0       	rjmp	.+42     	; 0x2a4c <marqueeSendByte+0xd8>
    2a22:	8c 89       	ldd	r24, Y+20	; 0x14
    2a24:	81 60       	ori	r24, 0x01	; 1
    2a26:	8c 8b       	std	Y+20, r24	; 0x14
    2a28:	8c 89       	ldd	r24, Y+20	; 0x14
    2a2a:	8d 7f       	andi	r24, 0xFD	; 253
    2a2c:	8c 8b       	std	Y+20, r24	; 0x14
    2a2e:	1f 82       	std	Y+7, r1	; 0x07
    2a30:	1e 82       	std	Y+6, r1	; 0x06
    2a32:	0e 94 07 0f 	call	0x1e0e	; 0x1e0e <clockGetus>
    2a36:	9b 01       	movw	r18, r22
    2a38:	ac 01       	movw	r20, r24
    2a3a:	ec 84       	ldd	r14, Y+12	; 0x0c
    2a3c:	fd 84       	ldd	r15, Y+13	; 0x0d
    2a3e:	0e 85       	ldd	r16, Y+14	; 0x0e
    2a40:	1f 85       	ldd	r17, Y+15	; 0x0f
    2a42:	8a e4       	ldi	r24, 0x4A	; 74
    2a44:	95 e1       	ldi	r25, 0x15	; 21
    2a46:	be 01       	movw	r22, r28
    2a48:	0e 94 88 1b 	call	0x3710	; 0x3710 <scheduleJob>
    2a4c:	cf be       	out	0x3f, r12	; 63
    2a4e:	18 c0       	rjmp	.+48     	; 0x2a80 <marqueeSendByte+0x10c>
    2a50:	8d e0       	ldi	r24, 0x0D	; 13
    2a52:	d8 16       	cp	r13, r24
    2a54:	a9 f0       	breq	.+42     	; 0x2a80 <marqueeSendByte+0x10c>
    2a56:	28 85       	ldd	r18, Y+8	; 0x08
    2a58:	39 85       	ldd	r19, Y+9	; 0x09
    2a5a:	8a 85       	ldd	r24, Y+10	; 0x0a
    2a5c:	9b 85       	ldd	r25, Y+11	; 0x0b
    2a5e:	28 17       	cp	r18, r24
    2a60:	39 07       	cpc	r19, r25
    2a62:	70 f4       	brcc	.+28     	; 0x2a80 <marqueeSendByte+0x10c>
    2a64:	e2 0f       	add	r30, r18
    2a66:	f3 1f       	adc	r31, r19
    2a68:	2f b7       	in	r18, 0x3f	; 63
    2a6a:	f8 94       	cli
    2a6c:	d0 82       	st	Z, r13
    2a6e:	11 82       	std	Z+1, r1	; 0x01
    2a70:	88 85       	ldd	r24, Y+8	; 0x08
    2a72:	99 85       	ldd	r25, Y+9	; 0x09
    2a74:	01 96       	adiw	r24, 0x01	; 1
    2a76:	99 87       	std	Y+9, r25	; 0x09
    2a78:	88 87       	std	Y+8, r24	; 0x08
    2a7a:	1f 82       	std	Y+7, r1	; 0x07
    2a7c:	1e 82       	std	Y+6, r1	; 0x06
    2a7e:	2f bf       	out	0x3f, r18	; 63
    2a80:	8d 2d       	mov	r24, r13
    2a82:	df 91       	pop	r29
    2a84:	cf 91       	pop	r28
    2a86:	1f 91       	pop	r17
    2a88:	0f 91       	pop	r16
    2a8a:	ff 90       	pop	r15
    2a8c:	ef 90       	pop	r14
    2a8e:	df 90       	pop	r13
    2a90:	cf 90       	pop	r12
    2a92:	08 95       	ret

00002a94 <marqueeUpdate>:
    2a94:	2f 92       	push	r2
    2a96:	3f 92       	push	r3
    2a98:	4f 92       	push	r4
    2a9a:	5f 92       	push	r5
    2a9c:	6f 92       	push	r6
    2a9e:	7f 92       	push	r7
    2aa0:	8f 92       	push	r8
    2aa2:	9f 92       	push	r9
    2aa4:	af 92       	push	r10
    2aa6:	bf 92       	push	r11
    2aa8:	cf 92       	push	r12
    2aaa:	df 92       	push	r13
    2aac:	ef 92       	push	r14
    2aae:	ff 92       	push	r15
    2ab0:	0f 93       	push	r16
    2ab2:	1f 93       	push	r17
    2ab4:	cf 93       	push	r28
    2ab6:	df 93       	push	r29
    2ab8:	38 2e       	mov	r3, r24
    2aba:	29 2e       	mov	r2, r25
    2abc:	2a 01       	movw	r4, r20
    2abe:	3b 01       	movw	r6, r22
    2ac0:	c8 2f       	mov	r28, r24
    2ac2:	d9 2f       	mov	r29, r25
    2ac4:	0c 81       	ldd	r16, Y+4	; 0x04
    2ac6:	1d 81       	ldd	r17, Y+5	; 0x05
    2ac8:	8e 81       	ldd	r24, Y+6	; 0x06
    2aca:	9f 81       	ldd	r25, Y+7	; 0x07
    2acc:	08 0f       	add	r16, r24
    2ace:	19 1f       	adc	r17, r25
    2ad0:	f8 01       	movw	r30, r16
    2ad2:	80 80       	ld	r8, Z
    2ad4:	8c 89       	ldd	r24, Y+20	; 0x14
    2ad6:	86 95       	lsr	r24
    2ad8:	81 70       	andi	r24, 0x01	; 1
    2ada:	88 20       	and	r8, r8
    2adc:	29 f4       	brne	.+10     	; 0x2ae8 <marqueeUpdate+0x54>
    2ade:	a8 88       	ldd	r10, Y+16	; 0x10
    2ae0:	b9 88       	ldd	r11, Y+17	; 0x11
    2ae2:	ca 88       	ldd	r12, Y+18	; 0x12
    2ae4:	db 88       	ldd	r13, Y+19	; 0x13
    2ae6:	04 c0       	rjmp	.+8      	; 0x2af0 <marqueeUpdate+0x5c>
    2ae8:	ac 84       	ldd	r10, Y+12	; 0x0c
    2aea:	bd 84       	ldd	r11, Y+13	; 0x0d
    2aec:	ce 84       	ldd	r12, Y+14	; 0x0e
    2aee:	df 84       	ldd	r13, Y+15	; 0x0f
    2af0:	88 23       	and	r24, r24
    2af2:	d1 f4       	brne	.+52     	; 0x2b28 <marqueeUpdate+0x94>
    2af4:	88 20       	and	r8, r8
    2af6:	c1 f0       	breq	.+48     	; 0x2b28 <marqueeUpdate+0x94>
    2af8:	f8 01       	movw	r30, r16
    2afa:	32 91       	ld	r19, -Z
    2afc:	8f 01       	movw	r16, r30
    2afe:	0f 5f       	subi	r16, 0xFF	; 255
    2b00:	1f 4f       	sbci	r17, 0xFF	; 255
    2b02:	4a 81       	ldd	r20, Y+2	; 0x02
    2b04:	5b 81       	ldd	r21, Y+3	; 0x03
    2b06:	f8 01       	movw	r30, r16
    2b08:	80 e0       	ldi	r24, 0x00	; 0
    2b0a:	90 e0       	ldi	r25, 0x00	; 0
    2b0c:	07 c0       	rjmp	.+14     	; 0x2b1c <marqueeUpdate+0x88>
    2b0e:	20 81       	ld	r18, Z
    2b10:	22 23       	and	r18, r18
    2b12:	51 f0       	breq	.+20     	; 0x2b28 <marqueeUpdate+0x94>
    2b14:	23 17       	cp	r18, r19
    2b16:	41 f4       	brne	.+16     	; 0x2b28 <marqueeUpdate+0x94>
    2b18:	31 96       	adiw	r30, 0x01	; 1
    2b1a:	01 96       	adiw	r24, 0x01	; 1
    2b1c:	84 17       	cp	r24, r20
    2b1e:	95 07       	cpc	r25, r21
    2b20:	b0 f3       	brcs	.-20     	; 0x2b0e <marqueeUpdate+0x7a>
    2b22:	99 24       	eor	r9, r9
    2b24:	9a 94       	dec	r9
    2b26:	01 c0       	rjmp	.+2      	; 0x2b2a <marqueeUpdate+0x96>
    2b28:	99 24       	eor	r9, r9
    2b2a:	8c 89       	ldd	r24, Y+20	; 0x14
    2b2c:	86 95       	lsr	r24
    2b2e:	81 70       	andi	r24, 0x01	; 1
    2b30:	29 2d       	mov	r18, r9
    2b32:	33 27       	eor	r19, r19
    2b34:	27 fd       	sbrc	r18, 7
    2b36:	30 95       	com	r19
    2b38:	90 e0       	ldi	r25, 0x00	; 0
    2b3a:	28 17       	cp	r18, r24
    2b3c:	39 07       	cpc	r19, r25
    2b3e:	c1 f0       	breq	.+48     	; 0x2b70 <marqueeUpdate+0xdc>
    2b40:	a6 01       	movw	r20, r12
    2b42:	95 01       	movw	r18, r10
    2b44:	62 e0       	ldi	r22, 0x02	; 2
    2b46:	56 95       	lsr	r21
    2b48:	47 95       	ror	r20
    2b4a:	37 95       	ror	r19
    2b4c:	27 95       	ror	r18
    2b4e:	6a 95       	dec	r22
    2b50:	d1 f7       	brne	.-12     	; 0x2b46 <marqueeUpdate+0xb2>
    2b52:	99 2d       	mov	r25, r9
    2b54:	92 70       	andi	r25, 0x02	; 2
    2b56:	8c 89       	ldd	r24, Y+20	; 0x14
    2b58:	8d 7f       	andi	r24, 0xFD	; 253
    2b5a:	89 2b       	or	r24, r25
    2b5c:	8c 8b       	std	Y+20, r24	; 0x14
    2b5e:	99 20       	and	r9, r9
    2b60:	19 f0       	breq	.+6      	; 0x2b68 <marqueeUpdate+0xd4>
    2b62:	59 01       	movw	r10, r18
    2b64:	6a 01       	movw	r12, r20
    2b66:	04 c0       	rjmp	.+8      	; 0x2b70 <marqueeUpdate+0xdc>
    2b68:	a2 1a       	sub	r10, r18
    2b6a:	b3 0a       	sbc	r11, r19
    2b6c:	c4 0a       	sbc	r12, r20
    2b6e:	d5 0a       	sbc	r13, r21
    2b70:	ee 24       	eor	r14, r14
    2b72:	ff 24       	eor	r15, r15
    2b74:	18 c0       	rjmp	.+48     	; 0x2ba6 <marqueeUpdate+0x112>
    2b76:	c7 01       	movw	r24, r14
    2b78:	88 0f       	add	r24, r24
    2b7a:	99 1f       	adc	r25, r25
    2b7c:	e8 81       	ld	r30, Y
    2b7e:	f9 81       	ldd	r31, Y+1	; 0x01
    2b80:	e8 0f       	add	r30, r24
    2b82:	f9 1f       	adc	r31, r25
    2b84:	85 91       	lpm	r24, Z+
    2b86:	94 91       	lpm	r25, Z+
    2b88:	99 20       	and	r9, r9
    2b8a:	39 f4       	brne	.+14     	; 0x2b9a <marqueeUpdate+0x106>
    2b8c:	f8 01       	movw	r30, r16
    2b8e:	60 81       	ld	r22, Z
    2b90:	66 23       	and	r22, r22
    2b92:	19 f0       	breq	.+6      	; 0x2b9a <marqueeUpdate+0x106>
    2b94:	0f 5f       	subi	r16, 0xFF	; 255
    2b96:	1f 4f       	sbci	r17, 0xFF	; 255
    2b98:	01 c0       	rjmp	.+2      	; 0x2b9c <marqueeUpdate+0x108>
    2b9a:	60 e2       	ldi	r22, 0x20	; 32
    2b9c:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <segled_put_char>
    2ba0:	08 94       	sec
    2ba2:	e1 1c       	adc	r14, r1
    2ba4:	f1 1c       	adc	r15, r1
    2ba6:	8a 81       	ldd	r24, Y+2	; 0x02
    2ba8:	9b 81       	ldd	r25, Y+3	; 0x03
    2baa:	e8 16       	cp	r14, r24
    2bac:	f9 06       	cpc	r15, r25
    2bae:	18 f3       	brcs	.-58     	; 0x2b76 <marqueeUpdate+0xe2>
    2bb0:	88 20       	and	r8, r8
    2bb2:	b1 f4       	brne	.+44     	; 0x2be0 <marqueeUpdate+0x14c>
    2bb4:	1f 82       	std	Y+7, r1	; 0x07
    2bb6:	1e 82       	std	Y+6, r1	; 0x06
    2bb8:	88 89       	ldd	r24, Y+16	; 0x10
    2bba:	99 89       	ldd	r25, Y+17	; 0x11
    2bbc:	aa 89       	ldd	r26, Y+18	; 0x12
    2bbe:	bb 89       	ldd	r27, Y+19	; 0x13
    2bc0:	00 97       	sbiw	r24, 0x00	; 0
    2bc2:	a1 05       	cpc	r26, r1
    2bc4:	b1 05       	cpc	r27, r1
    2bc6:	29 f0       	breq	.+10     	; 0x2bd2 <marqueeUpdate+0x13e>
    2bc8:	ec 81       	ldd	r30, Y+4	; 0x04
    2bca:	fd 81       	ldd	r31, Y+5	; 0x05
    2bcc:	80 81       	ld	r24, Z
    2bce:	88 23       	and	r24, r24
    2bd0:	19 f4       	brne	.+6      	; 0x2bd8 <marqueeUpdate+0x144>
    2bd2:	8c 89       	ldd	r24, Y+20	; 0x14
    2bd4:	8e 7f       	andi	r24, 0xFE	; 254
    2bd6:	02 c0       	rjmp	.+4      	; 0x2bdc <marqueeUpdate+0x148>
    2bd8:	8c 89       	ldd	r24, Y+20	; 0x14
    2bda:	8d 7f       	andi	r24, 0xFD	; 253
    2bdc:	8c 8b       	std	Y+20, r24	; 0x14
    2bde:	07 c0       	rjmp	.+14     	; 0x2bee <marqueeUpdate+0x15a>
    2be0:	99 20       	and	r9, r9
    2be2:	29 f4       	brne	.+10     	; 0x2bee <marqueeUpdate+0x15a>
    2be4:	8e 81       	ldd	r24, Y+6	; 0x06
    2be6:	9f 81       	ldd	r25, Y+7	; 0x07
    2be8:	01 96       	adiw	r24, 0x01	; 1
    2bea:	9f 83       	std	Y+7, r25	; 0x07
    2bec:	8e 83       	std	Y+6, r24	; 0x06
    2bee:	8c 89       	ldd	r24, Y+20	; 0x14
    2bf0:	80 ff       	sbrs	r24, 0
    2bf2:	0a c0       	rjmp	.+20     	; 0x2c08 <marqueeUpdate+0x174>
    2bf4:	8a e4       	ldi	r24, 0x4A	; 74
    2bf6:	95 e1       	ldi	r25, 0x15	; 21
    2bf8:	63 2d       	mov	r22, r3
    2bfa:	72 2d       	mov	r23, r2
    2bfc:	a3 01       	movw	r20, r6
    2bfe:	92 01       	movw	r18, r4
    2c00:	86 01       	movw	r16, r12
    2c02:	75 01       	movw	r14, r10
    2c04:	0e 94 88 1b 	call	0x3710	; 0x3710 <scheduleJob>
    2c08:	df 91       	pop	r29
    2c0a:	cf 91       	pop	r28
    2c0c:	1f 91       	pop	r17
    2c0e:	0f 91       	pop	r16
    2c10:	ff 90       	pop	r15
    2c12:	ef 90       	pop	r14
    2c14:	df 90       	pop	r13
    2c16:	cf 90       	pop	r12
    2c18:	bf 90       	pop	r11
    2c1a:	af 90       	pop	r10
    2c1c:	9f 90       	pop	r9
    2c1e:	8f 90       	pop	r8
    2c20:	7f 90       	pop	r7
    2c22:	6f 90       	pop	r6
    2c24:	5f 90       	pop	r5
    2c26:	4f 90       	pop	r4
    2c28:	3f 90       	pop	r3
    2c2a:	2f 90       	pop	r2
    2c2c:	08 95       	ret

00002c2e <segled_put_char>:
    2c2e:	ef 92       	push	r14
    2c30:	ff 92       	push	r15
    2c32:	0f 93       	push	r16
    2c34:	1f 93       	push	r17
    2c36:	cf 93       	push	r28
    2c38:	df 93       	push	r29
    2c3a:	8c 01       	movw	r16, r24
    2c3c:	e6 2e       	mov	r14, r22
    2c3e:	fc 01       	movw	r30, r24
    2c40:	80 89       	ldd	r24, Z+16	; 0x10
    2c42:	81 fd       	sbrc	r24, 1
    2c44:	12 c0       	rjmp	.+36     	; 0x2c6a <segled_put_char+0x3c>
    2c46:	c0 e0       	ldi	r28, 0x00	; 0
    2c48:	d0 e0       	ldi	r29, 0x00	; 0
    2c4a:	f8 01       	movw	r30, r16
    2c4c:	ec 0f       	add	r30, r28
    2c4e:	fd 1f       	adc	r31, r29
    2c50:	80 81       	ld	r24, Z
    2c52:	91 81       	ldd	r25, Z+1	; 0x01
    2c54:	60 e0       	ldi	r22, 0x00	; 0
    2c56:	0e 94 09 14 	call	0x2812	; 0x2812 <pin_make_output>
    2c5a:	22 96       	adiw	r28, 0x02	; 2
    2c5c:	c0 31       	cpi	r28, 0x10	; 16
    2c5e:	d1 05       	cpc	r29, r1
    2c60:	a1 f7       	brne	.-24     	; 0x2c4a <segled_put_char+0x1c>
    2c62:	f8 01       	movw	r30, r16
    2c64:	80 89       	ldd	r24, Z+16	; 0x10
    2c66:	82 60       	ori	r24, 0x02	; 2
    2c68:	80 8b       	std	Z+16, r24	; 0x10
    2c6a:	8e 2d       	mov	r24, r14
    2c6c:	0e 94 9d 16 	call	0x2d3a	; 0x2d3a <segled8_get_mask>
    2c70:	f8 2e       	mov	r15, r24
    2c72:	80 ff       	sbrs	r24, 0
    2c74:	07 c0       	rjmp	.+14     	; 0x2c84 <segled_put_char+0x56>
    2c76:	f8 01       	movw	r30, r16
    2c78:	86 85       	ldd	r24, Z+14	; 0x0e
    2c7a:	97 85       	ldd	r25, Z+15	; 0x0f
    2c7c:	89 2b       	or	r24, r25
    2c7e:	11 f4       	brne	.+4      	; 0x2c84 <segled_put_char+0x56>
    2c80:	80 e1       	ldi	r24, 0x10	; 16
    2c82:	f8 2e       	mov	r15, r24
    2c84:	f8 01       	movw	r30, r16
    2c86:	80 89       	ldd	r24, Z+16	; 0x10
    2c88:	80 ff       	sbrs	r24, 0
    2c8a:	f0 94       	com	r15
    2c8c:	c0 e0       	ldi	r28, 0x00	; 0
    2c8e:	d0 e0       	ldi	r29, 0x00	; 0
    2c90:	f8 01       	movw	r30, r16
    2c92:	ec 0f       	add	r30, r28
    2c94:	fd 1f       	adc	r31, r29
    2c96:	80 81       	ld	r24, Z
    2c98:	91 81       	ldd	r25, Z+1	; 0x01
    2c9a:	f7 fe       	sbrs	r15, 7
    2c9c:	03 c0       	rjmp	.+6      	; 0x2ca4 <segled_put_char+0x76>
    2c9e:	0e 94 47 1a 	call	0x348e	; 0x348e <pin_high>
    2ca2:	02 c0       	rjmp	.+4      	; 0x2ca8 <segled_put_char+0x7a>
    2ca4:	0e 94 22 1a 	call	0x3444	; 0x3444 <pin_low>
    2ca8:	22 96       	adiw	r28, 0x02	; 2
    2caa:	c0 31       	cpi	r28, 0x10	; 16
    2cac:	d1 05       	cpc	r29, r1
    2cae:	11 f0       	breq	.+4      	; 0x2cb4 <segled_put_char+0x86>
    2cb0:	ff 0c       	add	r15, r15
    2cb2:	ee cf       	rjmp	.-36     	; 0x2c90 <segled_put_char+0x62>
    2cb4:	8e 2d       	mov	r24, r14
    2cb6:	df 91       	pop	r29
    2cb8:	cf 91       	pop	r28
    2cba:	1f 91       	pop	r17
    2cbc:	0f 91       	pop	r16
    2cbe:	ff 90       	pop	r15
    2cc0:	ef 90       	pop	r14
    2cc2:	08 95       	ret

00002cc4 <segled_set>:
    2cc4:	ef 92       	push	r14
    2cc6:	ff 92       	push	r15
    2cc8:	0f 93       	push	r16
    2cca:	1f 93       	push	r17
    2ccc:	cf 93       	push	r28
    2cce:	df 93       	push	r29
    2cd0:	8c 01       	movw	r16, r24
    2cd2:	e6 2e       	mov	r14, r22
    2cd4:	f4 2e       	mov	r15, r20
    2cd6:	fc 01       	movw	r30, r24
    2cd8:	80 89       	ldd	r24, Z+16	; 0x10
    2cda:	81 fd       	sbrc	r24, 1
    2cdc:	12 c0       	rjmp	.+36     	; 0x2d02 <segled_set+0x3e>
    2cde:	c0 e0       	ldi	r28, 0x00	; 0
    2ce0:	d0 e0       	ldi	r29, 0x00	; 0
    2ce2:	f8 01       	movw	r30, r16
    2ce4:	ec 0f       	add	r30, r28
    2ce6:	fd 1f       	adc	r31, r29
    2ce8:	80 81       	ld	r24, Z
    2cea:	91 81       	ldd	r25, Z+1	; 0x01
    2cec:	60 e0       	ldi	r22, 0x00	; 0
    2cee:	0e 94 09 14 	call	0x2812	; 0x2812 <pin_make_output>
    2cf2:	22 96       	adiw	r28, 0x02	; 2
    2cf4:	c0 31       	cpi	r28, 0x10	; 16
    2cf6:	d1 05       	cpc	r29, r1
    2cf8:	a1 f7       	brne	.-24     	; 0x2ce2 <segled_set+0x1e>
    2cfa:	f8 01       	movw	r30, r16
    2cfc:	80 89       	ldd	r24, Z+16	; 0x10
    2cfe:	82 60       	ori	r24, 0x02	; 2
    2d00:	80 8b       	std	Z+16, r24	; 0x10
    2d02:	f8 01       	movw	r30, r16
    2d04:	80 89       	ldd	r24, Z+16	; 0x10
    2d06:	80 fd       	sbrc	r24, 0
    2d08:	06 c0       	rjmp	.+12     	; 0x2d16 <segled_set+0x52>
    2d0a:	ff 20       	and	r15, r15
    2d0c:	19 f4       	brne	.+6      	; 0x2d14 <segled_set+0x50>
    2d0e:	ff 24       	eor	r15, r15
    2d10:	fa 94       	dec	r15
    2d12:	01 c0       	rjmp	.+2      	; 0x2d16 <segled_set+0x52>
    2d14:	ff 24       	eor	r15, r15
    2d16:	ee 2d       	mov	r30, r14
    2d18:	f0 e0       	ldi	r31, 0x00	; 0
    2d1a:	ee 0f       	add	r30, r30
    2d1c:	ff 1f       	adc	r31, r31
    2d1e:	e0 0f       	add	r30, r16
    2d20:	f1 1f       	adc	r31, r17
    2d22:	80 81       	ld	r24, Z
    2d24:	91 81       	ldd	r25, Z+1	; 0x01
    2d26:	6f 2d       	mov	r22, r15
    2d28:	0e 94 6b 1a 	call	0x34d6	; 0x34d6 <pin_set>
    2d2c:	df 91       	pop	r29
    2d2e:	cf 91       	pop	r28
    2d30:	1f 91       	pop	r17
    2d32:	0f 91       	pop	r16
    2d34:	ff 90       	pop	r15
    2d36:	ef 90       	pop	r14
    2d38:	08 95       	ret

00002d3a <segled8_get_mask>:
    2d3a:	e8 2f       	mov	r30, r24
    2d3c:	81 54       	subi	r24, 0x41	; 65
    2d3e:	8a 31       	cpi	r24, 0x1A	; 26
    2d40:	28 f4       	brcc	.+10     	; 0x2d4c <segled8_get_mask+0x12>
    2d42:	f0 e0       	ldi	r31, 0x00	; 0
    2d44:	e3 5a       	subi	r30, 0xA3	; 163
    2d46:	fc 4f       	sbci	r31, 0xFC	; 252
    2d48:	84 91       	lpm	r24, Z+
    2d4a:	08 95       	ret
    2d4c:	8e 2f       	mov	r24, r30
    2d4e:	81 56       	subi	r24, 0x61	; 97
    2d50:	8a 31       	cpi	r24, 0x1A	; 26
    2d52:	28 f4       	brcc	.+10     	; 0x2d5e <segled8_get_mask+0x24>
    2d54:	f0 e0       	ldi	r31, 0x00	; 0
    2d56:	e3 5c       	subi	r30, 0xC3	; 195
    2d58:	fc 4f       	sbci	r31, 0xFC	; 252
    2d5a:	84 91       	lpm	r24, Z+
    2d5c:	08 95       	ret
    2d5e:	8e 2f       	mov	r24, r30
    2d60:	80 53       	subi	r24, 0x30	; 48
    2d62:	8a 30       	cpi	r24, 0x0A	; 10
    2d64:	28 f4       	brcc	.+10     	; 0x2d70 <segled8_get_mask+0x36>
    2d66:	f0 e0       	ldi	r31, 0x00	; 0
    2d68:	e8 57       	subi	r30, 0x78	; 120
    2d6a:	fc 4f       	sbci	r31, 0xFC	; 252
    2d6c:	84 91       	lpm	r24, Z+
    2d6e:	08 95       	ret
    2d70:	ea 30       	cpi	r30, 0x0A	; 10
    2d72:	28 f4       	brcc	.+10     	; 0x2d7e <segled8_get_mask+0x44>
    2d74:	f0 e0       	ldi	r31, 0x00	; 0
    2d76:	e8 54       	subi	r30, 0x48	; 72
    2d78:	fc 4f       	sbci	r31, 0xFC	; 252
    2d7a:	84 91       	lpm	r24, Z+
    2d7c:	08 95       	ret
    2d7e:	ed 32       	cpi	r30, 0x2D	; 45
    2d80:	11 f4       	brne	.+4      	; 0x2d86 <segled8_get_mask+0x4c>
    2d82:	82 e0       	ldi	r24, 0x02	; 2
    2d84:	08 95       	ret
    2d86:	eb 35       	cpi	r30, 0x5B	; 91
    2d88:	79 f0       	breq	.+30     	; 0x2da8 <segled8_get_mask+0x6e>
    2d8a:	eb 37       	cpi	r30, 0x7B	; 123
    2d8c:	69 f0       	breq	.+26     	; 0x2da8 <segled8_get_mask+0x6e>
    2d8e:	e8 32       	cpi	r30, 0x28	; 40
    2d90:	59 f0       	breq	.+22     	; 0x2da8 <segled8_get_mask+0x6e>
    2d92:	ed 35       	cpi	r30, 0x5D	; 93
    2d94:	59 f0       	breq	.+22     	; 0x2dac <segled8_get_mask+0x72>
    2d96:	ed 37       	cpi	r30, 0x7D	; 125
    2d98:	49 f0       	breq	.+18     	; 0x2dac <segled8_get_mask+0x72>
    2d9a:	e9 32       	cpi	r30, 0x29	; 41
    2d9c:	39 f0       	breq	.+14     	; 0x2dac <segled8_get_mask+0x72>
    2d9e:	80 e0       	ldi	r24, 0x00	; 0
    2da0:	ee 32       	cpi	r30, 0x2E	; 46
    2da2:	29 f4       	brne	.+10     	; 0x2dae <segled8_get_mask+0x74>
    2da4:	81 e0       	ldi	r24, 0x01	; 1
    2da6:	08 95       	ret
    2da8:	8c e9       	ldi	r24, 0x9C	; 156
    2daa:	08 95       	ret
    2dac:	80 ef       	ldi	r24, 0xF0	; 240
    2dae:	08 95       	ret

00002db0 <compareFromIOPin>:
    2db0:	bf 92       	push	r11
    2db2:	cf 92       	push	r12
    2db4:	df 92       	push	r13
    2db6:	ef 92       	push	r14
    2db8:	ff 92       	push	r15
    2dba:	0f 93       	push	r16
    2dbc:	1f 93       	push	r17
    2dbe:	cf 93       	push	r28
    2dc0:	df 93       	push	r29
    2dc2:	6c 01       	movw	r12, r24
    2dc4:	b0 90 ce 02 	lds	r11, 0x02CE
    2dc8:	24 ef       	ldi	r18, 0xF4	; 244
    2dca:	31 e0       	ldi	r19, 0x01	; 1
    2dcc:	90 e0       	ldi	r25, 0x00	; 0
    2dce:	c0 e0       	ldi	r28, 0x00	; 0
    2dd0:	d0 e0       	ldi	r29, 0x00	; 0
    2dd2:	2d c0       	rjmp	.+90     	; 0x2e2e <compareFromIOPin+0x7e>
    2dd4:	28 5f       	subi	r18, 0xF8	; 248
    2dd6:	3f 4f       	sbci	r19, 0xFF	; 255
    2dd8:	f9 01       	movw	r30, r18
    2dda:	e4 90       	lpm	r14, Z+
    2ddc:	28 50       	subi	r18, 0x08	; 8
    2dde:	30 40       	sbci	r19, 0x00	; 0
    2de0:	f9 01       	movw	r30, r18
    2de2:	77 96       	adiw	r30, 0x17	; 23
    2de4:	2a 5f       	subi	r18, 0xFA	; 250
    2de6:	3f 4f       	sbci	r19, 0xFF	; 255
    2de8:	80 e0       	ldi	r24, 0x00	; 0
    2dea:	a0 e0       	ldi	r26, 0x00	; 0
    2dec:	b0 e0       	ldi	r27, 0x00	; 0
    2dee:	05 91       	lpm	r16, Z+
    2df0:	14 91       	lpm	r17, Z+
    2df2:	f9 01       	movw	r30, r18
    2df4:	f4 90       	lpm	r15, Z+
    2df6:	26 50       	subi	r18, 0x06	; 6
    2df8:	30 40       	sbci	r19, 0x00	; 0
    2dfa:	14 c0       	rjmp	.+40     	; 0x2e24 <compareFromIOPin+0x74>
    2dfc:	b8 01       	movw	r22, r16
    2dfe:	6a 0f       	add	r22, r26
    2e00:	7b 1f       	adc	r23, r27
    2e02:	fb 01       	movw	r30, r22
    2e04:	3e 96       	adiw	r30, 0x0e	; 14
    2e06:	45 91       	lpm	r20, Z+
    2e08:	54 91       	lpm	r21, Z+
    2e0a:	41 15       	cp	r20, r1
    2e0c:	51 05       	cpc	r21, r1
    2e0e:	41 f0       	breq	.+16     	; 0x2e20 <compareFromIOPin+0x70>
    2e10:	4c 15       	cp	r20, r12
    2e12:	5d 05       	cpc	r21, r13
    2e14:	29 f4       	brne	.+10     	; 0x2e20 <compareFromIOPin+0x70>
    2e16:	ff 20       	and	r15, r15
    2e18:	11 f0       	breq	.+4      	; 0x2e1e <compareFromIOPin+0x6e>
    2e1a:	eb 01       	movw	r28, r22
    2e1c:	0a c0       	rjmp	.+20     	; 0x2e32 <compareFromIOPin+0x82>
    2e1e:	eb 01       	movw	r28, r22
    2e20:	8f 5f       	subi	r24, 0xFF	; 255
    2e22:	50 96       	adiw	r26, 0x10	; 16
    2e24:	8e 15       	cp	r24, r14
    2e26:	50 f3       	brcs	.-44     	; 0x2dfc <compareFromIOPin+0x4c>
    2e28:	9f 5f       	subi	r25, 0xFF	; 255
    2e2a:	24 5d       	subi	r18, 0xD4	; 212
    2e2c:	3f 4f       	sbci	r19, 0xFF	; 255
    2e2e:	9b 15       	cp	r25, r11
    2e30:	88 f2       	brcs	.-94     	; 0x2dd4 <compareFromIOPin+0x24>
    2e32:	ce 01       	movw	r24, r28
    2e34:	df 91       	pop	r29
    2e36:	cf 91       	pop	r28
    2e38:	1f 91       	pop	r17
    2e3a:	0f 91       	pop	r16
    2e3c:	ff 90       	pop	r15
    2e3e:	ef 90       	pop	r14
    2e40:	df 90       	pop	r13
    2e42:	cf 90       	pop	r12
    2e44:	bf 90       	pop	r11
    2e46:	08 95       	ret

00002e48 <compareSetOutputMode>:
    2e48:	9c 01       	movw	r18, r24
    2e4a:	0b 96       	adiw	r24, 0x0b	; 11
    2e4c:	fc 01       	movw	r30, r24
    2e4e:	a5 91       	lpm	r26, Z+
    2e50:	b4 91       	lpm	r27, Z+
    2e52:	23 5f       	subi	r18, 0xF3	; 243
    2e54:	3f 4f       	sbci	r19, 0xFF	; 255
    2e56:	f9 01       	movw	r30, r18
    2e58:	24 91       	lpm	r18, Z+
    2e5a:	70 e0       	ldi	r23, 0x00	; 0
    2e5c:	02 2e       	mov	r0, r18
    2e5e:	02 c0       	rjmp	.+4      	; 0x2e64 <compareSetOutputMode+0x1c>
    2e60:	66 0f       	add	r22, r22
    2e62:	77 1f       	adc	r23, r23
    2e64:	0a 94       	dec	r0
    2e66:	e2 f7       	brpl	.-8      	; 0x2e60 <compareSetOutputMode+0x18>
    2e68:	81 e0       	ldi	r24, 0x01	; 1
    2e6a:	90 e0       	ldi	r25, 0x00	; 0
    2e6c:	02 c0       	rjmp	.+4      	; 0x2e72 <compareSetOutputMode+0x2a>
    2e6e:	88 0f       	add	r24, r24
    2e70:	99 1f       	adc	r25, r25
    2e72:	2a 95       	dec	r18
    2e74:	e2 f7       	brpl	.-8      	; 0x2e6e <compareSetOutputMode+0x26>
    2e76:	28 2f       	mov	r18, r24
    2e78:	22 0f       	add	r18, r18
    2e7a:	28 2b       	or	r18, r24
    2e7c:	9c 91       	ld	r25, X
    2e7e:	82 2f       	mov	r24, r18
    2e80:	86 23       	and	r24, r22
    2e82:	20 95       	com	r18
    2e84:	29 23       	and	r18, r25
    2e86:	82 2b       	or	r24, r18
    2e88:	8c 93       	st	X, r24
    2e8a:	08 95       	ret

00002e8c <compareSetThreshold>:
    2e8c:	cf 93       	push	r28
    2e8e:	df 93       	push	r29
    2e90:	9c 01       	movw	r18, r24
    2e92:	2e 5f       	subi	r18, 0xFE	; 254
    2e94:	3f 4f       	sbci	r19, 0xFF	; 255
    2e96:	f9 01       	movw	r30, r18
    2e98:	84 91       	lpm	r24, Z+
    2e9a:	22 50       	subi	r18, 0x02	; 2
    2e9c:	30 40       	sbci	r19, 0x00	; 0
    2e9e:	9c e2       	ldi	r25, 0x2C	; 44
    2ea0:	89 9f       	mul	r24, r25
    2ea2:	a0 01       	movw	r20, r0
    2ea4:	11 24       	eor	r1, r1
    2ea6:	4c 50       	subi	r20, 0x0C	; 12
    2ea8:	5e 4f       	sbci	r21, 0xFE	; 254
    2eaa:	48 5f       	subi	r20, 0xF8	; 248
    2eac:	5f 4f       	sbci	r21, 0xFF	; 255
    2eae:	fa 01       	movw	r30, r20
    2eb0:	84 91       	lpm	r24, Z+
    2eb2:	48 50       	subi	r20, 0x08	; 8
    2eb4:	50 40       	sbci	r21, 0x00	; 0
    2eb6:	88 23       	and	r24, r24
    2eb8:	c1 f0       	breq	.+48     	; 0x2eea <compareSetThreshold+0x5e>
    2eba:	c9 01       	movw	r24, r18
    2ebc:	06 96       	adiw	r24, 0x06	; 6
    2ebe:	fc 01       	movw	r30, r24
    2ec0:	c5 91       	lpm	r28, Z+
    2ec2:	d4 91       	lpm	r29, Z+
    2ec4:	fa 01       	movw	r30, r20
    2ec6:	36 96       	adiw	r30, 0x06	; 6
    2ec8:	e4 91       	lpm	r30, Z+
    2eca:	ee 23       	and	r30, r30
    2ecc:	19 f0       	breq	.+6      	; 0x2ed4 <compareSetThreshold+0x48>
    2ece:	79 83       	std	Y+1, r23	; 0x01
    2ed0:	68 83       	st	Y, r22
    2ed2:	0e c0       	rjmp	.+28     	; 0x2ef0 <compareSetThreshold+0x64>
    2ed4:	6f 3f       	cpi	r22, 0xFF	; 255
    2ed6:	71 05       	cpc	r23, r1
    2ed8:	31 f0       	breq	.+12     	; 0x2ee6 <compareSetThreshold+0x5a>
    2eda:	28 f0       	brcs	.+10     	; 0x2ee6 <compareSetThreshold+0x5a>
    2edc:	8e ef       	ldi	r24, 0xFE	; 254
    2ede:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <setError>
    2ee2:	6f ef       	ldi	r22, 0xFF	; 255
    2ee4:	70 e0       	ldi	r23, 0x00	; 0
    2ee6:	68 83       	st	Y, r22
    2ee8:	03 c0       	rjmp	.+6      	; 0x2ef0 <compareSetThreshold+0x64>
    2eea:	8d ef       	ldi	r24, 0xFD	; 253
    2eec:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <setError>
    2ef0:	df 91       	pop	r29
    2ef2:	cf 91       	pop	r28
    2ef4:	08 95       	ret

00002ef6 <_uartSetBaudRate>:
    2ef6:	dc 01       	movw	r26, r24
    2ef8:	19 96       	adiw	r26, 0x09	; 9
    2efa:	8d 91       	ld	r24, X+
    2efc:	9c 91       	ld	r25, X
    2efe:	1a 97       	sbiw	r26, 0x0a	; 10
    2f00:	fc 01       	movw	r30, r24
    2f02:	25 91       	lpm	r18, Z+
    2f04:	34 91       	lpm	r19, Z+
    2f06:	cd 01       	movw	r24, r26
    2f08:	f9 01       	movw	r30, r18
    2f0a:	09 95       	icall
    2f0c:	08 95       	ret

00002f0e <_uartInit>:
    2f0e:	df 92       	push	r13
    2f10:	ef 92       	push	r14
    2f12:	ff 92       	push	r15
    2f14:	0f 93       	push	r16
    2f16:	1f 93       	push	r17
    2f18:	cf 93       	push	r28
    2f1a:	df 93       	push	r29
    2f1c:	ec 01       	movw	r28, r24
    2f1e:	7a 01       	movw	r14, r20
    2f20:	8b 01       	movw	r16, r22
    2f22:	df b6       	in	r13, 0x3f	; 63
    2f24:	f8 94       	cli
    2f26:	2d 85       	ldd	r18, Y+13	; 0x0d
    2f28:	3e 85       	ldd	r19, Y+14	; 0x0e
    2f2a:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f2c:	98 89       	ldd	r25, Y+16	; 0x10
    2f2e:	28 17       	cp	r18, r24
    2f30:	39 07       	cpc	r19, r25
    2f32:	11 f0       	breq	.+4      	; 0x2f38 <_uartInit+0x2a>
    2f34:	80 e0       	ldi	r24, 0x00	; 0
    2f36:	01 c0       	rjmp	.+2      	; 0x2f3a <_uartInit+0x2c>
    2f38:	8f ef       	ldi	r24, 0xFF	; 255
    2f3a:	8f 8b       	std	Y+23, r24	; 0x17
    2f3c:	88 23       	and	r24, r24
    2f3e:	81 f0       	breq	.+32     	; 0x2f60 <_uartInit+0x52>
    2f40:	2d 85       	ldd	r18, Y+13	; 0x0d
    2f42:	3e 85       	ldd	r19, Y+14	; 0x0e
    2f44:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f46:	98 89       	ldd	r25, Y+16	; 0x10
    2f48:	28 17       	cp	r18, r24
    2f4a:	39 07       	cpc	r19, r25
    2f4c:	21 f0       	breq	.+8      	; 0x2f56 <_uartInit+0x48>
    2f4e:	c9 01       	movw	r24, r18
    2f50:	60 e0       	ldi	r22, 0x00	; 0
    2f52:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <pin_make_input>
    2f56:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f58:	98 89       	ldd	r25, Y+16	; 0x10
    2f5a:	6f ef       	ldi	r22, 0xFF	; 255
    2f5c:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <pin_make_input>
    2f60:	88 85       	ldd	r24, Y+8	; 0x08
    2f62:	81 60       	ori	r24, 0x01	; 1
    2f64:	88 87       	std	Y+8, r24	; 0x08
    2f66:	88 85       	ldd	r24, Y+8	; 0x08
    2f68:	8b 7f       	andi	r24, 0xFB	; 251
    2f6a:	88 87       	std	Y+8, r24	; 0x08
    2f6c:	88 85       	ldd	r24, Y+8	; 0x08
    2f6e:	8d 7f       	andi	r24, 0xFD	; 253
    2f70:	88 87       	std	Y+8, r24	; 0x08
    2f72:	89 85       	ldd	r24, Y+9	; 0x09
    2f74:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f76:	04 96       	adiw	r24, 0x04	; 4
    2f78:	fc 01       	movw	r30, r24
    2f7a:	25 91       	lpm	r18, Z+
    2f7c:	34 91       	lpm	r19, Z+
    2f7e:	ce 01       	movw	r24, r28
    2f80:	b8 01       	movw	r22, r16
    2f82:	a7 01       	movw	r20, r14
    2f84:	f9 01       	movw	r30, r18
    2f86:	09 95       	icall
    2f88:	df be       	out	0x3f, r13	; 63
    2f8a:	df 91       	pop	r29
    2f8c:	cf 91       	pop	r28
    2f8e:	1f 91       	pop	r17
    2f90:	0f 91       	pop	r16
    2f92:	ff 90       	pop	r15
    2f94:	ef 90       	pop	r14
    2f96:	df 90       	pop	r13
    2f98:	08 95       	ret

00002f9a <__uartHWSetBaudRate>:
    2f9a:	bf 92       	push	r11
    2f9c:	cf 92       	push	r12
    2f9e:	df 92       	push	r13
    2fa0:	ef 92       	push	r14
    2fa2:	ff 92       	push	r15
    2fa4:	0f 93       	push	r16
    2fa6:	1f 93       	push	r17
    2fa8:	cf 93       	push	r28
    2faa:	df 93       	push	r29
    2fac:	7a 01       	movw	r14, r20
    2fae:	8b 01       	movw	r16, r22
    2fb0:	ec 01       	movw	r28, r24
    2fb2:	bf b6       	in	r11, 0x3f	; 63
    2fb4:	f8 94       	cli
    2fb6:	4f 3f       	cpi	r20, 0xFF	; 255
    2fb8:	8f ef       	ldi	r24, 0xFF	; 255
    2fba:	58 07       	cpc	r21, r24
    2fbc:	8f ef       	ldi	r24, 0xFF	; 255
    2fbe:	68 07       	cpc	r22, r24
    2fc0:	8f ef       	ldi	r24, 0xFF	; 255
    2fc2:	78 07       	cpc	r23, r24
    2fc4:	21 f4       	brne	.+8      	; 0x2fce <__uartHWSetBaudRate+0x34>
    2fc6:	a1 e0       	ldi	r26, 0x01	; 1
    2fc8:	ca 2e       	mov	r12, r26
    2fca:	d1 2c       	mov	r13, r1
    2fcc:	24 c0       	rjmp	.+72     	; 0x3016 <__uartHWSetBaudRate+0x7c>
    2fce:	cb 01       	movw	r24, r22
    2fd0:	ba 01       	movw	r22, r20
    2fd2:	f3 e0       	ldi	r31, 0x03	; 3
    2fd4:	66 0f       	add	r22, r22
    2fd6:	77 1f       	adc	r23, r23
    2fd8:	88 1f       	adc	r24, r24
    2fda:	99 1f       	adc	r25, r25
    2fdc:	fa 95       	dec	r31
    2fde:	d1 f7       	brne	.-12     	; 0x2fd4 <__uartHWSetBaudRate+0x3a>
    2fe0:	20 91 1c 02 	lds	r18, 0x021C
    2fe4:	30 91 1d 02 	lds	r19, 0x021D
    2fe8:	40 91 1e 02 	lds	r20, 0x021E
    2fec:	50 91 1f 02 	lds	r21, 0x021F
    2ff0:	62 0f       	add	r22, r18
    2ff2:	73 1f       	adc	r23, r19
    2ff4:	84 1f       	adc	r24, r20
    2ff6:	95 1f       	adc	r25, r21
    2ff8:	a8 01       	movw	r20, r16
    2ffa:	97 01       	movw	r18, r14
    2ffc:	e4 e0       	ldi	r30, 0x04	; 4
    2ffe:	22 0f       	add	r18, r18
    3000:	33 1f       	adc	r19, r19
    3002:	44 1f       	adc	r20, r20
    3004:	55 1f       	adc	r21, r21
    3006:	ea 95       	dec	r30
    3008:	d1 f7       	brne	.-12     	; 0x2ffe <__uartHWSetBaudRate+0x64>
    300a:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__udivmodsi4>
    300e:	69 01       	movw	r12, r18
    3010:	08 94       	sec
    3012:	c1 08       	sbc	r12, r1
    3014:	d1 08       	sbc	r13, r1
    3016:	98 a9       	ldd	r25, Y+48	; 0x30
    3018:	99 23       	and	r25, r25
    301a:	c9 f1       	breq	.+114    	; 0x308e <__uartHWSetBaudRate+0xf4>
    301c:	ec a1       	ldd	r30, Y+36	; 0x24
    301e:	fd a1       	ldd	r31, Y+37	; 0x25
    3020:	80 81       	ld	r24, Z
    3022:	90 95       	com	r25
    3024:	89 23       	and	r24, r25
    3026:	80 83       	st	Z, r24
    3028:	8f ef       	ldi	r24, 0xFF	; 255
    302a:	e8 16       	cp	r14, r24
    302c:	8f ef       	ldi	r24, 0xFF	; 255
    302e:	f8 06       	cpc	r15, r24
    3030:	8f ef       	ldi	r24, 0xFF	; 255
    3032:	08 07       	cpc	r16, r24
    3034:	8f ef       	ldi	r24, 0xFF	; 255
    3036:	18 07       	cpc	r17, r24
    3038:	19 f4       	brne	.+6      	; 0x3040 <__uartHWSetBaudRate+0xa6>
    303a:	21 e0       	ldi	r18, 0x01	; 1
    303c:	30 e0       	ldi	r19, 0x00	; 0
    303e:	1d c0       	rjmp	.+58     	; 0x307a <__uartHWSetBaudRate+0xe0>
    3040:	32 e0       	ldi	r19, 0x02	; 2
    3042:	ee 0c       	add	r14, r14
    3044:	ff 1c       	adc	r15, r15
    3046:	00 1f       	adc	r16, r16
    3048:	11 1f       	adc	r17, r17
    304a:	3a 95       	dec	r19
    304c:	d1 f7       	brne	.-12     	; 0x3042 <__uartHWSetBaudRate+0xa8>
    304e:	60 91 1c 02 	lds	r22, 0x021C
    3052:	70 91 1d 02 	lds	r23, 0x021D
    3056:	80 91 1e 02 	lds	r24, 0x021E
    305a:	90 91 1f 02 	lds	r25, 0x021F
    305e:	6e 0d       	add	r22, r14
    3060:	7f 1d       	adc	r23, r15
    3062:	80 1f       	adc	r24, r16
    3064:	91 1f       	adc	r25, r17
    3066:	ee 0c       	add	r14, r14
    3068:	ff 1c       	adc	r15, r15
    306a:	00 1f       	adc	r16, r16
    306c:	11 1f       	adc	r17, r17
    306e:	a8 01       	movw	r20, r16
    3070:	97 01       	movw	r18, r14
    3072:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__udivmodsi4>
    3076:	21 50       	subi	r18, 0x01	; 1
    3078:	30 40       	sbci	r19, 0x00	; 0
    307a:	2c 15       	cp	r18, r12
    307c:	3d 05       	cpc	r19, r13
    307e:	38 f0       	brcs	.+14     	; 0x308e <__uartHWSetBaudRate+0xf4>
    3080:	ec a1       	ldd	r30, Y+36	; 0x24
    3082:	fd a1       	ldd	r31, Y+37	; 0x25
    3084:	80 81       	ld	r24, Z
    3086:	98 a9       	ldd	r25, Y+48	; 0x30
    3088:	89 2b       	or	r24, r25
    308a:	80 83       	st	Z, r24
    308c:	69 01       	movw	r12, r18
    308e:	e8 a5       	ldd	r30, Y+40	; 0x28
    3090:	f9 a5       	ldd	r31, Y+41	; 0x29
    3092:	c0 82       	st	Z, r12
    3094:	ea a5       	ldd	r30, Y+42	; 0x2a
    3096:	fb a5       	ldd	r31, Y+43	; 0x2b
    3098:	d0 82       	st	Z, r13
    309a:	bf be       	out	0x3f, r11	; 63
    309c:	df 91       	pop	r29
    309e:	cf 91       	pop	r28
    30a0:	1f 91       	pop	r17
    30a2:	0f 91       	pop	r16
    30a4:	ff 90       	pop	r15
    30a6:	ef 90       	pop	r14
    30a8:	df 90       	pop	r13
    30aa:	cf 90       	pop	r12
    30ac:	bf 90       	pop	r11
    30ae:	08 95       	ret

000030b0 <__uartHWOff>:
    30b0:	dc 01       	movw	r26, r24
    30b2:	96 96       	adiw	r26, 0x26	; 38
    30b4:	ed 91       	ld	r30, X+
    30b6:	fc 91       	ld	r31, X
    30b8:	97 97       	sbiw	r26, 0x27	; 39
    30ba:	80 81       	ld	r24, Z
    30bc:	87 72       	andi	r24, 0x27	; 39
    30be:	80 83       	st	Z, r24
    30c0:	d0 96       	adiw	r26, 0x30	; 48
    30c2:	9c 91       	ld	r25, X
    30c4:	d0 97       	sbiw	r26, 0x30	; 48
    30c6:	99 23       	and	r25, r25
    30c8:	41 f0       	breq	.+16     	; 0x30da <__uartHWOff+0x2a>
    30ca:	94 96       	adiw	r26, 0x24	; 36
    30cc:	ed 91       	ld	r30, X+
    30ce:	fc 91       	ld	r31, X
    30d0:	95 97       	sbiw	r26, 0x25	; 37
    30d2:	80 81       	ld	r24, Z
    30d4:	90 95       	com	r25
    30d6:	89 23       	and	r24, r25
    30d8:	80 83       	st	Z, r24
    30da:	08 95       	ret

000030dc <oneWireReceiveMode>:
    30dc:	dc 01       	movw	r26, r24
    30de:	57 96       	adiw	r26, 0x17	; 23
    30e0:	8c 91       	ld	r24, X
    30e2:	57 97       	sbiw	r26, 0x17	; 23
    30e4:	88 23       	and	r24, r24
    30e6:	71 f0       	breq	.+28     	; 0x3104 <oneWireReceiveMode+0x28>
    30e8:	96 96       	adiw	r26, 0x26	; 38
    30ea:	ed 91       	ld	r30, X+
    30ec:	fc 91       	ld	r31, X
    30ee:	97 97       	sbiw	r26, 0x27	; 39
    30f0:	80 81       	ld	r24, Z
    30f2:	87 7b       	andi	r24, 0xB7	; 183
    30f4:	80 83       	st	Z, r24
    30f6:	96 96       	adiw	r26, 0x26	; 38
    30f8:	ed 91       	ld	r30, X+
    30fa:	fc 91       	ld	r31, X
    30fc:	97 97       	sbiw	r26, 0x27	; 39
    30fe:	80 81       	ld	r24, Z
    3100:	80 69       	ori	r24, 0x90	; 144
    3102:	80 83       	st	Z, r24
    3104:	08 95       	ret

00003106 <__uartHWStartXmit>:
    3106:	dc 01       	movw	r26, r24
    3108:	9c 96       	adiw	r26, 0x2c	; 44
    310a:	ed 91       	ld	r30, X+
    310c:	fc 91       	ld	r31, X
    310e:	9d 97       	sbiw	r26, 0x2d	; 45
    3110:	60 83       	st	Z, r22
    3112:	08 95       	ret

00003114 <startXmitMode>:
    3114:	dc 01       	movw	r26, r24
    3116:	57 96       	adiw	r26, 0x17	; 23
    3118:	8c 91       	ld	r24, X
    311a:	57 97       	sbiw	r26, 0x17	; 23
    311c:	88 23       	and	r24, r24
    311e:	71 f0       	breq	.+28     	; 0x313c <startXmitMode+0x28>
    3120:	96 96       	adiw	r26, 0x26	; 38
    3122:	ed 91       	ld	r30, X+
    3124:	fc 91       	ld	r31, X
    3126:	97 97       	sbiw	r26, 0x27	; 39
    3128:	80 81       	ld	r24, Z
    312a:	8f 76       	andi	r24, 0x6F	; 111
    312c:	80 83       	st	Z, r24
    312e:	96 96       	adiw	r26, 0x26	; 38
    3130:	ed 91       	ld	r30, X+
    3132:	fc 91       	ld	r31, X
    3134:	97 97       	sbiw	r26, 0x27	; 39
    3136:	80 81       	ld	r24, Z
    3138:	88 64       	ori	r24, 0x48	; 72
    313a:	80 83       	st	Z, r24
    313c:	08 95       	ret

0000313e <__uartHWInit>:
    313e:	cf 93       	push	r28
    3140:	df 93       	push	r29
    3142:	ec 01       	movw	r28, r24
    3144:	0e 94 7b 17 	call	0x2ef6	; 0x2ef6 <_uartSetBaudRate>
    3148:	8f 89       	ldd	r24, Y+23	; 0x17
    314a:	88 23       	and	r24, r24
    314c:	11 f0       	breq	.+4      	; 0x3152 <__uartHWInit+0x14>
    314e:	20 e9       	ldi	r18, 0x90	; 144
    3150:	0c c0       	rjmp	.+24     	; 0x316a <__uartHWInit+0x2c>
    3152:	8d 85       	ldd	r24, Y+13	; 0x0d
    3154:	9e 85       	ldd	r25, Y+14	; 0x0e
    3156:	89 2b       	or	r24, r25
    3158:	11 f0       	breq	.+4      	; 0x315e <__uartHWInit+0x20>
    315a:	20 e9       	ldi	r18, 0x90	; 144
    315c:	01 c0       	rjmp	.+2      	; 0x3160 <__uartHWInit+0x22>
    315e:	20 e0       	ldi	r18, 0x00	; 0
    3160:	8f 85       	ldd	r24, Y+15	; 0x0f
    3162:	98 89       	ldd	r25, Y+16	; 0x10
    3164:	89 2b       	or	r24, r25
    3166:	09 f0       	breq	.+2      	; 0x316a <__uartHWInit+0x2c>
    3168:	28 64       	ori	r18, 0x48	; 72
    316a:	ee a1       	ldd	r30, Y+38	; 0x26
    316c:	ff a1       	ldd	r31, Y+39	; 0x27
    316e:	20 83       	st	Z, r18
    3170:	df 91       	pop	r29
    3172:	cf 91       	pop	r28
    3174:	08 95       	ret

00003176 <__uartReceiveService>:
    3176:	dc 01       	movw	r26, r24
    3178:	26 2f       	mov	r18, r22
    317a:	14 96       	adiw	r26, 0x04	; 4
    317c:	8d 91       	ld	r24, X+
    317e:	9c 91       	ld	r25, X
    3180:	15 97       	sbiw	r26, 0x05	; 5
    3182:	89 2b       	or	r24, r25
    3184:	59 f0       	breq	.+22     	; 0x319c <__uartReceiveService+0x26>
    3186:	14 96       	adiw	r26, 0x04	; 4
    3188:	ed 91       	ld	r30, X+
    318a:	fc 91       	ld	r31, X
    318c:	15 97       	sbiw	r26, 0x05	; 5
    318e:	16 96       	adiw	r26, 0x06	; 6
    3190:	6d 91       	ld	r22, X+
    3192:	7c 91       	ld	r23, X
    3194:	17 97       	sbiw	r26, 0x07	; 7
    3196:	82 2f       	mov	r24, r18
    3198:	09 95       	icall
    319a:	08 95       	ret
    319c:	90 96       	adiw	r26, 0x20	; 32
    319e:	ed 91       	ld	r30, X+
    31a0:	fc 91       	ld	r31, X
    31a2:	91 97       	sbiw	r26, 0x21	; 33
    31a4:	cd 01       	movw	r24, r26
    31a6:	09 95       	icall
    31a8:	08 95       	ret

000031aa <__uartGetByte>:
    31aa:	fc 01       	movw	r30, r24
    31ac:	22 a1       	ldd	r18, Z+34	; 0x22
    31ae:	33 a1       	ldd	r19, Z+35	; 0x23
    31b0:	f9 01       	movw	r30, r18
    31b2:	09 95       	icall
    31b4:	08 95       	ret

000031b6 <__uartGetByteUnbuffered>:
    31b6:	fc 01       	movw	r30, r24
    31b8:	4f b7       	in	r20, 0x3f	; 63
    31ba:	f8 94       	cli
    31bc:	23 85       	ldd	r18, Z+11	; 0x0b
    31be:	34 85       	ldd	r19, Z+12	; 0x0c
    31c0:	8f ef       	ldi	r24, 0xFF	; 255
    31c2:	9f ef       	ldi	r25, 0xFF	; 255
    31c4:	94 87       	std	Z+12, r25	; 0x0c
    31c6:	83 87       	std	Z+11, r24	; 0x0b
    31c8:	4f bf       	out	0x3f, r20	; 63
    31ca:	c9 01       	movw	r24, r18
    31cc:	08 95       	ret

000031ce <__uartReceiveUnbuffered>:
    31ce:	fc 01       	movw	r30, r24
    31d0:	83 85       	ldd	r24, Z+11	; 0x0b
    31d2:	94 85       	ldd	r25, Z+12	; 0x0c
    31d4:	8f 5f       	subi	r24, 0xFF	; 255
    31d6:	9f 4f       	sbci	r25, 0xFF	; 255
    31d8:	29 f4       	brne	.+10     	; 0x31e4 <__uartReceiveUnbuffered+0x16>
    31da:	86 2f       	mov	r24, r22
    31dc:	90 e0       	ldi	r25, 0x00	; 0
    31de:	94 87       	std	Z+12, r25	; 0x0c
    31e0:	83 87       	std	Z+11, r24	; 0x0b
    31e2:	08 95       	ret
    31e4:	80 85       	ldd	r24, Z+8	; 0x08
    31e6:	84 60       	ori	r24, 0x04	; 4
    31e8:	80 87       	std	Z+8, r24	; 0x08
    31ea:	85 ef       	ldi	r24, 0xF5	; 245
    31ec:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <setError>
    31f0:	08 95       	ret

000031f2 <_uartStartXmit>:
    31f2:	dc 01       	movw	r26, r24
    31f4:	19 96       	adiw	r26, 0x09	; 9
    31f6:	8d 91       	ld	r24, X+
    31f8:	9c 91       	ld	r25, X
    31fa:	1a 97       	sbiw	r26, 0x0a	; 10
    31fc:	02 96       	adiw	r24, 0x02	; 2
    31fe:	fc 01       	movw	r30, r24
    3200:	25 91       	lpm	r18, Z+
    3202:	34 91       	lpm	r19, Z+
    3204:	cd 01       	movw	r24, r26
    3206:	f9 01       	movw	r30, r18
    3208:	09 95       	icall
    320a:	08 95       	ret

0000320c <_uartTransmitBlockStart>:
    320c:	cf 93       	push	r28
    320e:	df 93       	push	r29
    3210:	ec 01       	movw	r28, r24
    3212:	88 85       	ldd	r24, Y+8	; 0x08
    3214:	8e 7f       	andi	r24, 0xFE	; 254
    3216:	88 87       	std	Y+8, r24	; 0x08
    3218:	e8 8d       	ldd	r30, Y+24	; 0x18
    321a:	f9 8d       	ldd	r31, Y+25	; 0x19
    321c:	30 97       	sbiw	r30, 0x00	; 0
    321e:	21 f0       	breq	.+8      	; 0x3228 <_uartTransmitBlockStart+0x1c>
    3220:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3222:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3224:	6f ef       	ldi	r22, 0xFF	; 255
    3226:	09 95       	icall
    3228:	e9 85       	ldd	r30, Y+9	; 0x09
    322a:	fa 85       	ldd	r31, Y+10	; 0x0a
    322c:	38 96       	adiw	r30, 0x08	; 8
    322e:	25 91       	lpm	r18, Z+
    3230:	34 91       	lpm	r19, Z+
    3232:	21 15       	cp	r18, r1
    3234:	31 05       	cpc	r19, r1
    3236:	19 f0       	breq	.+6      	; 0x323e <_uartTransmitBlockStart+0x32>
    3238:	ce 01       	movw	r24, r28
    323a:	f9 01       	movw	r30, r18
    323c:	09 95       	icall
    323e:	df 91       	pop	r29
    3240:	cf 91       	pop	r28
    3242:	08 95       	ret

00003244 <_uartTransmitBlockEnd>:
    3244:	cf 93       	push	r28
    3246:	df 93       	push	r29
    3248:	ec 01       	movw	r28, r24
    324a:	88 85       	ldd	r24, Y+8	; 0x08
    324c:	81 60       	ori	r24, 0x01	; 1
    324e:	88 87       	std	Y+8, r24	; 0x08
    3250:	e9 85       	ldd	r30, Y+9	; 0x09
    3252:	fa 85       	ldd	r31, Y+10	; 0x0a
    3254:	3a 96       	adiw	r30, 0x0a	; 10
    3256:	25 91       	lpm	r18, Z+
    3258:	34 91       	lpm	r19, Z+
    325a:	21 15       	cp	r18, r1
    325c:	31 05       	cpc	r19, r1
    325e:	19 f0       	breq	.+6      	; 0x3266 <_uartTransmitBlockEnd+0x22>
    3260:	ce 01       	movw	r24, r28
    3262:	f9 01       	movw	r30, r18
    3264:	09 95       	icall
    3266:	e8 8d       	ldd	r30, Y+24	; 0x18
    3268:	f9 8d       	ldd	r31, Y+25	; 0x19
    326a:	30 97       	sbiw	r30, 0x00	; 0
    326c:	21 f0       	breq	.+8      	; 0x3276 <_uartTransmitBlockEnd+0x32>
    326e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3270:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3272:	60 e0       	ldi	r22, 0x00	; 0
    3274:	09 95       	icall
    3276:	df 91       	pop	r29
    3278:	cf 91       	pop	r28
    327a:	08 95       	ret

0000327c <_uartSendBuffer>:
    327c:	ef 92       	push	r14
    327e:	ff 92       	push	r15
    3280:	0f 93       	push	r16
    3282:	1f 93       	push	r17
    3284:	cf 93       	push	r28
    3286:	df 93       	push	r29
    3288:	8c 01       	movw	r16, r24
    328a:	7b 01       	movw	r14, r22
    328c:	ea 01       	movw	r28, r20
    328e:	0b c0       	rjmp	.+22     	; 0x32a6 <_uartSendBuffer+0x2a>
    3290:	d7 01       	movw	r26, r14
    3292:	6d 91       	ld	r22, X+
    3294:	7d 01       	movw	r14, r26
    3296:	d8 01       	movw	r26, r16
    3298:	5c 96       	adiw	r26, 0x1c	; 28
    329a:	ed 91       	ld	r30, X+
    329c:	fc 91       	ld	r31, X
    329e:	5d 97       	sbiw	r26, 0x1d	; 29
    32a0:	c8 01       	movw	r24, r16
    32a2:	09 95       	icall
    32a4:	21 97       	sbiw	r28, 0x01	; 1
    32a6:	20 97       	sbiw	r28, 0x00	; 0
    32a8:	99 f7       	brne	.-26     	; 0x3290 <_uartSendBuffer+0x14>
    32aa:	df 91       	pop	r29
    32ac:	cf 91       	pop	r28
    32ae:	1f 91       	pop	r17
    32b0:	0f 91       	pop	r16
    32b2:	ff 90       	pop	r15
    32b4:	ef 90       	pop	r14
    32b6:	08 95       	ret

000032b8 <_uartSendByte>:
    32b8:	1f 93       	push	r17
    32ba:	fc 01       	movw	r30, r24
    32bc:	16 2f       	mov	r17, r22
    32be:	24 8d       	ldd	r18, Z+28	; 0x1c
    32c0:	35 8d       	ldd	r19, Z+29	; 0x1d
    32c2:	f9 01       	movw	r30, r18
    32c4:	09 95       	icall
    32c6:	81 2f       	mov	r24, r17
    32c8:	1f 91       	pop	r17
    32ca:	08 95       	ret

000032cc <__uartTransmitService>:
    32cc:	fc 01       	movw	r30, r24
    32ce:	26 8d       	ldd	r18, Z+30	; 0x1e
    32d0:	37 8d       	ldd	r19, Z+31	; 0x1f
    32d2:	f9 01       	movw	r30, r18
    32d4:	09 95       	icall
    32d6:	08 95       	ret

000032d8 <__uartSendNextUnbuffered>:
    32d8:	1f 93       	push	r17
    32da:	1f b7       	in	r17, 0x3f	; 63
    32dc:	f8 94       	cli
    32de:	0e 94 22 19 	call	0x3244	; 0x3244 <_uartTransmitBlockEnd>
    32e2:	1f bf       	out	0x3f, r17	; 63
    32e4:	1f 91       	pop	r17
    32e6:	08 95       	ret

000032e8 <__uartSendUnbuffered>:
    32e8:	0f 93       	push	r16
    32ea:	1f 93       	push	r17
    32ec:	cf 93       	push	r28
    32ee:	df 93       	push	r29
    32f0:	06 2f       	mov	r16, r22
    32f2:	ec 01       	movw	r28, r24
    32f4:	02 c0       	rjmp	.+4      	; 0x32fa <__uartSendUnbuffered+0x12>
    32f6:	0e 94 17 1a 	call	0x342e	; 0x342e <breathe>
    32fa:	88 85       	ldd	r24, Y+8	; 0x08
    32fc:	80 ff       	sbrs	r24, 0
    32fe:	fb cf       	rjmp	.-10     	; 0x32f6 <__uartSendUnbuffered+0xe>
    3300:	1f b7       	in	r17, 0x3f	; 63
    3302:	f8 94       	cli
    3304:	ce 01       	movw	r24, r28
    3306:	0e 94 06 19 	call	0x320c	; 0x320c <_uartTransmitBlockStart>
    330a:	ce 01       	movw	r24, r28
    330c:	60 2f       	mov	r22, r16
    330e:	0e 94 f9 18 	call	0x31f2	; 0x31f2 <_uartStartXmit>
    3312:	1f bf       	out	0x3f, r17	; 63
    3314:	df 91       	pop	r29
    3316:	cf 91       	pop	r28
    3318:	1f 91       	pop	r17
    331a:	0f 91       	pop	r16
    331c:	08 95       	ret

0000331e <uartReceivePollingMode>:
    331e:	dc 01       	movw	r26, r24
    3320:	96 96       	adiw	r26, 0x26	; 38
    3322:	ed 91       	ld	r30, X+
    3324:	fc 91       	ld	r31, X
    3326:	97 97       	sbiw	r26, 0x27	; 39
    3328:	66 23       	and	r22, r22
    332a:	19 f0       	breq	.+6      	; 0x3332 <uartReceivePollingMode+0x14>
    332c:	80 81       	ld	r24, Z
    332e:	8f 77       	andi	r24, 0x7F	; 127
    3330:	02 c0       	rjmp	.+4      	; 0x3336 <uartReceivePollingMode+0x18>
    3332:	80 81       	ld	r24, Z
    3334:	80 68       	ori	r24, 0x80	; 128
    3336:	80 83       	st	Z, r24
    3338:	08 95       	ret

0000333a <uartPollByte>:
    333a:	dc 01       	movw	r26, r24
    333c:	94 96       	adiw	r26, 0x24	; 36
    333e:	ed 91       	ld	r30, X+
    3340:	fc 91       	ld	r31, X
    3342:	95 97       	sbiw	r26, 0x25	; 37
    3344:	80 81       	ld	r24, Z
    3346:	87 fd       	sbrc	r24, 7
    3348:	03 c0       	rjmp	.+6      	; 0x3350 <uartPollByte+0x16>
    334a:	2f ef       	ldi	r18, 0xFF	; 255
    334c:	3f ef       	ldi	r19, 0xFF	; 255
    334e:	07 c0       	rjmp	.+14     	; 0x335e <uartPollByte+0x24>
    3350:	9c 96       	adiw	r26, 0x2c	; 44
    3352:	ed 91       	ld	r30, X+
    3354:	fc 91       	ld	r31, X
    3356:	9d 97       	sbiw	r26, 0x2d	; 45
    3358:	80 81       	ld	r24, Z
    335a:	28 2f       	mov	r18, r24
    335c:	30 e0       	ldi	r19, 0x00	; 0
    335e:	c9 01       	movw	r24, r18
    3360:	08 95       	ret

00003362 <_ZN6Stream5printEc>:
    3362:	1f 93       	push	r17
    3364:	cf 93       	push	r28
    3366:	df 93       	push	r29
    3368:	ec 01       	movw	r28, r24
    336a:	16 2f       	mov	r17, r22
    336c:	6a 30       	cpi	r22, 0x0A	; 10
    336e:	39 f4       	brne	.+14     	; 0x337e <_ZN6Stream5printEc+0x1c>
    3370:	e8 81       	ld	r30, Y
    3372:	f9 81       	ldd	r31, Y+1	; 0x01
    3374:	01 90       	ld	r0, Z+
    3376:	f0 81       	ld	r31, Z
    3378:	e0 2d       	mov	r30, r0
    337a:	6d e0       	ldi	r22, 0x0D	; 13
    337c:	09 95       	icall
    337e:	e8 81       	ld	r30, Y
    3380:	f9 81       	ldd	r31, Y+1	; 0x01
    3382:	01 90       	ld	r0, Z+
    3384:	f0 81       	ld	r31, Z
    3386:	e0 2d       	mov	r30, r0
    3388:	ce 01       	movw	r24, r28
    338a:	61 2f       	mov	r22, r17
    338c:	09 95       	icall
    338e:	ce 01       	movw	r24, r28
    3390:	df 91       	pop	r29
    3392:	cf 91       	pop	r28
    3394:	1f 91       	pop	r17
    3396:	08 95       	ret

00003398 <clockHasElapsed>:
    3398:	0f 93       	push	r16
    339a:	1f 93       	push	r17
    339c:	00 e0       	ldi	r16, 0x00	; 0
    339e:	10 e0       	ldi	r17, 0x00	; 0
    33a0:	0e 94 d5 19 	call	0x33aa	; 0x33aa <clockHasElapsedGetOverflow>
    33a4:	1f 91       	pop	r17
    33a6:	0f 91       	pop	r16
    33a8:	08 95       	ret

000033aa <clockHasElapsedGetOverflow>:
    33aa:	8f 92       	push	r8
    33ac:	9f 92       	push	r9
    33ae:	af 92       	push	r10
    33b0:	bf 92       	push	r11
    33b2:	cf 92       	push	r12
    33b4:	df 92       	push	r13
    33b6:	ef 92       	push	r14
    33b8:	ff 92       	push	r15
    33ba:	0f 93       	push	r16
    33bc:	1f 93       	push	r17
    33be:	cf 93       	push	r28
    33c0:	df 93       	push	r29
    33c2:	6b 01       	movw	r12, r22
    33c4:	7c 01       	movw	r14, r24
    33c6:	49 01       	movw	r8, r18
    33c8:	5a 01       	movw	r10, r20
    33ca:	e8 01       	movw	r28, r16
    33cc:	0e 94 07 0f 	call	0x1e0e	; 0x1e0e <clockGetus>
    33d0:	6c 19       	sub	r22, r12
    33d2:	7d 09       	sbc	r23, r13
    33d4:	8e 09       	sbc	r24, r14
    33d6:	9f 09       	sbc	r25, r15
    33d8:	68 15       	cp	r22, r8
    33da:	79 05       	cpc	r23, r9
    33dc:	8a 05       	cpc	r24, r10
    33de:	9b 05       	cpc	r25, r11
    33e0:	68 f0       	brcs	.+26     	; 0x33fc <clockHasElapsedGetOverflow+0x52>
    33e2:	01 15       	cp	r16, r1
    33e4:	11 05       	cpc	r17, r1
    33e6:	41 f0       	breq	.+16     	; 0x33f8 <clockHasElapsedGetOverflow+0x4e>
    33e8:	68 19       	sub	r22, r8
    33ea:	79 09       	sbc	r23, r9
    33ec:	8a 09       	sbc	r24, r10
    33ee:	9b 09       	sbc	r25, r11
    33f0:	68 83       	st	Y, r22
    33f2:	79 83       	std	Y+1, r23	; 0x01
    33f4:	8a 83       	std	Y+2, r24	; 0x02
    33f6:	9b 83       	std	Y+3, r25	; 0x03
    33f8:	8f ef       	ldi	r24, 0xFF	; 255
    33fa:	0c c0       	rjmp	.+24     	; 0x3414 <clockHasElapsedGetOverflow+0x6a>
    33fc:	01 15       	cp	r16, r1
    33fe:	11 05       	cpc	r17, r1
    3400:	41 f0       	breq	.+16     	; 0x3412 <clockHasElapsedGetOverflow+0x68>
    3402:	86 1a       	sub	r8, r22
    3404:	97 0a       	sbc	r9, r23
    3406:	a8 0a       	sbc	r10, r24
    3408:	b9 0a       	sbc	r11, r25
    340a:	88 82       	st	Y, r8
    340c:	99 82       	std	Y+1, r9	; 0x01
    340e:	aa 82       	std	Y+2, r10	; 0x02
    3410:	bb 82       	std	Y+3, r11	; 0x03
    3412:	80 e0       	ldi	r24, 0x00	; 0
    3414:	df 91       	pop	r29
    3416:	cf 91       	pop	r28
    3418:	1f 91       	pop	r17
    341a:	0f 91       	pop	r16
    341c:	ff 90       	pop	r15
    341e:	ef 90       	pop	r14
    3420:	df 90       	pop	r13
    3422:	cf 90       	pop	r12
    3424:	bf 90       	pop	r11
    3426:	af 90       	pop	r10
    3428:	9f 90       	pop	r9
    342a:	8f 90       	pop	r8
    342c:	08 95       	ret

0000342e <breathe>:
    342e:	8f b7       	in	r24, 0x3f	; 63
    3430:	78 94       	sei
	...
    343e:	00 00       	nop
    3440:	8f bf       	out	0x3f, r24	; 63
    3442:	08 95       	ret

00003444 <pin_low>:
    3444:	cf 93       	push	r28
    3446:	df 93       	push	r29
    3448:	9c 01       	movw	r18, r24
    344a:	00 97       	sbiw	r24, 0x00	; 0
    344c:	e9 f0       	breq	.+58     	; 0x3488 <pin_low+0x44>
    344e:	fc 01       	movw	r30, r24
    3450:	85 91       	lpm	r24, Z+
    3452:	94 91       	lpm	r25, Z+
    3454:	fc 01       	movw	r30, r24
    3456:	a5 91       	lpm	r26, Z+
    3458:	b4 91       	lpm	r27, Z+
    345a:	02 96       	adiw	r24, 0x02	; 2
    345c:	fc 01       	movw	r30, r24
    345e:	c5 91       	lpm	r28, Z+
    3460:	d4 91       	lpm	r29, Z+
    3462:	2e 5f       	subi	r18, 0xFE	; 254
    3464:	3f 4f       	sbci	r19, 0xFF	; 255
    3466:	f9 01       	movw	r30, r18
    3468:	24 91       	lpm	r18, Z+
    346a:	88 81       	ld	r24, Y
    346c:	82 23       	and	r24, r18
    346e:	49 f0       	breq	.+18     	; 0x3482 <pin_low+0x3e>
    3470:	9f b7       	in	r25, 0x3f	; 63
    3472:	f8 94       	cli
    3474:	8c 91       	ld	r24, X
    3476:	20 95       	com	r18
    3478:	82 23       	and	r24, r18
    347a:	8c 93       	st	X, r24
    347c:	9f bf       	out	0x3f, r25	; 63
    347e:	00 00       	nop
    3480:	03 c0       	rjmp	.+6      	; 0x3488 <pin_low+0x44>
    3482:	87 ef       	ldi	r24, 0xF7	; 247
    3484:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <setError>
    3488:	df 91       	pop	r29
    348a:	cf 91       	pop	r28
    348c:	08 95       	ret

0000348e <pin_high>:
    348e:	cf 93       	push	r28
    3490:	df 93       	push	r29
    3492:	9c 01       	movw	r18, r24
    3494:	00 97       	sbiw	r24, 0x00	; 0
    3496:	e1 f0       	breq	.+56     	; 0x34d0 <pin_high+0x42>
    3498:	fc 01       	movw	r30, r24
    349a:	85 91       	lpm	r24, Z+
    349c:	94 91       	lpm	r25, Z+
    349e:	fc 01       	movw	r30, r24
    34a0:	a5 91       	lpm	r26, Z+
    34a2:	b4 91       	lpm	r27, Z+
    34a4:	02 96       	adiw	r24, 0x02	; 2
    34a6:	fc 01       	movw	r30, r24
    34a8:	c5 91       	lpm	r28, Z+
    34aa:	d4 91       	lpm	r29, Z+
    34ac:	2e 5f       	subi	r18, 0xFE	; 254
    34ae:	3f 4f       	sbci	r19, 0xFF	; 255
    34b0:	f9 01       	movw	r30, r18
    34b2:	24 91       	lpm	r18, Z+
    34b4:	88 81       	ld	r24, Y
    34b6:	82 23       	and	r24, r18
    34b8:	41 f0       	breq	.+16     	; 0x34ca <pin_high+0x3c>
    34ba:	9f b7       	in	r25, 0x3f	; 63
    34bc:	f8 94       	cli
    34be:	8c 91       	ld	r24, X
    34c0:	82 2b       	or	r24, r18
    34c2:	8c 93       	st	X, r24
    34c4:	9f bf       	out	0x3f, r25	; 63
    34c6:	00 00       	nop
    34c8:	03 c0       	rjmp	.+6      	; 0x34d0 <pin_high+0x42>
    34ca:	87 ef       	ldi	r24, 0xF7	; 247
    34cc:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <setError>
    34d0:	df 91       	pop	r29
    34d2:	cf 91       	pop	r28
    34d4:	08 95       	ret

000034d6 <pin_set>:
    34d6:	66 23       	and	r22, r22
    34d8:	19 f0       	breq	.+6      	; 0x34e0 <pin_set+0xa>
    34da:	0e 94 47 1a 	call	0x348e	; 0x348e <pin_high>
    34de:	08 95       	ret
    34e0:	0e 94 22 1a 	call	0x3444	; 0x3444 <pin_low>
    34e4:	08 95       	ret

000034e6 <__scheduleUpdate>:
    34e6:	2f 92       	push	r2
    34e8:	3f 92       	push	r3
    34ea:	4f 92       	push	r4
    34ec:	5f 92       	push	r5
    34ee:	6f 92       	push	r6
    34f0:	7f 92       	push	r7
    34f2:	8f 92       	push	r8
    34f4:	9f 92       	push	r9
    34f6:	af 92       	push	r10
    34f8:	bf 92       	push	r11
    34fa:	cf 92       	push	r12
    34fc:	df 92       	push	r13
    34fe:	ef 92       	push	r14
    3500:	ff 92       	push	r15
    3502:	0f 93       	push	r16
    3504:	1f 93       	push	r17
    3506:	df 93       	push	r29
    3508:	cf 93       	push	r28
    350a:	cd b7       	in	r28, 0x3d	; 61
    350c:	de b7       	in	r29, 0x3e	; 62
    350e:	27 97       	sbiw	r28, 0x07	; 7
    3510:	0f b6       	in	r0, 0x3f	; 63
    3512:	f8 94       	cli
    3514:	de bf       	out	0x3e, r29	; 62
    3516:	0f be       	out	0x3f, r0	; 63
    3518:	cd bf       	out	0x3d, r28	; 61
    351a:	80 91 73 00 	lds	r24, 0x0073
    351e:	8b 7f       	andi	r24, 0xFB	; 251
    3520:	80 93 73 00 	sts	0x0073, r24
    3524:	2f b7       	in	r18, 0x3f	; 63
    3526:	2f 83       	std	Y+7, r18	; 0x07
    3528:	78 94       	sei
    352a:	8f ef       	ldi	r24, 0xFF	; 255
    352c:	80 93 3c 04 	sts	0x043C, r24
    3530:	10 92 3d 04 	sts	0x043D, r1
    3534:	80 91 03 03 	lds	r24, 0x0303
    3538:	a8 2f       	mov	r26, r24
    353a:	b0 e0       	ldi	r27, 0x00	; 0
    353c:	11 97       	sbiw	r26, 0x01	; 1
    353e:	be 83       	std	Y+6, r27	; 0x06
    3540:	ad 83       	std	Y+5, r26	; 0x05
    3542:	ed e0       	ldi	r30, 0x0D	; 13
    3544:	f0 e0       	ldi	r31, 0x00	; 0
    3546:	ae 9f       	mul	r26, r30
    3548:	50 01       	movw	r10, r0
    354a:	af 9f       	mul	r26, r31
    354c:	b0 0c       	add	r11, r0
    354e:	be 9f       	mul	r27, r30
    3550:	b0 0c       	add	r11, r0
    3552:	11 24       	eor	r1, r1
    3554:	2f e2       	ldi	r18, 0x2F	; 47
    3556:	34 e0       	ldi	r19, 0x04	; 4
    3558:	a2 0e       	add	r10, r18
    355a:	b3 1e       	adc	r11, r19
    355c:	66 24       	eor	r6, r6
    355e:	77 24       	eor	r7, r7
    3560:	43 01       	movw	r8, r6
    3562:	5a c0       	rjmp	.+180    	; 0x3618 <__scheduleUpdate+0x132>
    3564:	d5 01       	movw	r26, r10
    3566:	8c 91       	ld	r24, X
    3568:	88 23       	and	r24, r24
    356a:	09 f4       	brne	.+2      	; 0x356e <__scheduleUpdate+0x88>
    356c:	4c c0       	rjmp	.+152    	; 0x3606 <__scheduleUpdate+0x120>
    356e:	19 96       	adiw	r26, 0x09	; 9
    3570:	2d 90       	ld	r2, X+
    3572:	3d 90       	ld	r3, X+
    3574:	4d 90       	ld	r4, X+
    3576:	5c 90       	ld	r5, X
    3578:	1c 97       	sbiw	r26, 0x0c	; 12
    357a:	15 96       	adiw	r26, 0x05	; 5
    357c:	cd 90       	ld	r12, X+
    357e:	dd 90       	ld	r13, X+
    3580:	ed 90       	ld	r14, X+
    3582:	fc 90       	ld	r15, X
    3584:	18 97       	sbiw	r26, 0x08	; 8
    3586:	c2 01       	movw	r24, r4
    3588:	b1 01       	movw	r22, r2
    358a:	a7 01       	movw	r20, r14
    358c:	96 01       	movw	r18, r12
    358e:	8e 01       	movw	r16, r28
    3590:	0f 5f       	subi	r16, 0xFF	; 255
    3592:	1f 4f       	sbci	r17, 0xFF	; 255
    3594:	0e 94 d5 19 	call	0x33aa	; 0x33aa <clockHasElapsedGetOverflow>
    3598:	88 23       	and	r24, r24
    359a:	19 f1       	breq	.+70     	; 0x35e2 <__scheduleUpdate+0xfc>
    359c:	d5 01       	movw	r26, r10
    359e:	11 96       	adiw	r26, 0x01	; 1
    35a0:	ed 91       	ld	r30, X+
    35a2:	fc 91       	ld	r31, X
    35a4:	12 97       	sbiw	r26, 0x02	; 2
    35a6:	13 96       	adiw	r26, 0x03	; 3
    35a8:	8d 91       	ld	r24, X+
    35aa:	9c 91       	ld	r25, X
    35ac:	14 97       	sbiw	r26, 0x04	; 4
    35ae:	1c 92       	st	X, r1
    35b0:	20 91 3e 04 	lds	r18, 0x043E
    35b4:	30 91 3f 04 	lds	r19, 0x043F
    35b8:	21 50       	subi	r18, 0x01	; 1
    35ba:	30 40       	sbci	r19, 0x00	; 0
    35bc:	30 93 3f 04 	sts	0x043F, r19
    35c0:	20 93 3e 04 	sts	0x043E, r18
    35c4:	c2 0c       	add	r12, r2
    35c6:	d3 1c       	adc	r13, r3
    35c8:	e4 1c       	adc	r14, r4
    35ca:	f5 1c       	adc	r15, r5
    35cc:	09 81       	ldd	r16, Y+1	; 0x01
    35ce:	1a 81       	ldd	r17, Y+2	; 0x02
    35d0:	2b 81       	ldd	r18, Y+3	; 0x03
    35d2:	3c 81       	ldd	r19, Y+4	; 0x04
    35d4:	b7 01       	movw	r22, r14
    35d6:	a6 01       	movw	r20, r12
    35d8:	09 95       	icall
    35da:	bf ef       	ldi	r27, 0xFF	; 255
    35dc:	b0 93 3d 04 	sts	0x043D, r27
    35e0:	12 c0       	rjmp	.+36     	; 0x3606 <__scheduleUpdate+0x120>
    35e2:	61 14       	cp	r6, r1
    35e4:	71 04       	cpc	r7, r1
    35e6:	81 04       	cpc	r8, r1
    35e8:	91 04       	cpc	r9, r1
    35ea:	49 f0       	breq	.+18     	; 0x35fe <__scheduleUpdate+0x118>
    35ec:	89 81       	ldd	r24, Y+1	; 0x01
    35ee:	9a 81       	ldd	r25, Y+2	; 0x02
    35f0:	ab 81       	ldd	r26, Y+3	; 0x03
    35f2:	bc 81       	ldd	r27, Y+4	; 0x04
    35f4:	86 15       	cp	r24, r6
    35f6:	97 05       	cpc	r25, r7
    35f8:	a8 05       	cpc	r26, r8
    35fa:	b9 05       	cpc	r27, r9
    35fc:	20 f4       	brcc	.+8      	; 0x3606 <__scheduleUpdate+0x120>
    35fe:	69 80       	ldd	r6, Y+1	; 0x01
    3600:	7a 80       	ldd	r7, Y+2	; 0x02
    3602:	8b 80       	ldd	r8, Y+3	; 0x03
    3604:	9c 80       	ldd	r9, Y+4	; 0x04
    3606:	ed 81       	ldd	r30, Y+5	; 0x05
    3608:	fe 81       	ldd	r31, Y+6	; 0x06
    360a:	31 97       	sbiw	r30, 0x01	; 1
    360c:	fe 83       	std	Y+6, r31	; 0x06
    360e:	ed 83       	std	Y+5, r30	; 0x05
    3610:	23 ef       	ldi	r18, 0xF3	; 243
    3612:	3f ef       	ldi	r19, 0xFF	; 255
    3614:	a2 0e       	add	r10, r18
    3616:	b3 1e       	adc	r11, r19
    3618:	8d 81       	ldd	r24, Y+5	; 0x05
    361a:	9e 81       	ldd	r25, Y+6	; 0x06
    361c:	8f 5f       	subi	r24, 0xFF	; 255
    361e:	9f 4f       	sbci	r25, 0xFF	; 255
    3620:	09 f0       	breq	.+2      	; 0x3624 <__scheduleUpdate+0x13e>
    3622:	a0 cf       	rjmp	.-192    	; 0x3564 <__scheduleUpdate+0x7e>
    3624:	80 91 3d 04 	lds	r24, 0x043D
    3628:	88 23       	and	r24, r24
    362a:	09 f0       	breq	.+2      	; 0x362e <__scheduleUpdate+0x148>
    362c:	81 cf       	rjmp	.-254    	; 0x3530 <__scheduleUpdate+0x4a>
    362e:	10 92 3c 04 	sts	0x043C, r1
    3632:	80 91 3e 04 	lds	r24, 0x043E
    3636:	90 91 3f 04 	lds	r25, 0x043F
    363a:	18 16       	cp	r1, r24
    363c:	19 06       	cpc	r1, r25
    363e:	4c f5       	brge	.+82     	; 0x3692 <__scheduleUpdate+0x1ac>
    3640:	20 91 24 01 	lds	r18, 0x0124
    3644:	30 91 25 01 	lds	r19, 0x0125
    3648:	d4 01       	movw	r26, r8
    364a:	c3 01       	movw	r24, r6
    364c:	88 0f       	add	r24, r24
    364e:	99 1f       	adc	r25, r25
    3650:	aa 1f       	adc	r26, r26
    3652:	bb 1f       	adc	r27, r27
    3654:	81 30       	cpi	r24, 0x01	; 1
    3656:	ea ef       	ldi	r30, 0xFA	; 250
    3658:	9e 07       	cpc	r25, r30
    365a:	e0 e0       	ldi	r30, 0x00	; 0
    365c:	ae 07       	cpc	r26, r30
    365e:	e0 e0       	ldi	r30, 0x00	; 0
    3660:	be 07       	cpc	r27, r30
    3662:	20 f0       	brcs	.+8      	; 0x366c <__scheduleUpdate+0x186>
    3664:	80 e0       	ldi	r24, 0x00	; 0
    3666:	9a ef       	ldi	r25, 0xFA	; 250
    3668:	a0 e0       	ldi	r26, 0x00	; 0
    366a:	b0 e0       	ldi	r27, 0x00	; 0
    366c:	82 0f       	add	r24, r18
    366e:	93 1f       	adc	r25, r19
    3670:	02 c0       	rjmp	.+4      	; 0x3676 <__scheduleUpdate+0x190>
    3672:	80 50       	subi	r24, 0x00	; 0
    3674:	9a 4f       	sbci	r25, 0xFA	; 250
    3676:	fa ef       	ldi	r31, 0xFA	; 250
    3678:	80 30       	cpi	r24, 0x00	; 0
    367a:	9f 07       	cpc	r25, r31
    367c:	d0 f7       	brcc	.-12     	; 0x3672 <__scheduleUpdate+0x18c>
    367e:	90 93 2b 01 	sts	0x012B, r25
    3682:	80 93 2a 01 	sts	0x012A, r24
    3686:	d2 9a       	sbi	0x1a, 2	; 26
    3688:	80 91 73 00 	lds	r24, 0x0073
    368c:	84 60       	ori	r24, 0x04	; 4
    368e:	80 93 73 00 	sts	0x0073, r24
    3692:	2f 81       	ldd	r18, Y+7	; 0x07
    3694:	2f bf       	out	0x3f, r18	; 63
    3696:	27 96       	adiw	r28, 0x07	; 7
    3698:	0f b6       	in	r0, 0x3f	; 63
    369a:	f8 94       	cli
    369c:	de bf       	out	0x3e, r29	; 62
    369e:	0f be       	out	0x3f, r0	; 63
    36a0:	cd bf       	out	0x3d, r28	; 61
    36a2:	cf 91       	pop	r28
    36a4:	df 91       	pop	r29
    36a6:	1f 91       	pop	r17
    36a8:	0f 91       	pop	r16
    36aa:	ff 90       	pop	r15
    36ac:	ef 90       	pop	r14
    36ae:	df 90       	pop	r13
    36b0:	cf 90       	pop	r12
    36b2:	bf 90       	pop	r11
    36b4:	af 90       	pop	r10
    36b6:	9f 90       	pop	r9
    36b8:	8f 90       	pop	r8
    36ba:	7f 90       	pop	r7
    36bc:	6f 90       	pop	r6
    36be:	5f 90       	pop	r5
    36c0:	4f 90       	pop	r4
    36c2:	3f 90       	pop	r3
    36c4:	2f 90       	pop	r2
    36c6:	08 95       	ret

000036c8 <__vector_48>:
    36c8:	1f 92       	push	r1
    36ca:	0f 92       	push	r0
    36cc:	0f b6       	in	r0, 0x3f	; 63
    36ce:	0f 92       	push	r0
    36d0:	11 24       	eor	r1, r1
    36d2:	2f 93       	push	r18
    36d4:	3f 93       	push	r19
    36d6:	4f 93       	push	r20
    36d8:	5f 93       	push	r21
    36da:	6f 93       	push	r22
    36dc:	7f 93       	push	r23
    36de:	8f 93       	push	r24
    36e0:	9f 93       	push	r25
    36e2:	af 93       	push	r26
    36e4:	bf 93       	push	r27
    36e6:	ef 93       	push	r30
    36e8:	ff 93       	push	r31
    36ea:	0e 94 73 1a 	call	0x34e6	; 0x34e6 <__scheduleUpdate>
    36ee:	ff 91       	pop	r31
    36f0:	ef 91       	pop	r30
    36f2:	bf 91       	pop	r27
    36f4:	af 91       	pop	r26
    36f6:	9f 91       	pop	r25
    36f8:	8f 91       	pop	r24
    36fa:	7f 91       	pop	r23
    36fc:	6f 91       	pop	r22
    36fe:	5f 91       	pop	r21
    3700:	4f 91       	pop	r20
    3702:	3f 91       	pop	r19
    3704:	2f 91       	pop	r18
    3706:	0f 90       	pop	r0
    3708:	0f be       	out	0x3f, r0	; 63
    370a:	0f 90       	pop	r0
    370c:	1f 90       	pop	r1
    370e:	18 95       	reti

00003710 <scheduleJob>:
    3710:	2f 92       	push	r2
    3712:	3f 92       	push	r3
    3714:	4f 92       	push	r4
    3716:	5f 92       	push	r5
    3718:	6f 92       	push	r6
    371a:	7f 92       	push	r7
    371c:	8f 92       	push	r8
    371e:	9f 92       	push	r9
    3720:	af 92       	push	r10
    3722:	bf 92       	push	r11
    3724:	cf 92       	push	r12
    3726:	df 92       	push	r13
    3728:	ef 92       	push	r14
    372a:	ff 92       	push	r15
    372c:	0f 93       	push	r16
    372e:	1f 93       	push	r17
    3730:	df 93       	push	r29
    3732:	cf 93       	push	r28
    3734:	00 d0       	rcall	.+0      	; 0x3736 <scheduleJob+0x26>
    3736:	00 d0       	rcall	.+0      	; 0x3738 <scheduleJob+0x28>
    3738:	cd b7       	in	r28, 0x3d	; 61
    373a:	de b7       	in	r29, 0x3e	; 62
    373c:	1c 01       	movw	r2, r24
    373e:	2b 01       	movw	r4, r22
    3740:	49 01       	movw	r8, r18
    3742:	5a 01       	movw	r10, r20
    3744:	67 01       	movw	r12, r14
    3746:	78 01       	movw	r14, r16
    3748:	88 ee       	ldi	r24, 0xE8	; 232
    374a:	c8 16       	cp	r12, r24
    374c:	83 e0       	ldi	r24, 0x03	; 3
    374e:	d8 06       	cpc	r13, r24
    3750:	80 e0       	ldi	r24, 0x00	; 0
    3752:	e8 06       	cpc	r14, r24
    3754:	80 e0       	ldi	r24, 0x00	; 0
    3756:	f8 06       	cpc	r15, r24
    3758:	38 f4       	brcc	.+14     	; 0x3768 <scheduleJob+0x58>
    375a:	80 91 3c 04 	lds	r24, 0x043C
    375e:	88 23       	and	r24, r24
    3760:	c1 f1       	breq	.+112    	; 0x37d2 <scheduleJob+0xc2>
    3762:	8f ef       	ldi	r24, 0xFF	; 255
    3764:	80 93 3d 04 	sts	0x043D, r24
    3768:	6f b7       	in	r22, 0x3f	; 63
    376a:	f8 94       	cli
    376c:	80 91 03 03 	lds	r24, 0x0303
    3770:	48 2f       	mov	r20, r24
    3772:	50 e0       	ldi	r21, 0x00	; 0
    3774:	af e2       	ldi	r26, 0x2F	; 47
    3776:	b4 e0       	ldi	r27, 0x04	; 4
    3778:	20 e0       	ldi	r18, 0x00	; 0
    377a:	30 e0       	ldi	r19, 0x00	; 0
    377c:	20 c0       	rjmp	.+64     	; 0x37be <scheduleJob+0xae>
    377e:	fd 01       	movw	r30, r26
    3780:	8c 91       	ld	r24, X
    3782:	1d 96       	adiw	r26, 0x0d	; 13
    3784:	88 23       	and	r24, r24
    3786:	c9 f4       	brne	.+50     	; 0x37ba <scheduleJob+0xaa>
    3788:	8f ef       	ldi	r24, 0xFF	; 255
    378a:	80 83       	st	Z, r24
    378c:	32 82       	std	Z+2, r3	; 0x02
    378e:	21 82       	std	Z+1, r2	; 0x01
    3790:	54 82       	std	Z+4, r5	; 0x04
    3792:	43 82       	std	Z+3, r4	; 0x03
    3794:	81 86       	std	Z+9, r8	; 0x09
    3796:	92 86       	std	Z+10, r9	; 0x0a
    3798:	a3 86       	std	Z+11, r10	; 0x0b
    379a:	b4 86       	std	Z+12, r11	; 0x0c
    379c:	c5 82       	std	Z+5, r12	; 0x05
    379e:	d6 82       	std	Z+6, r13	; 0x06
    37a0:	e7 82       	std	Z+7, r14	; 0x07
    37a2:	f0 86       	std	Z+8, r15	; 0x08
    37a4:	80 91 3e 04 	lds	r24, 0x043E
    37a8:	90 91 3f 04 	lds	r25, 0x043F
    37ac:	01 96       	adiw	r24, 0x01	; 1
    37ae:	90 93 3f 04 	sts	0x043F, r25
    37b2:	80 93 3e 04 	sts	0x043E, r24
    37b6:	8f ef       	ldi	r24, 0xFF	; 255
    37b8:	06 c0       	rjmp	.+12     	; 0x37c6 <scheduleJob+0xb6>
    37ba:	2f 5f       	subi	r18, 0xFF	; 255
    37bc:	3f 4f       	sbci	r19, 0xFF	; 255
    37be:	24 17       	cp	r18, r20
    37c0:	35 07       	cpc	r19, r21
    37c2:	ec f2       	brlt	.-70     	; 0x377e <scheduleJob+0x6e>
    37c4:	80 e0       	ldi	r24, 0x00	; 0
    37c6:	6f bf       	out	0x3f, r22	; 63
    37c8:	88 23       	and	r24, r24
    37ca:	f1 f4       	brne	.+60     	; 0x3808 <scheduleJob+0xf8>
    37cc:	8f ef       	ldi	r24, 0xFF	; 255
    37ce:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <setError>
    37d2:	3e 01       	movw	r6, r28
    37d4:	08 94       	sec
    37d6:	61 1c       	adc	r6, r1
    37d8:	71 1c       	adc	r7, r1
    37da:	c5 01       	movw	r24, r10
    37dc:	b4 01       	movw	r22, r8
    37de:	a7 01       	movw	r20, r14
    37e0:	96 01       	movw	r18, r12
    37e2:	83 01       	movw	r16, r6
    37e4:	0e 94 d5 19 	call	0x33aa	; 0x33aa <clockHasElapsedGetOverflow>
    37e8:	88 23       	and	r24, r24
    37ea:	b9 f3       	breq	.-18     	; 0x37da <scheduleJob+0xca>
    37ec:	c8 0c       	add	r12, r8
    37ee:	d9 1c       	adc	r13, r9
    37f0:	ea 1c       	adc	r14, r10
    37f2:	fb 1c       	adc	r15, r11
    37f4:	09 81       	ldd	r16, Y+1	; 0x01
    37f6:	1a 81       	ldd	r17, Y+2	; 0x02
    37f8:	2b 81       	ldd	r18, Y+3	; 0x03
    37fa:	3c 81       	ldd	r19, Y+4	; 0x04
    37fc:	c2 01       	movw	r24, r4
    37fe:	b7 01       	movw	r22, r14
    3800:	a6 01       	movw	r20, r12
    3802:	f1 01       	movw	r30, r2
    3804:	09 95       	icall
    3806:	06 c0       	rjmp	.+12     	; 0x3814 <scheduleJob+0x104>
    3808:	80 91 3c 04 	lds	r24, 0x043C
    380c:	88 23       	and	r24, r24
    380e:	11 f4       	brne	.+4      	; 0x3814 <scheduleJob+0x104>
    3810:	0e 94 73 1a 	call	0x34e6	; 0x34e6 <__scheduleUpdate>
    3814:	0f 90       	pop	r0
    3816:	0f 90       	pop	r0
    3818:	0f 90       	pop	r0
    381a:	0f 90       	pop	r0
    381c:	cf 91       	pop	r28
    381e:	df 91       	pop	r29
    3820:	1f 91       	pop	r17
    3822:	0f 91       	pop	r16
    3824:	ff 90       	pop	r15
    3826:	ef 90       	pop	r14
    3828:	df 90       	pop	r13
    382a:	cf 90       	pop	r12
    382c:	bf 90       	pop	r11
    382e:	af 90       	pop	r10
    3830:	9f 90       	pop	r9
    3832:	8f 90       	pop	r8
    3834:	7f 90       	pop	r7
    3836:	6f 90       	pop	r6
    3838:	5f 90       	pop	r5
    383a:	4f 90       	pop	r4
    383c:	3f 90       	pop	r3
    383e:	2f 90       	pop	r2
    3840:	08 95       	ret

00003842 <malloc>:
    3842:	cf 93       	push	r28
    3844:	df 93       	push	r29
    3846:	bc 01       	movw	r22, r24
    3848:	82 30       	cpi	r24, 0x02	; 2
    384a:	91 05       	cpc	r25, r1
    384c:	10 f4       	brcc	.+4      	; 0x3852 <malloc+0x10>
    384e:	62 e0       	ldi	r22, 0x02	; 2
    3850:	70 e0       	ldi	r23, 0x00	; 0
    3852:	a0 91 4a 04 	lds	r26, 0x044A
    3856:	b0 91 4b 04 	lds	r27, 0x044B
    385a:	ed 01       	movw	r28, r26
    385c:	e0 e0       	ldi	r30, 0x00	; 0
    385e:	f0 e0       	ldi	r31, 0x00	; 0
    3860:	40 e0       	ldi	r20, 0x00	; 0
    3862:	50 e0       	ldi	r21, 0x00	; 0
    3864:	21 c0       	rjmp	.+66     	; 0x38a8 <malloc+0x66>
    3866:	88 81       	ld	r24, Y
    3868:	99 81       	ldd	r25, Y+1	; 0x01
    386a:	86 17       	cp	r24, r22
    386c:	97 07       	cpc	r25, r23
    386e:	69 f4       	brne	.+26     	; 0x388a <malloc+0x48>
    3870:	8a 81       	ldd	r24, Y+2	; 0x02
    3872:	9b 81       	ldd	r25, Y+3	; 0x03
    3874:	30 97       	sbiw	r30, 0x00	; 0
    3876:	19 f0       	breq	.+6      	; 0x387e <malloc+0x3c>
    3878:	93 83       	std	Z+3, r25	; 0x03
    387a:	82 83       	std	Z+2, r24	; 0x02
    387c:	04 c0       	rjmp	.+8      	; 0x3886 <malloc+0x44>
    387e:	90 93 4b 04 	sts	0x044B, r25
    3882:	80 93 4a 04 	sts	0x044A, r24
    3886:	fe 01       	movw	r30, r28
    3888:	34 c0       	rjmp	.+104    	; 0x38f2 <malloc+0xb0>
    388a:	68 17       	cp	r22, r24
    388c:	79 07       	cpc	r23, r25
    388e:	38 f4       	brcc	.+14     	; 0x389e <malloc+0x5c>
    3890:	41 15       	cp	r20, r1
    3892:	51 05       	cpc	r21, r1
    3894:	19 f0       	breq	.+6      	; 0x389c <malloc+0x5a>
    3896:	84 17       	cp	r24, r20
    3898:	95 07       	cpc	r25, r21
    389a:	08 f4       	brcc	.+2      	; 0x389e <malloc+0x5c>
    389c:	ac 01       	movw	r20, r24
    389e:	fe 01       	movw	r30, r28
    38a0:	8a 81       	ldd	r24, Y+2	; 0x02
    38a2:	9b 81       	ldd	r25, Y+3	; 0x03
    38a4:	9c 01       	movw	r18, r24
    38a6:	e9 01       	movw	r28, r18
    38a8:	20 97       	sbiw	r28, 0x00	; 0
    38aa:	e9 f6       	brne	.-70     	; 0x3866 <malloc+0x24>
    38ac:	41 15       	cp	r20, r1
    38ae:	51 05       	cpc	r21, r1
    38b0:	a9 f1       	breq	.+106    	; 0x391c <malloc+0xda>
    38b2:	ca 01       	movw	r24, r20
    38b4:	86 1b       	sub	r24, r22
    38b6:	97 0b       	sbc	r25, r23
    38b8:	04 97       	sbiw	r24, 0x04	; 4
    38ba:	08 f4       	brcc	.+2      	; 0x38be <malloc+0x7c>
    38bc:	ba 01       	movw	r22, r20
    38be:	e0 e0       	ldi	r30, 0x00	; 0
    38c0:	f0 e0       	ldi	r31, 0x00	; 0
    38c2:	2a c0       	rjmp	.+84     	; 0x3918 <malloc+0xd6>
    38c4:	8d 91       	ld	r24, X+
    38c6:	9c 91       	ld	r25, X
    38c8:	11 97       	sbiw	r26, 0x01	; 1
    38ca:	84 17       	cp	r24, r20
    38cc:	95 07       	cpc	r25, r21
    38ce:	f9 f4       	brne	.+62     	; 0x390e <malloc+0xcc>
    38d0:	64 17       	cp	r22, r20
    38d2:	75 07       	cpc	r23, r21
    38d4:	81 f4       	brne	.+32     	; 0x38f6 <malloc+0xb4>
    38d6:	12 96       	adiw	r26, 0x02	; 2
    38d8:	8d 91       	ld	r24, X+
    38da:	9c 91       	ld	r25, X
    38dc:	13 97       	sbiw	r26, 0x03	; 3
    38de:	30 97       	sbiw	r30, 0x00	; 0
    38e0:	19 f0       	breq	.+6      	; 0x38e8 <malloc+0xa6>
    38e2:	93 83       	std	Z+3, r25	; 0x03
    38e4:	82 83       	std	Z+2, r24	; 0x02
    38e6:	04 c0       	rjmp	.+8      	; 0x38f0 <malloc+0xae>
    38e8:	90 93 4b 04 	sts	0x044B, r25
    38ec:	80 93 4a 04 	sts	0x044A, r24
    38f0:	fd 01       	movw	r30, r26
    38f2:	32 96       	adiw	r30, 0x02	; 2
    38f4:	4f c0       	rjmp	.+158    	; 0x3994 <malloc+0x152>
    38f6:	ca 01       	movw	r24, r20
    38f8:	86 1b       	sub	r24, r22
    38fa:	97 0b       	sbc	r25, r23
    38fc:	fd 01       	movw	r30, r26
    38fe:	e8 0f       	add	r30, r24
    3900:	f9 1f       	adc	r31, r25
    3902:	61 93       	st	Z+, r22
    3904:	71 93       	st	Z+, r23
    3906:	02 97       	sbiw	r24, 0x02	; 2
    3908:	8d 93       	st	X+, r24
    390a:	9c 93       	st	X, r25
    390c:	43 c0       	rjmp	.+134    	; 0x3994 <malloc+0x152>
    390e:	fd 01       	movw	r30, r26
    3910:	82 81       	ldd	r24, Z+2	; 0x02
    3912:	93 81       	ldd	r25, Z+3	; 0x03
    3914:	9c 01       	movw	r18, r24
    3916:	d9 01       	movw	r26, r18
    3918:	10 97       	sbiw	r26, 0x00	; 0
    391a:	a1 f6       	brne	.-88     	; 0x38c4 <malloc+0x82>
    391c:	80 91 48 04 	lds	r24, 0x0448
    3920:	90 91 49 04 	lds	r25, 0x0449
    3924:	89 2b       	or	r24, r25
    3926:	41 f4       	brne	.+16     	; 0x3938 <malloc+0xf6>
    3928:	80 91 06 03 	lds	r24, 0x0306
    392c:	90 91 07 03 	lds	r25, 0x0307
    3930:	90 93 49 04 	sts	0x0449, r25
    3934:	80 93 48 04 	sts	0x0448, r24
    3938:	40 91 08 03 	lds	r20, 0x0308
    393c:	50 91 09 03 	lds	r21, 0x0309
    3940:	41 15       	cp	r20, r1
    3942:	51 05       	cpc	r21, r1
    3944:	41 f4       	brne	.+16     	; 0x3956 <malloc+0x114>
    3946:	4d b7       	in	r20, 0x3d	; 61
    3948:	5e b7       	in	r21, 0x3e	; 62
    394a:	80 91 04 03 	lds	r24, 0x0304
    394e:	90 91 05 03 	lds	r25, 0x0305
    3952:	48 1b       	sub	r20, r24
    3954:	59 0b       	sbc	r21, r25
    3956:	20 91 48 04 	lds	r18, 0x0448
    395a:	30 91 49 04 	lds	r19, 0x0449
    395e:	24 17       	cp	r18, r20
    3960:	35 07       	cpc	r19, r21
    3962:	b0 f4       	brcc	.+44     	; 0x3990 <malloc+0x14e>
    3964:	ca 01       	movw	r24, r20
    3966:	82 1b       	sub	r24, r18
    3968:	93 0b       	sbc	r25, r19
    396a:	86 17       	cp	r24, r22
    396c:	97 07       	cpc	r25, r23
    396e:	80 f0       	brcs	.+32     	; 0x3990 <malloc+0x14e>
    3970:	ab 01       	movw	r20, r22
    3972:	4e 5f       	subi	r20, 0xFE	; 254
    3974:	5f 4f       	sbci	r21, 0xFF	; 255
    3976:	84 17       	cp	r24, r20
    3978:	95 07       	cpc	r25, r21
    397a:	50 f0       	brcs	.+20     	; 0x3990 <malloc+0x14e>
    397c:	42 0f       	add	r20, r18
    397e:	53 1f       	adc	r21, r19
    3980:	50 93 49 04 	sts	0x0449, r21
    3984:	40 93 48 04 	sts	0x0448, r20
    3988:	f9 01       	movw	r30, r18
    398a:	61 93       	st	Z+, r22
    398c:	71 93       	st	Z+, r23
    398e:	02 c0       	rjmp	.+4      	; 0x3994 <malloc+0x152>
    3990:	e0 e0       	ldi	r30, 0x00	; 0
    3992:	f0 e0       	ldi	r31, 0x00	; 0
    3994:	cf 01       	movw	r24, r30
    3996:	df 91       	pop	r29
    3998:	cf 91       	pop	r28
    399a:	08 95       	ret

0000399c <free>:
    399c:	cf 93       	push	r28
    399e:	df 93       	push	r29
    39a0:	00 97       	sbiw	r24, 0x00	; 0
    39a2:	09 f4       	brne	.+2      	; 0x39a6 <free+0xa>
    39a4:	50 c0       	rjmp	.+160    	; 0x3a46 <free+0xaa>
    39a6:	ec 01       	movw	r28, r24
    39a8:	22 97       	sbiw	r28, 0x02	; 2
    39aa:	1b 82       	std	Y+3, r1	; 0x03
    39ac:	1a 82       	std	Y+2, r1	; 0x02
    39ae:	a0 91 4a 04 	lds	r26, 0x044A
    39b2:	b0 91 4b 04 	lds	r27, 0x044B
    39b6:	10 97       	sbiw	r26, 0x00	; 0
    39b8:	09 f1       	breq	.+66     	; 0x39fc <free+0x60>
    39ba:	40 e0       	ldi	r20, 0x00	; 0
    39bc:	50 e0       	ldi	r21, 0x00	; 0
    39be:	ac 17       	cp	r26, r28
    39c0:	bd 07       	cpc	r27, r29
    39c2:	08 f1       	brcs	.+66     	; 0x3a06 <free+0x6a>
    39c4:	bb 83       	std	Y+3, r27	; 0x03
    39c6:	aa 83       	std	Y+2, r26	; 0x02
    39c8:	fe 01       	movw	r30, r28
    39ca:	21 91       	ld	r18, Z+
    39cc:	31 91       	ld	r19, Z+
    39ce:	e2 0f       	add	r30, r18
    39d0:	f3 1f       	adc	r31, r19
    39d2:	ae 17       	cp	r26, r30
    39d4:	bf 07       	cpc	r27, r31
    39d6:	79 f4       	brne	.+30     	; 0x39f6 <free+0x5a>
    39d8:	8d 91       	ld	r24, X+
    39da:	9c 91       	ld	r25, X
    39dc:	11 97       	sbiw	r26, 0x01	; 1
    39de:	28 0f       	add	r18, r24
    39e0:	39 1f       	adc	r19, r25
    39e2:	2e 5f       	subi	r18, 0xFE	; 254
    39e4:	3f 4f       	sbci	r19, 0xFF	; 255
    39e6:	39 83       	std	Y+1, r19	; 0x01
    39e8:	28 83       	st	Y, r18
    39ea:	12 96       	adiw	r26, 0x02	; 2
    39ec:	8d 91       	ld	r24, X+
    39ee:	9c 91       	ld	r25, X
    39f0:	13 97       	sbiw	r26, 0x03	; 3
    39f2:	9b 83       	std	Y+3, r25	; 0x03
    39f4:	8a 83       	std	Y+2, r24	; 0x02
    39f6:	41 15       	cp	r20, r1
    39f8:	51 05       	cpc	r21, r1
    39fa:	71 f4       	brne	.+28     	; 0x3a18 <free+0x7c>
    39fc:	d0 93 4b 04 	sts	0x044B, r29
    3a00:	c0 93 4a 04 	sts	0x044A, r28
    3a04:	20 c0       	rjmp	.+64     	; 0x3a46 <free+0xaa>
    3a06:	12 96       	adiw	r26, 0x02	; 2
    3a08:	8d 91       	ld	r24, X+
    3a0a:	9c 91       	ld	r25, X
    3a0c:	13 97       	sbiw	r26, 0x03	; 3
    3a0e:	ad 01       	movw	r20, r26
    3a10:	00 97       	sbiw	r24, 0x00	; 0
    3a12:	11 f0       	breq	.+4      	; 0x3a18 <free+0x7c>
    3a14:	dc 01       	movw	r26, r24
    3a16:	d3 cf       	rjmp	.-90     	; 0x39be <free+0x22>
    3a18:	fa 01       	movw	r30, r20
    3a1a:	d3 83       	std	Z+3, r29	; 0x03
    3a1c:	c2 83       	std	Z+2, r28	; 0x02
    3a1e:	21 91       	ld	r18, Z+
    3a20:	31 91       	ld	r19, Z+
    3a22:	e2 0f       	add	r30, r18
    3a24:	f3 1f       	adc	r31, r19
    3a26:	ce 17       	cp	r28, r30
    3a28:	df 07       	cpc	r29, r31
    3a2a:	69 f4       	brne	.+26     	; 0x3a46 <free+0xaa>
    3a2c:	88 81       	ld	r24, Y
    3a2e:	99 81       	ldd	r25, Y+1	; 0x01
    3a30:	28 0f       	add	r18, r24
    3a32:	39 1f       	adc	r19, r25
    3a34:	2e 5f       	subi	r18, 0xFE	; 254
    3a36:	3f 4f       	sbci	r19, 0xFF	; 255
    3a38:	fa 01       	movw	r30, r20
    3a3a:	31 83       	std	Z+1, r19	; 0x01
    3a3c:	20 83       	st	Z, r18
    3a3e:	8a 81       	ldd	r24, Y+2	; 0x02
    3a40:	9b 81       	ldd	r25, Y+3	; 0x03
    3a42:	93 83       	std	Z+3, r25	; 0x03
    3a44:	82 83       	std	Z+2, r24	; 0x02
    3a46:	df 91       	pop	r29
    3a48:	cf 91       	pop	r28
    3a4a:	08 95       	ret

00003a4c <exit>:
    3a4c:	f8 94       	cli
    3a4e:	0c 94 0f 20 	jmp	0x401e	; 0x401e <__do_global_dtors>

00003a52 <__ftoa_engine>:
    3a52:	28 30       	cpi	r18, 0x08	; 8
    3a54:	08 f0       	brcs	.+2      	; 0x3a58 <__ftoa_engine+0x6>
    3a56:	27 e0       	ldi	r18, 0x07	; 7
    3a58:	33 27       	eor	r19, r19
    3a5a:	da 01       	movw	r26, r20
    3a5c:	99 0f       	add	r25, r25
    3a5e:	31 1d       	adc	r19, r1
    3a60:	87 fd       	sbrc	r24, 7
    3a62:	91 60       	ori	r25, 0x01	; 1
    3a64:	00 96       	adiw	r24, 0x00	; 0
    3a66:	61 05       	cpc	r22, r1
    3a68:	71 05       	cpc	r23, r1
    3a6a:	39 f4       	brne	.+14     	; 0x3a7a <__ftoa_engine+0x28>
    3a6c:	32 60       	ori	r19, 0x02	; 2
    3a6e:	2e 5f       	subi	r18, 0xFE	; 254
    3a70:	3d 93       	st	X+, r19
    3a72:	30 e3       	ldi	r19, 0x30	; 48
    3a74:	2a 95       	dec	r18
    3a76:	e1 f7       	brne	.-8      	; 0x3a70 <__ftoa_engine+0x1e>
    3a78:	08 95       	ret
    3a7a:	9f 3f       	cpi	r25, 0xFF	; 255
    3a7c:	30 f0       	brcs	.+12     	; 0x3a8a <__ftoa_engine+0x38>
    3a7e:	80 38       	cpi	r24, 0x80	; 128
    3a80:	71 05       	cpc	r23, r1
    3a82:	61 05       	cpc	r22, r1
    3a84:	09 f0       	breq	.+2      	; 0x3a88 <__ftoa_engine+0x36>
    3a86:	3c 5f       	subi	r19, 0xFC	; 252
    3a88:	3c 5f       	subi	r19, 0xFC	; 252
    3a8a:	3d 93       	st	X+, r19
    3a8c:	91 30       	cpi	r25, 0x01	; 1
    3a8e:	08 f0       	brcs	.+2      	; 0x3a92 <__ftoa_engine+0x40>
    3a90:	80 68       	ori	r24, 0x80	; 128
    3a92:	91 1d       	adc	r25, r1
    3a94:	df 93       	push	r29
    3a96:	cf 93       	push	r28
    3a98:	1f 93       	push	r17
    3a9a:	0f 93       	push	r16
    3a9c:	ff 92       	push	r15
    3a9e:	ef 92       	push	r14
    3aa0:	19 2f       	mov	r17, r25
    3aa2:	98 7f       	andi	r25, 0xF8	; 248
    3aa4:	96 95       	lsr	r25
    3aa6:	e9 2f       	mov	r30, r25
    3aa8:	96 95       	lsr	r25
    3aaa:	96 95       	lsr	r25
    3aac:	e9 0f       	add	r30, r25
    3aae:	ff 27       	eor	r31, r31
    3ab0:	e8 5d       	subi	r30, 0xD8	; 216
    3ab2:	fb 4f       	sbci	r31, 0xFB	; 251
    3ab4:	99 27       	eor	r25, r25
    3ab6:	33 27       	eor	r19, r19
    3ab8:	ee 24       	eor	r14, r14
    3aba:	ff 24       	eor	r15, r15
    3abc:	a7 01       	movw	r20, r14
    3abe:	e7 01       	movw	r28, r14
    3ac0:	05 90       	lpm	r0, Z+
    3ac2:	08 94       	sec
    3ac4:	07 94       	ror	r0
    3ac6:	28 f4       	brcc	.+10     	; 0x3ad2 <__ftoa_engine+0x80>
    3ac8:	36 0f       	add	r19, r22
    3aca:	e7 1e       	adc	r14, r23
    3acc:	f8 1e       	adc	r15, r24
    3ace:	49 1f       	adc	r20, r25
    3ad0:	51 1d       	adc	r21, r1
    3ad2:	66 0f       	add	r22, r22
    3ad4:	77 1f       	adc	r23, r23
    3ad6:	88 1f       	adc	r24, r24
    3ad8:	99 1f       	adc	r25, r25
    3ada:	06 94       	lsr	r0
    3adc:	a1 f7       	brne	.-24     	; 0x3ac6 <__ftoa_engine+0x74>
    3ade:	05 90       	lpm	r0, Z+
    3ae0:	07 94       	ror	r0
    3ae2:	28 f4       	brcc	.+10     	; 0x3aee <__ftoa_engine+0x9c>
    3ae4:	e7 0e       	add	r14, r23
    3ae6:	f8 1e       	adc	r15, r24
    3ae8:	49 1f       	adc	r20, r25
    3aea:	56 1f       	adc	r21, r22
    3aec:	c1 1d       	adc	r28, r1
    3aee:	77 0f       	add	r23, r23
    3af0:	88 1f       	adc	r24, r24
    3af2:	99 1f       	adc	r25, r25
    3af4:	66 1f       	adc	r22, r22
    3af6:	06 94       	lsr	r0
    3af8:	a1 f7       	brne	.-24     	; 0x3ae2 <__ftoa_engine+0x90>
    3afa:	05 90       	lpm	r0, Z+
    3afc:	07 94       	ror	r0
    3afe:	28 f4       	brcc	.+10     	; 0x3b0a <__ftoa_engine+0xb8>
    3b00:	f8 0e       	add	r15, r24
    3b02:	49 1f       	adc	r20, r25
    3b04:	56 1f       	adc	r21, r22
    3b06:	c7 1f       	adc	r28, r23
    3b08:	d1 1d       	adc	r29, r1
    3b0a:	88 0f       	add	r24, r24
    3b0c:	99 1f       	adc	r25, r25
    3b0e:	66 1f       	adc	r22, r22
    3b10:	77 1f       	adc	r23, r23
    3b12:	06 94       	lsr	r0
    3b14:	a1 f7       	brne	.-24     	; 0x3afe <__ftoa_engine+0xac>
    3b16:	05 90       	lpm	r0, Z+
    3b18:	07 94       	ror	r0
    3b1a:	20 f4       	brcc	.+8      	; 0x3b24 <__ftoa_engine+0xd2>
    3b1c:	49 0f       	add	r20, r25
    3b1e:	56 1f       	adc	r21, r22
    3b20:	c7 1f       	adc	r28, r23
    3b22:	d8 1f       	adc	r29, r24
    3b24:	99 0f       	add	r25, r25
    3b26:	66 1f       	adc	r22, r22
    3b28:	77 1f       	adc	r23, r23
    3b2a:	88 1f       	adc	r24, r24
    3b2c:	06 94       	lsr	r0
    3b2e:	a9 f7       	brne	.-22     	; 0x3b1a <__ftoa_engine+0xc8>
    3b30:	84 91       	lpm	r24, Z+
    3b32:	10 95       	com	r17
    3b34:	17 70       	andi	r17, 0x07	; 7
    3b36:	41 f0       	breq	.+16     	; 0x3b48 <__ftoa_engine+0xf6>
    3b38:	d6 95       	lsr	r29
    3b3a:	c7 95       	ror	r28
    3b3c:	57 95       	ror	r21
    3b3e:	47 95       	ror	r20
    3b40:	f7 94       	ror	r15
    3b42:	e7 94       	ror	r14
    3b44:	1a 95       	dec	r17
    3b46:	c1 f7       	brne	.-16     	; 0x3b38 <__ftoa_engine+0xe6>
    3b48:	ee ec       	ldi	r30, 0xCE	; 206
    3b4a:	f3 e0       	ldi	r31, 0x03	; 3
    3b4c:	68 94       	set
    3b4e:	15 90       	lpm	r1, Z+
    3b50:	15 91       	lpm	r17, Z+
    3b52:	35 91       	lpm	r19, Z+
    3b54:	65 91       	lpm	r22, Z+
    3b56:	95 91       	lpm	r25, Z+
    3b58:	05 90       	lpm	r0, Z+
    3b5a:	7f e2       	ldi	r23, 0x2F	; 47
    3b5c:	73 95       	inc	r23
    3b5e:	e1 18       	sub	r14, r1
    3b60:	f1 0a       	sbc	r15, r17
    3b62:	43 0b       	sbc	r20, r19
    3b64:	56 0b       	sbc	r21, r22
    3b66:	c9 0b       	sbc	r28, r25
    3b68:	d0 09       	sbc	r29, r0
    3b6a:	c0 f7       	brcc	.-16     	; 0x3b5c <__ftoa_engine+0x10a>
    3b6c:	e1 0c       	add	r14, r1
    3b6e:	f1 1e       	adc	r15, r17
    3b70:	43 1f       	adc	r20, r19
    3b72:	56 1f       	adc	r21, r22
    3b74:	c9 1f       	adc	r28, r25
    3b76:	d0 1d       	adc	r29, r0
    3b78:	7e f4       	brtc	.+30     	; 0x3b98 <__ftoa_engine+0x146>
    3b7a:	70 33       	cpi	r23, 0x30	; 48
    3b7c:	11 f4       	brne	.+4      	; 0x3b82 <__ftoa_engine+0x130>
    3b7e:	8a 95       	dec	r24
    3b80:	e6 cf       	rjmp	.-52     	; 0x3b4e <__ftoa_engine+0xfc>
    3b82:	e8 94       	clt
    3b84:	01 50       	subi	r16, 0x01	; 1
    3b86:	30 f0       	brcs	.+12     	; 0x3b94 <__ftoa_engine+0x142>
    3b88:	08 0f       	add	r16, r24
    3b8a:	0a f4       	brpl	.+2      	; 0x3b8e <__ftoa_engine+0x13c>
    3b8c:	00 27       	eor	r16, r16
    3b8e:	02 17       	cp	r16, r18
    3b90:	08 f4       	brcc	.+2      	; 0x3b94 <__ftoa_engine+0x142>
    3b92:	20 2f       	mov	r18, r16
    3b94:	23 95       	inc	r18
    3b96:	02 2f       	mov	r16, r18
    3b98:	7a 33       	cpi	r23, 0x3A	; 58
    3b9a:	28 f0       	brcs	.+10     	; 0x3ba6 <__ftoa_engine+0x154>
    3b9c:	79 e3       	ldi	r23, 0x39	; 57
    3b9e:	7d 93       	st	X+, r23
    3ba0:	2a 95       	dec	r18
    3ba2:	e9 f7       	brne	.-6      	; 0x3b9e <__ftoa_engine+0x14c>
    3ba4:	10 c0       	rjmp	.+32     	; 0x3bc6 <__ftoa_engine+0x174>
    3ba6:	7d 93       	st	X+, r23
    3ba8:	2a 95       	dec	r18
    3baa:	89 f6       	brne	.-94     	; 0x3b4e <__ftoa_engine+0xfc>
    3bac:	06 94       	lsr	r0
    3bae:	97 95       	ror	r25
    3bb0:	67 95       	ror	r22
    3bb2:	37 95       	ror	r19
    3bb4:	17 95       	ror	r17
    3bb6:	17 94       	ror	r1
    3bb8:	e1 18       	sub	r14, r1
    3bba:	f1 0a       	sbc	r15, r17
    3bbc:	43 0b       	sbc	r20, r19
    3bbe:	56 0b       	sbc	r21, r22
    3bc0:	c9 0b       	sbc	r28, r25
    3bc2:	d0 09       	sbc	r29, r0
    3bc4:	98 f0       	brcs	.+38     	; 0x3bec <__ftoa_engine+0x19a>
    3bc6:	23 95       	inc	r18
    3bc8:	7e 91       	ld	r23, -X
    3bca:	73 95       	inc	r23
    3bcc:	7a 33       	cpi	r23, 0x3A	; 58
    3bce:	08 f0       	brcs	.+2      	; 0x3bd2 <__ftoa_engine+0x180>
    3bd0:	70 e3       	ldi	r23, 0x30	; 48
    3bd2:	7c 93       	st	X, r23
    3bd4:	20 13       	cpse	r18, r16
    3bd6:	b8 f7       	brcc	.-18     	; 0x3bc6 <__ftoa_engine+0x174>
    3bd8:	7e 91       	ld	r23, -X
    3bda:	70 61       	ori	r23, 0x10	; 16
    3bdc:	7d 93       	st	X+, r23
    3bde:	30 f0       	brcs	.+12     	; 0x3bec <__ftoa_engine+0x19a>
    3be0:	83 95       	inc	r24
    3be2:	71 e3       	ldi	r23, 0x31	; 49
    3be4:	7d 93       	st	X+, r23
    3be6:	70 e3       	ldi	r23, 0x30	; 48
    3be8:	2a 95       	dec	r18
    3bea:	e1 f7       	brne	.-8      	; 0x3be4 <__ftoa_engine+0x192>
    3bec:	11 24       	eor	r1, r1
    3bee:	ef 90       	pop	r14
    3bf0:	ff 90       	pop	r15
    3bf2:	0f 91       	pop	r16
    3bf4:	1f 91       	pop	r17
    3bf6:	cf 91       	pop	r28
    3bf8:	df 91       	pop	r29
    3bfa:	99 27       	eor	r25, r25
    3bfc:	87 fd       	sbrc	r24, 7
    3bfe:	90 95       	com	r25
    3c00:	08 95       	ret

00003c02 <strnlen_P>:
    3c02:	fc 01       	movw	r30, r24
    3c04:	05 90       	lpm	r0, Z+
    3c06:	61 50       	subi	r22, 0x01	; 1
    3c08:	70 40       	sbci	r23, 0x00	; 0
    3c0a:	01 10       	cpse	r0, r1
    3c0c:	d8 f7       	brcc	.-10     	; 0x3c04 <strnlen_P+0x2>
    3c0e:	80 95       	com	r24
    3c10:	90 95       	com	r25
    3c12:	8e 0f       	add	r24, r30
    3c14:	9f 1f       	adc	r25, r31
    3c16:	08 95       	ret

00003c18 <memset>:
    3c18:	dc 01       	movw	r26, r24
    3c1a:	01 c0       	rjmp	.+2      	; 0x3c1e <memset+0x6>
    3c1c:	6d 93       	st	X+, r22
    3c1e:	41 50       	subi	r20, 0x01	; 1
    3c20:	50 40       	sbci	r21, 0x00	; 0
    3c22:	e0 f7       	brcc	.-8      	; 0x3c1c <memset+0x4>
    3c24:	08 95       	ret

00003c26 <strnlen>:
    3c26:	fc 01       	movw	r30, r24
    3c28:	61 50       	subi	r22, 0x01	; 1
    3c2a:	70 40       	sbci	r23, 0x00	; 0
    3c2c:	01 90       	ld	r0, Z+
    3c2e:	01 10       	cpse	r0, r1
    3c30:	d8 f7       	brcc	.-10     	; 0x3c28 <strnlen+0x2>
    3c32:	80 95       	com	r24
    3c34:	90 95       	com	r25
    3c36:	8e 0f       	add	r24, r30
    3c38:	9f 1f       	adc	r25, r31
    3c3a:	08 95       	ret

00003c3c <itoa>:
    3c3c:	fb 01       	movw	r30, r22
    3c3e:	9f 01       	movw	r18, r30
    3c40:	e8 94       	clt
    3c42:	42 30       	cpi	r20, 0x02	; 2
    3c44:	c4 f0       	brlt	.+48     	; 0x3c76 <itoa+0x3a>
    3c46:	45 32       	cpi	r20, 0x25	; 37
    3c48:	b4 f4       	brge	.+44     	; 0x3c76 <itoa+0x3a>
    3c4a:	4a 30       	cpi	r20, 0x0A	; 10
    3c4c:	29 f4       	brne	.+10     	; 0x3c58 <itoa+0x1c>
    3c4e:	97 fb       	bst	r25, 7
    3c50:	1e f4       	brtc	.+6      	; 0x3c58 <itoa+0x1c>
    3c52:	90 95       	com	r25
    3c54:	81 95       	neg	r24
    3c56:	9f 4f       	sbci	r25, 0xFF	; 255
    3c58:	64 2f       	mov	r22, r20
    3c5a:	77 27       	eor	r23, r23
    3c5c:	0e 94 6e 1f 	call	0x3edc	; 0x3edc <__udivmodhi4>
    3c60:	80 5d       	subi	r24, 0xD0	; 208
    3c62:	8a 33       	cpi	r24, 0x3A	; 58
    3c64:	0c f0       	brlt	.+2      	; 0x3c68 <itoa+0x2c>
    3c66:	89 5d       	subi	r24, 0xD9	; 217
    3c68:	81 93       	st	Z+, r24
    3c6a:	cb 01       	movw	r24, r22
    3c6c:	00 97       	sbiw	r24, 0x00	; 0
    3c6e:	a1 f7       	brne	.-24     	; 0x3c58 <itoa+0x1c>
    3c70:	16 f4       	brtc	.+4      	; 0x3c76 <itoa+0x3a>
    3c72:	5d e2       	ldi	r21, 0x2D	; 45
    3c74:	51 93       	st	Z+, r21
    3c76:	10 82       	st	Z, r1
    3c78:	c9 01       	movw	r24, r18
    3c7a:	0c 94 3f 1f 	jmp	0x3e7e	; 0x3e7e <strrev>

00003c7e <ltoa>:
    3c7e:	fa 01       	movw	r30, r20
    3c80:	cf 93       	push	r28
    3c82:	ff 93       	push	r31
    3c84:	ef 93       	push	r30
    3c86:	22 30       	cpi	r18, 0x02	; 2
    3c88:	44 f1       	brlt	.+80     	; 0x3cda <ltoa+0x5c>
    3c8a:	25 32       	cpi	r18, 0x25	; 37
    3c8c:	34 f5       	brge	.+76     	; 0x3cda <ltoa+0x5c>
    3c8e:	c2 2f       	mov	r28, r18
    3c90:	e8 94       	clt
    3c92:	ca 30       	cpi	r28, 0x0A	; 10
    3c94:	49 f4       	brne	.+18     	; 0x3ca8 <ltoa+0x2a>
    3c96:	97 fb       	bst	r25, 7
    3c98:	3e f4       	brtc	.+14     	; 0x3ca8 <ltoa+0x2a>
    3c9a:	90 95       	com	r25
    3c9c:	80 95       	com	r24
    3c9e:	70 95       	com	r23
    3ca0:	61 95       	neg	r22
    3ca2:	7f 4f       	sbci	r23, 0xFF	; 255
    3ca4:	8f 4f       	sbci	r24, 0xFF	; 255
    3ca6:	9f 4f       	sbci	r25, 0xFF	; 255
    3ca8:	2c 2f       	mov	r18, r28
    3caa:	33 27       	eor	r19, r19
    3cac:	44 27       	eor	r20, r20
    3cae:	55 27       	eor	r21, r21
    3cb0:	ff 93       	push	r31
    3cb2:	ef 93       	push	r30
    3cb4:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__udivmodsi4>
    3cb8:	ef 91       	pop	r30
    3cba:	ff 91       	pop	r31
    3cbc:	60 5d       	subi	r22, 0xD0	; 208
    3cbe:	6a 33       	cpi	r22, 0x3A	; 58
    3cc0:	0c f0       	brlt	.+2      	; 0x3cc4 <ltoa+0x46>
    3cc2:	69 5d       	subi	r22, 0xD9	; 217
    3cc4:	61 93       	st	Z+, r22
    3cc6:	b9 01       	movw	r22, r18
    3cc8:	ca 01       	movw	r24, r20
    3cca:	60 50       	subi	r22, 0x00	; 0
    3ccc:	70 40       	sbci	r23, 0x00	; 0
    3cce:	80 40       	sbci	r24, 0x00	; 0
    3cd0:	90 40       	sbci	r25, 0x00	; 0
    3cd2:	51 f7       	brne	.-44     	; 0x3ca8 <ltoa+0x2a>
    3cd4:	16 f4       	brtc	.+4      	; 0x3cda <ltoa+0x5c>
    3cd6:	cd e2       	ldi	r28, 0x2D	; 45
    3cd8:	c1 93       	st	Z+, r28
    3cda:	10 82       	st	Z, r1
    3cdc:	8f 91       	pop	r24
    3cde:	9f 91       	pop	r25
    3ce0:	cf 91       	pop	r28
    3ce2:	0c 94 3f 1f 	jmp	0x3e7e	; 0x3e7e <strrev>

00003ce6 <ultoa>:
    3ce6:	fa 01       	movw	r30, r20
    3ce8:	cf 93       	push	r28
    3cea:	ff 93       	push	r31
    3cec:	ef 93       	push	r30
    3cee:	22 30       	cpi	r18, 0x02	; 2
    3cf0:	cc f0       	brlt	.+50     	; 0x3d24 <ultoa+0x3e>
    3cf2:	25 32       	cpi	r18, 0x25	; 37
    3cf4:	bc f4       	brge	.+46     	; 0x3d24 <ultoa+0x3e>
    3cf6:	c2 2f       	mov	r28, r18
    3cf8:	2c 2f       	mov	r18, r28
    3cfa:	33 27       	eor	r19, r19
    3cfc:	44 27       	eor	r20, r20
    3cfe:	55 27       	eor	r21, r21
    3d00:	ff 93       	push	r31
    3d02:	ef 93       	push	r30
    3d04:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__udivmodsi4>
    3d08:	ef 91       	pop	r30
    3d0a:	ff 91       	pop	r31
    3d0c:	60 5d       	subi	r22, 0xD0	; 208
    3d0e:	6a 33       	cpi	r22, 0x3A	; 58
    3d10:	0c f0       	brlt	.+2      	; 0x3d14 <ultoa+0x2e>
    3d12:	69 5d       	subi	r22, 0xD9	; 217
    3d14:	61 93       	st	Z+, r22
    3d16:	b9 01       	movw	r22, r18
    3d18:	ca 01       	movw	r24, r20
    3d1a:	60 50       	subi	r22, 0x00	; 0
    3d1c:	70 40       	sbci	r23, 0x00	; 0
    3d1e:	80 40       	sbci	r24, 0x00	; 0
    3d20:	90 40       	sbci	r25, 0x00	; 0
    3d22:	51 f7       	brne	.-44     	; 0x3cf8 <ultoa+0x12>
    3d24:	10 82       	st	Z, r1
    3d26:	8f 91       	pop	r24
    3d28:	9f 91       	pop	r25
    3d2a:	cf 91       	pop	r28
    3d2c:	0c 94 3f 1f 	jmp	0x3e7e	; 0x3e7e <strrev>

00003d30 <fprintf_P>:
    3d30:	a0 e0       	ldi	r26, 0x00	; 0
    3d32:	b0 e0       	ldi	r27, 0x00	; 0
    3d34:	ee e9       	ldi	r30, 0x9E	; 158
    3d36:	fe e1       	ldi	r31, 0x1E	; 30
    3d38:	0c 94 e0 1f 	jmp	0x3fc0	; 0x3fc0 <__prologue_saves__+0x1c>
    3d3c:	0f 81       	ldd	r16, Y+7	; 0x07
    3d3e:	18 85       	ldd	r17, Y+8	; 0x08
    3d40:	9e 01       	movw	r18, r28
    3d42:	25 5f       	subi	r18, 0xF5	; 245
    3d44:	3f 4f       	sbci	r19, 0xFF	; 255
    3d46:	f8 01       	movw	r30, r16
    3d48:	83 81       	ldd	r24, Z+3	; 0x03
    3d4a:	88 60       	ori	r24, 0x08	; 8
    3d4c:	83 83       	std	Z+3, r24	; 0x03
    3d4e:	c8 01       	movw	r24, r16
    3d50:	69 85       	ldd	r22, Y+9	; 0x09
    3d52:	7a 85       	ldd	r23, Y+10	; 0x0a
    3d54:	a9 01       	movw	r20, r18
    3d56:	0e 94 92 02 	call	0x524	; 0x524 <vfprintf>
    3d5a:	f8 01       	movw	r30, r16
    3d5c:	23 81       	ldd	r18, Z+3	; 0x03
    3d5e:	27 7f       	andi	r18, 0xF7	; 247
    3d60:	23 83       	std	Z+3, r18	; 0x03
    3d62:	20 96       	adiw	r28, 0x00	; 0
    3d64:	e4 e0       	ldi	r30, 0x04	; 4
    3d66:	0c 94 fc 1f 	jmp	0x3ff8	; 0x3ff8 <__epilogue_restores__+0x1c>

00003d6a <fputc>:
    3d6a:	0f 93       	push	r16
    3d6c:	1f 93       	push	r17
    3d6e:	cf 93       	push	r28
    3d70:	df 93       	push	r29
    3d72:	8c 01       	movw	r16, r24
    3d74:	eb 01       	movw	r28, r22
    3d76:	8b 81       	ldd	r24, Y+3	; 0x03
    3d78:	81 ff       	sbrs	r24, 1
    3d7a:	1b c0       	rjmp	.+54     	; 0x3db2 <fputc+0x48>
    3d7c:	82 ff       	sbrs	r24, 2
    3d7e:	0d c0       	rjmp	.+26     	; 0x3d9a <fputc+0x30>
    3d80:	2e 81       	ldd	r18, Y+6	; 0x06
    3d82:	3f 81       	ldd	r19, Y+7	; 0x07
    3d84:	8c 81       	ldd	r24, Y+4	; 0x04
    3d86:	9d 81       	ldd	r25, Y+5	; 0x05
    3d88:	28 17       	cp	r18, r24
    3d8a:	39 07       	cpc	r19, r25
    3d8c:	64 f4       	brge	.+24     	; 0x3da6 <fputc+0x3c>
    3d8e:	e8 81       	ld	r30, Y
    3d90:	f9 81       	ldd	r31, Y+1	; 0x01
    3d92:	01 93       	st	Z+, r16
    3d94:	f9 83       	std	Y+1, r31	; 0x01
    3d96:	e8 83       	st	Y, r30
    3d98:	06 c0       	rjmp	.+12     	; 0x3da6 <fputc+0x3c>
    3d9a:	e8 85       	ldd	r30, Y+8	; 0x08
    3d9c:	f9 85       	ldd	r31, Y+9	; 0x09
    3d9e:	80 2f       	mov	r24, r16
    3da0:	09 95       	icall
    3da2:	89 2b       	or	r24, r25
    3da4:	31 f4       	brne	.+12     	; 0x3db2 <fputc+0x48>
    3da6:	8e 81       	ldd	r24, Y+6	; 0x06
    3da8:	9f 81       	ldd	r25, Y+7	; 0x07
    3daa:	01 96       	adiw	r24, 0x01	; 1
    3dac:	9f 83       	std	Y+7, r25	; 0x07
    3dae:	8e 83       	std	Y+6, r24	; 0x06
    3db0:	02 c0       	rjmp	.+4      	; 0x3db6 <fputc+0x4c>
    3db2:	0f ef       	ldi	r16, 0xFF	; 255
    3db4:	1f ef       	ldi	r17, 0xFF	; 255
    3db6:	c8 01       	movw	r24, r16
    3db8:	df 91       	pop	r29
    3dba:	cf 91       	pop	r28
    3dbc:	1f 91       	pop	r17
    3dbe:	0f 91       	pop	r16
    3dc0:	08 95       	ret

00003dc2 <__ultoa_invert>:
    3dc2:	fa 01       	movw	r30, r20
    3dc4:	aa 27       	eor	r26, r26
    3dc6:	28 30       	cpi	r18, 0x08	; 8
    3dc8:	51 f1       	breq	.+84     	; 0x3e1e <__ultoa_invert+0x5c>
    3dca:	20 31       	cpi	r18, 0x10	; 16
    3dcc:	81 f1       	breq	.+96     	; 0x3e2e <__ultoa_invert+0x6c>
    3dce:	e8 94       	clt
    3dd0:	6f 93       	push	r22
    3dd2:	6e 7f       	andi	r22, 0xFE	; 254
    3dd4:	6e 5f       	subi	r22, 0xFE	; 254
    3dd6:	7f 4f       	sbci	r23, 0xFF	; 255
    3dd8:	8f 4f       	sbci	r24, 0xFF	; 255
    3dda:	9f 4f       	sbci	r25, 0xFF	; 255
    3ddc:	af 4f       	sbci	r26, 0xFF	; 255
    3dde:	b1 e0       	ldi	r27, 0x01	; 1
    3de0:	3e d0       	rcall	.+124    	; 0x3e5e <__ultoa_invert+0x9c>
    3de2:	b4 e0       	ldi	r27, 0x04	; 4
    3de4:	3c d0       	rcall	.+120    	; 0x3e5e <__ultoa_invert+0x9c>
    3de6:	67 0f       	add	r22, r23
    3de8:	78 1f       	adc	r23, r24
    3dea:	89 1f       	adc	r24, r25
    3dec:	9a 1f       	adc	r25, r26
    3dee:	a1 1d       	adc	r26, r1
    3df0:	68 0f       	add	r22, r24
    3df2:	79 1f       	adc	r23, r25
    3df4:	8a 1f       	adc	r24, r26
    3df6:	91 1d       	adc	r25, r1
    3df8:	a1 1d       	adc	r26, r1
    3dfa:	6a 0f       	add	r22, r26
    3dfc:	71 1d       	adc	r23, r1
    3dfe:	81 1d       	adc	r24, r1
    3e00:	91 1d       	adc	r25, r1
    3e02:	a1 1d       	adc	r26, r1
    3e04:	20 d0       	rcall	.+64     	; 0x3e46 <__ultoa_invert+0x84>
    3e06:	09 f4       	brne	.+2      	; 0x3e0a <__ultoa_invert+0x48>
    3e08:	68 94       	set
    3e0a:	3f 91       	pop	r19
    3e0c:	2a e0       	ldi	r18, 0x0A	; 10
    3e0e:	26 9f       	mul	r18, r22
    3e10:	11 24       	eor	r1, r1
    3e12:	30 19       	sub	r19, r0
    3e14:	30 5d       	subi	r19, 0xD0	; 208
    3e16:	31 93       	st	Z+, r19
    3e18:	de f6       	brtc	.-74     	; 0x3dd0 <__ultoa_invert+0xe>
    3e1a:	cf 01       	movw	r24, r30
    3e1c:	08 95       	ret
    3e1e:	46 2f       	mov	r20, r22
    3e20:	47 70       	andi	r20, 0x07	; 7
    3e22:	40 5d       	subi	r20, 0xD0	; 208
    3e24:	41 93       	st	Z+, r20
    3e26:	b3 e0       	ldi	r27, 0x03	; 3
    3e28:	0f d0       	rcall	.+30     	; 0x3e48 <__ultoa_invert+0x86>
    3e2a:	c9 f7       	brne	.-14     	; 0x3e1e <__ultoa_invert+0x5c>
    3e2c:	f6 cf       	rjmp	.-20     	; 0x3e1a <__ultoa_invert+0x58>
    3e2e:	46 2f       	mov	r20, r22
    3e30:	4f 70       	andi	r20, 0x0F	; 15
    3e32:	40 5d       	subi	r20, 0xD0	; 208
    3e34:	4a 33       	cpi	r20, 0x3A	; 58
    3e36:	18 f0       	brcs	.+6      	; 0x3e3e <__ultoa_invert+0x7c>
    3e38:	49 5d       	subi	r20, 0xD9	; 217
    3e3a:	31 fd       	sbrc	r19, 1
    3e3c:	40 52       	subi	r20, 0x20	; 32
    3e3e:	41 93       	st	Z+, r20
    3e40:	02 d0       	rcall	.+4      	; 0x3e46 <__ultoa_invert+0x84>
    3e42:	a9 f7       	brne	.-22     	; 0x3e2e <__ultoa_invert+0x6c>
    3e44:	ea cf       	rjmp	.-44     	; 0x3e1a <__ultoa_invert+0x58>
    3e46:	b4 e0       	ldi	r27, 0x04	; 4
    3e48:	a6 95       	lsr	r26
    3e4a:	97 95       	ror	r25
    3e4c:	87 95       	ror	r24
    3e4e:	77 95       	ror	r23
    3e50:	67 95       	ror	r22
    3e52:	ba 95       	dec	r27
    3e54:	c9 f7       	brne	.-14     	; 0x3e48 <__ultoa_invert+0x86>
    3e56:	00 97       	sbiw	r24, 0x00	; 0
    3e58:	61 05       	cpc	r22, r1
    3e5a:	71 05       	cpc	r23, r1
    3e5c:	08 95       	ret
    3e5e:	9b 01       	movw	r18, r22
    3e60:	ac 01       	movw	r20, r24
    3e62:	0a 2e       	mov	r0, r26
    3e64:	06 94       	lsr	r0
    3e66:	57 95       	ror	r21
    3e68:	47 95       	ror	r20
    3e6a:	37 95       	ror	r19
    3e6c:	27 95       	ror	r18
    3e6e:	ba 95       	dec	r27
    3e70:	c9 f7       	brne	.-14     	; 0x3e64 <__ultoa_invert+0xa2>
    3e72:	62 0f       	add	r22, r18
    3e74:	73 1f       	adc	r23, r19
    3e76:	84 1f       	adc	r24, r20
    3e78:	95 1f       	adc	r25, r21
    3e7a:	a0 1d       	adc	r26, r0
    3e7c:	08 95       	ret

00003e7e <strrev>:
    3e7e:	dc 01       	movw	r26, r24
    3e80:	fc 01       	movw	r30, r24
    3e82:	67 2f       	mov	r22, r23
    3e84:	71 91       	ld	r23, Z+
    3e86:	77 23       	and	r23, r23
    3e88:	e1 f7       	brne	.-8      	; 0x3e82 <strrev+0x4>
    3e8a:	32 97       	sbiw	r30, 0x02	; 2
    3e8c:	04 c0       	rjmp	.+8      	; 0x3e96 <strrev+0x18>
    3e8e:	7c 91       	ld	r23, X
    3e90:	6d 93       	st	X+, r22
    3e92:	70 83       	st	Z, r23
    3e94:	62 91       	ld	r22, -Z
    3e96:	ae 17       	cp	r26, r30
    3e98:	bf 07       	cpc	r27, r31
    3e9a:	c8 f3       	brcs	.-14     	; 0x3e8e <strrev+0x10>
    3e9c:	08 95       	ret

00003e9e <__mulsi3>:
    3e9e:	62 9f       	mul	r22, r18
    3ea0:	d0 01       	movw	r26, r0
    3ea2:	73 9f       	mul	r23, r19
    3ea4:	f0 01       	movw	r30, r0
    3ea6:	82 9f       	mul	r24, r18
    3ea8:	e0 0d       	add	r30, r0
    3eaa:	f1 1d       	adc	r31, r1
    3eac:	64 9f       	mul	r22, r20
    3eae:	e0 0d       	add	r30, r0
    3eb0:	f1 1d       	adc	r31, r1
    3eb2:	92 9f       	mul	r25, r18
    3eb4:	f0 0d       	add	r31, r0
    3eb6:	83 9f       	mul	r24, r19
    3eb8:	f0 0d       	add	r31, r0
    3eba:	74 9f       	mul	r23, r20
    3ebc:	f0 0d       	add	r31, r0
    3ebe:	65 9f       	mul	r22, r21
    3ec0:	f0 0d       	add	r31, r0
    3ec2:	99 27       	eor	r25, r25
    3ec4:	72 9f       	mul	r23, r18
    3ec6:	b0 0d       	add	r27, r0
    3ec8:	e1 1d       	adc	r30, r1
    3eca:	f9 1f       	adc	r31, r25
    3ecc:	63 9f       	mul	r22, r19
    3ece:	b0 0d       	add	r27, r0
    3ed0:	e1 1d       	adc	r30, r1
    3ed2:	f9 1f       	adc	r31, r25
    3ed4:	bd 01       	movw	r22, r26
    3ed6:	cf 01       	movw	r24, r30
    3ed8:	11 24       	eor	r1, r1
    3eda:	08 95       	ret

00003edc <__udivmodhi4>:
    3edc:	aa 1b       	sub	r26, r26
    3ede:	bb 1b       	sub	r27, r27
    3ee0:	51 e1       	ldi	r21, 0x11	; 17
    3ee2:	07 c0       	rjmp	.+14     	; 0x3ef2 <__udivmodhi4_ep>

00003ee4 <__udivmodhi4_loop>:
    3ee4:	aa 1f       	adc	r26, r26
    3ee6:	bb 1f       	adc	r27, r27
    3ee8:	a6 17       	cp	r26, r22
    3eea:	b7 07       	cpc	r27, r23
    3eec:	10 f0       	brcs	.+4      	; 0x3ef2 <__udivmodhi4_ep>
    3eee:	a6 1b       	sub	r26, r22
    3ef0:	b7 0b       	sbc	r27, r23

00003ef2 <__udivmodhi4_ep>:
    3ef2:	88 1f       	adc	r24, r24
    3ef4:	99 1f       	adc	r25, r25
    3ef6:	5a 95       	dec	r21
    3ef8:	a9 f7       	brne	.-22     	; 0x3ee4 <__udivmodhi4_loop>
    3efa:	80 95       	com	r24
    3efc:	90 95       	com	r25
    3efe:	bc 01       	movw	r22, r24
    3f00:	cd 01       	movw	r24, r26
    3f02:	08 95       	ret

00003f04 <__divmodhi4>:
    3f04:	97 fb       	bst	r25, 7
    3f06:	09 2e       	mov	r0, r25
    3f08:	07 26       	eor	r0, r23
    3f0a:	0a d0       	rcall	.+20     	; 0x3f20 <__divmodhi4_neg1>
    3f0c:	77 fd       	sbrc	r23, 7
    3f0e:	04 d0       	rcall	.+8      	; 0x3f18 <__divmodhi4_neg2>
    3f10:	e5 df       	rcall	.-54     	; 0x3edc <__udivmodhi4>
    3f12:	06 d0       	rcall	.+12     	; 0x3f20 <__divmodhi4_neg1>
    3f14:	00 20       	and	r0, r0
    3f16:	1a f4       	brpl	.+6      	; 0x3f1e <__divmodhi4_exit>

00003f18 <__divmodhi4_neg2>:
    3f18:	70 95       	com	r23
    3f1a:	61 95       	neg	r22
    3f1c:	7f 4f       	sbci	r23, 0xFF	; 255

00003f1e <__divmodhi4_exit>:
    3f1e:	08 95       	ret

00003f20 <__divmodhi4_neg1>:
    3f20:	f6 f7       	brtc	.-4      	; 0x3f1e <__divmodhi4_exit>
    3f22:	90 95       	com	r25
    3f24:	81 95       	neg	r24
    3f26:	9f 4f       	sbci	r25, 0xFF	; 255
    3f28:	08 95       	ret

00003f2a <__udivmodsi4>:
    3f2a:	a1 e2       	ldi	r26, 0x21	; 33
    3f2c:	1a 2e       	mov	r1, r26
    3f2e:	aa 1b       	sub	r26, r26
    3f30:	bb 1b       	sub	r27, r27
    3f32:	fd 01       	movw	r30, r26
    3f34:	0d c0       	rjmp	.+26     	; 0x3f50 <__udivmodsi4_ep>

00003f36 <__udivmodsi4_loop>:
    3f36:	aa 1f       	adc	r26, r26
    3f38:	bb 1f       	adc	r27, r27
    3f3a:	ee 1f       	adc	r30, r30
    3f3c:	ff 1f       	adc	r31, r31
    3f3e:	a2 17       	cp	r26, r18
    3f40:	b3 07       	cpc	r27, r19
    3f42:	e4 07       	cpc	r30, r20
    3f44:	f5 07       	cpc	r31, r21
    3f46:	20 f0       	brcs	.+8      	; 0x3f50 <__udivmodsi4_ep>
    3f48:	a2 1b       	sub	r26, r18
    3f4a:	b3 0b       	sbc	r27, r19
    3f4c:	e4 0b       	sbc	r30, r20
    3f4e:	f5 0b       	sbc	r31, r21

00003f50 <__udivmodsi4_ep>:
    3f50:	66 1f       	adc	r22, r22
    3f52:	77 1f       	adc	r23, r23
    3f54:	88 1f       	adc	r24, r24
    3f56:	99 1f       	adc	r25, r25
    3f58:	1a 94       	dec	r1
    3f5a:	69 f7       	brne	.-38     	; 0x3f36 <__udivmodsi4_loop>
    3f5c:	60 95       	com	r22
    3f5e:	70 95       	com	r23
    3f60:	80 95       	com	r24
    3f62:	90 95       	com	r25
    3f64:	9b 01       	movw	r18, r22
    3f66:	ac 01       	movw	r20, r24
    3f68:	bd 01       	movw	r22, r26
    3f6a:	cf 01       	movw	r24, r30
    3f6c:	08 95       	ret

00003f6e <__divmodsi4>:
    3f6e:	97 fb       	bst	r25, 7
    3f70:	09 2e       	mov	r0, r25
    3f72:	05 26       	eor	r0, r21
    3f74:	0e d0       	rcall	.+28     	; 0x3f92 <__divmodsi4_neg1>
    3f76:	57 fd       	sbrc	r21, 7
    3f78:	04 d0       	rcall	.+8      	; 0x3f82 <__divmodsi4_neg2>
    3f7a:	d7 df       	rcall	.-82     	; 0x3f2a <__udivmodsi4>
    3f7c:	0a d0       	rcall	.+20     	; 0x3f92 <__divmodsi4_neg1>
    3f7e:	00 1c       	adc	r0, r0
    3f80:	38 f4       	brcc	.+14     	; 0x3f90 <__divmodsi4_exit>

00003f82 <__divmodsi4_neg2>:
    3f82:	50 95       	com	r21
    3f84:	40 95       	com	r20
    3f86:	30 95       	com	r19
    3f88:	21 95       	neg	r18
    3f8a:	3f 4f       	sbci	r19, 0xFF	; 255
    3f8c:	4f 4f       	sbci	r20, 0xFF	; 255
    3f8e:	5f 4f       	sbci	r21, 0xFF	; 255

00003f90 <__divmodsi4_exit>:
    3f90:	08 95       	ret

00003f92 <__divmodsi4_neg1>:
    3f92:	f6 f7       	brtc	.-4      	; 0x3f90 <__divmodsi4_exit>
    3f94:	90 95       	com	r25
    3f96:	80 95       	com	r24
    3f98:	70 95       	com	r23
    3f9a:	61 95       	neg	r22
    3f9c:	7f 4f       	sbci	r23, 0xFF	; 255
    3f9e:	8f 4f       	sbci	r24, 0xFF	; 255
    3fa0:	9f 4f       	sbci	r25, 0xFF	; 255
    3fa2:	08 95       	ret

00003fa4 <__prologue_saves__>:
    3fa4:	2f 92       	push	r2
    3fa6:	3f 92       	push	r3
    3fa8:	4f 92       	push	r4
    3faa:	5f 92       	push	r5
    3fac:	6f 92       	push	r6
    3fae:	7f 92       	push	r7
    3fb0:	8f 92       	push	r8
    3fb2:	9f 92       	push	r9
    3fb4:	af 92       	push	r10
    3fb6:	bf 92       	push	r11
    3fb8:	cf 92       	push	r12
    3fba:	df 92       	push	r13
    3fbc:	ef 92       	push	r14
    3fbe:	ff 92       	push	r15
    3fc0:	0f 93       	push	r16
    3fc2:	1f 93       	push	r17
    3fc4:	cf 93       	push	r28
    3fc6:	df 93       	push	r29
    3fc8:	cd b7       	in	r28, 0x3d	; 61
    3fca:	de b7       	in	r29, 0x3e	; 62
    3fcc:	ca 1b       	sub	r28, r26
    3fce:	db 0b       	sbc	r29, r27
    3fd0:	0f b6       	in	r0, 0x3f	; 63
    3fd2:	f8 94       	cli
    3fd4:	de bf       	out	0x3e, r29	; 62
    3fd6:	0f be       	out	0x3f, r0	; 63
    3fd8:	cd bf       	out	0x3d, r28	; 61
    3fda:	09 94       	ijmp

00003fdc <__epilogue_restores__>:
    3fdc:	2a 88       	ldd	r2, Y+18	; 0x12
    3fde:	39 88       	ldd	r3, Y+17	; 0x11
    3fe0:	48 88       	ldd	r4, Y+16	; 0x10
    3fe2:	5f 84       	ldd	r5, Y+15	; 0x0f
    3fe4:	6e 84       	ldd	r6, Y+14	; 0x0e
    3fe6:	7d 84       	ldd	r7, Y+13	; 0x0d
    3fe8:	8c 84       	ldd	r8, Y+12	; 0x0c
    3fea:	9b 84       	ldd	r9, Y+11	; 0x0b
    3fec:	aa 84       	ldd	r10, Y+10	; 0x0a
    3fee:	b9 84       	ldd	r11, Y+9	; 0x09
    3ff0:	c8 84       	ldd	r12, Y+8	; 0x08
    3ff2:	df 80       	ldd	r13, Y+7	; 0x07
    3ff4:	ee 80       	ldd	r14, Y+6	; 0x06
    3ff6:	fd 80       	ldd	r15, Y+5	; 0x05
    3ff8:	0c 81       	ldd	r16, Y+4	; 0x04
    3ffa:	1b 81       	ldd	r17, Y+3	; 0x03
    3ffc:	aa 81       	ldd	r26, Y+2	; 0x02
    3ffe:	b9 81       	ldd	r27, Y+1	; 0x01
    4000:	ce 0f       	add	r28, r30
    4002:	d1 1d       	adc	r29, r1
    4004:	0f b6       	in	r0, 0x3f	; 63
    4006:	f8 94       	cli
    4008:	de bf       	out	0x3e, r29	; 62
    400a:	0f be       	out	0x3f, r0	; 63
    400c:	cd bf       	out	0x3d, r28	; 61
    400e:	ed 01       	movw	r28, r26
    4010:	08 95       	ret

00004012 <__tablejump2__>:
    4012:	ee 0f       	add	r30, r30
    4014:	ff 1f       	adc	r31, r31

00004016 <__tablejump__>:
    4016:	05 90       	lpm	r0, Z+
    4018:	f4 91       	lpm	r31, Z+
    401a:	e0 2d       	mov	r30, r0
    401c:	09 94       	ijmp

0000401e <__do_global_dtors>:
    401e:	14 e0       	ldi	r17, 0x04	; 4
    4020:	ce ec       	ldi	r28, 0xCE	; 206
    4022:	d4 e0       	ldi	r29, 0x04	; 4
    4024:	04 c0       	rjmp	.+8      	; 0x402e <.do_global_dtors_start>

00004026 <.do_global_dtors_loop>:
    4026:	fe 01       	movw	r30, r28
    4028:	0e 94 0b 20 	call	0x4016	; 0x4016 <__tablejump__>
    402c:	22 96       	adiw	r28, 0x02	; 2

0000402e <.do_global_dtors_start>:
    402e:	c0 3d       	cpi	r28, 0xD0	; 208
    4030:	d1 07       	cpc	r29, r17
    4032:	c9 f7       	brne	.-14     	; 0x4026 <.do_global_dtors_loop>
    4034:	f8 94       	cli

00004036 <__stop_program>:
    4036:	ff cf       	rjmp	.-2      	; 0x4036 <__stop_program>
