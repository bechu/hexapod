
beta.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000011c  00800200  0000409e  00004132  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000409e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000148  0080031c  0080031c  0000424e  2**0
                  ALLOC
  3 .debug_aranges 00000520  00000000  00000000  0000424e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000fb7  00000000  00000000  0000476e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00014519  00000000  00000000  00005725  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00004ce3  00000000  00000000  00019c3e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000049c8  00000000  00000000  0001e921  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000b10  00000000  00000000  000232ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00002513  00000000  00000000  00023dfc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000025e8  00000000  00000000  0002630f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  000288f7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 68 02 	jmp	0x4d0	; 0x4d0 <__dtors_end>
       4:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
       8:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
       c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      10:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      14:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      18:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      1c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      20:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      24:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      28:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      2c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      30:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      34:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      38:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      3c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      40:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      44:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      48:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      4c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      50:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      54:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      58:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      5c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      60:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      64:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      68:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      6c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      70:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      74:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      78:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      7c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      80:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      84:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      88:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      8c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      90:	0c 94 87 0e 	jmp	0x1d0e	; 0x1d0e <__vector_36>
      94:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      98:	0c 94 b2 0e 	jmp	0x1d64	; 0x1d64 <__vector_38>
      9c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      a0:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      a4:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      a8:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      ac:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      b0:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      b4:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      b8:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      bc:	0c 94 5e 0f 	jmp	0x1ebc	; 0x1ebc <__vector_47>
      c0:	0c 94 97 1b 	jmp	0x372e	; 0x372e <__vector_48>
      c4:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      c8:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      cc:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      d0:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      d4:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      d8:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      dc:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      e0:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>

000000e4 <__c.1778>:
      e4:	6e 61 6e 00                                         nan.

000000e8 <__c.1776>:
      e8:	69 6e 66 00                                         inf.

000000ec <marquee_list>:
      ec:	69 02                                               i.

000000ee <bank1_list>:
      ee:	91 02 a7 02 bd 02                                   ......

000000f4 <__timer0Compare>:
      f4:	5f 03 00 6e 00 02 47 00 35 00 02 44 00 06 05 03     _..n..G.5..D....
     104:	63 03 00 6e 00 04 48 00 35 00 04 44 00 04 35 03     c..n..H.5..D..5.

00000114 <__timer1Compare>:
     114:	67 03 01 6f 00 02 88 00 36 00 02 80 00 06 ff 02     g..o....6.......
     124:	6b 03 01 6f 00 04 8a 00 36 00 04 80 00 04 02 03     k..o....6.......
     134:	6f 03 01 6f 00 08 8c 00 36 00 08 80 00 02 05 03     o..o....6.......

00000144 <__timer2Compare>:
     144:	73 03 02 70 00 02 b3 00 37 00 02 b0 00 06 fc 02     s..p....7.......
     154:	77 03 02 70 00 04 b4 00 37 00 04 b0 00 04 41 03     w..p....7.....A.

00000164 <__timer3Compare>:
     164:	7b 03 03 71 00 02 98 00 38 00 02 90 00 06 29 03     {..q....8.....).
     174:	7f 03 03 71 00 04 9a 00 38 00 04 90 00 04 2c 03     ...q....8.....,.
     184:	83 03 03 71 00 08 9c 00 38 00 08 90 00 02 2f 03     ...q....8...../.

00000194 <__timer4Compare>:
     194:	87 03 04 72 00 02 a8 00 39 00 02 a0 00 06 38 03     ...r....9.....8.
     1a4:	8b 03 04 72 00 04 aa 00 39 00 04 a0 00 04 3b 03     ...r....9.....;.
     1b4:	8f 03 04 72 00 08 ac 00 39 00 08 a0 00 02 3e 03     ...r....9.....>.

000001c4 <__timer5Compare>:
     1c4:	93 03 05 73 00 02 28 01 3a 00 02 20 01 06 4a 03     ...s..(.:.. ..J.
     1d4:	97 03 05 73 00 04 2a 01 3a 00 04 20 01 04 4d 03     ...s..*.:.. ..M.
     1e4:	9b 03 05 73 00 08 2c 01 3a 00 08 20 01 02 50 03     ...s..,.:.. ..P.

000001f4 <pgm_Timers>:
     1f4:	9f 03 46 00 45 00 00 00 02 33 88 44 00 01 44 00     ..F.E....3.D..D.
     204:	02 45 00 08 00 00 01 f4 00 6e 00 01 35 00 01 00     .E.......n..5...
     214:	00 00 00 01 00 00 01 00 00 01 00 00 aa 03 84 00     ................
     224:	81 00 ff 00 03 ff df 80 00 01 80 00 02 81 00 08     ................
     234:	81 00 10 14 01 6f 00 01 36 00 01 86 00 6f 00 20     .....o..6....o. 
     244:	36 00 20 81 00 40 00 00 b5 03 b2 00 b1 00 00 ff     6. ..@..........
     254:	02 33 88 b0 00 01 b0 00 02 b1 00 08 00 00 01 44     .3.............D
     264:	01 70 00 01 37 00 01 00 00 00 00 01 00 00 01 00     .p..7...........
     274:	00 01 00 00 c0 03 94 00 91 00 ff 00 03 ff df 90     ................
     284:	00 01 90 00 02 91 00 08 91 00 10 64 01 71 00 01     ...........d.q..
     294:	38 00 01 96 00 71 00 20 38 00 20 91 00 40 32 03     8....q. 8. ..@2.
     2a4:	cb 03 a4 00 a1 00 ff 00 03 ff df a0 00 01 a0 00     ................
     2b4:	02 a1 00 08 a1 00 10 94 01 72 00 01 39 00 01 a6     .........r..9...
     2c4:	00 72 00 20 39 00 20 a1 00 40 44 03 d6 03 24 01     .r. 9. ..@D...$.
     2d4:	21 01 ff 00 03 ff df 20 01 01 20 01 02 21 01 08     !...... .. ..!..
     2e4:	21 01 10 c4 01 73 00 01 3a 00 01 26 01 73 00 20     !....s..:..&.s. 
     2f4:	3a 00 20 21 01 40 47 03                             :. !.@G.

000002fc <_B4>:
     2fc:	55 03 10                                            U..

000002ff <_B5>:
     2ff:	55 03 20                                            U. 

00000302 <_B6>:
     302:	55 03 40                                            U.@

00000305 <_B7>:
     305:	55 03 80                                            U..

00000308 <_C0>:
     308:	5b 03 01                                            [..

0000030b <_C1>:
     30b:	5b 03 02                                            [..

0000030e <_C2>:
     30e:	5b 03 04                                            [..

00000311 <_C3>:
     311:	5b 03 08                                            [..

00000314 <_C4>:
     314:	5b 03 10                                            [..

00000317 <_C5>:
     317:	5b 03 20                                            [. 

0000031a <_D2>:
     31a:	61 03 04                                            a..

0000031d <_D3>:
     31d:	61 03 08                                            a..

00000320 <_D5>:
     320:	61 03 20                                            a. 

00000323 <_D6>:
     323:	61 03 40                                            a.@

00000326 <_D7>:
     326:	61 03 80                                            a..

00000329 <_E3>:
     329:	67 03 08                                            g..

0000032c <_E4>:
     32c:	67 03 10                                            g..

0000032f <_E5>:
     32f:	67 03 20                                            g. 

00000332 <_E7>:
     332:	67 03 80                                            g..

00000335 <_G5>:
     335:	6d 03 20                                            m. 

00000338 <_H3>:
     338:	73 03 08                                            s..

0000033b <_H4>:
     33b:	73 03 10                                            s..

0000033e <_H5>:
     33e:	73 03 20                                            s. 

00000341 <_H6>:
     341:	73 03 40                                            s.@

00000344 <_L0>:
     344:	79 03 01                                            y..

00000347 <_L1>:
     347:	79 03 02                                            y..

0000034a <_L3>:
     34a:	79 03 08                                            y..

0000034d <_L4>:
     34d:	79 03 10                                            y..

00000350 <_L5>:
     350:	79 03 20                                            y. 

00000353 <AVcc_MV>:
     353:	88 13                                               ..

00000355 <_PORTB>:
     355:	25 00 24 00 23 00                                   %.$.#.

0000035b <_PORTC>:
     35b:	28 00 27 00 26 00                                   (.'.&.

00000361 <_PORTD>:
     361:	2b 00 2a 00 29 00                                   +.*.).

00000367 <_PORTE>:
     367:	2e 00 2d 00 2c 00                                   ..-.,.

0000036d <_PORTG>:
     36d:	34 00 33 00 32 00                                   4.3.2.

00000373 <_PORTH>:
     373:	02 01 01 01 00 01                                   ......

00000379 <_PORTL>:
     379:	0b 01 0a 01 09 01                                   ......

0000037f <c_servoPWM>:
     37f:	71 11 69 11                                         q.i.

00000383 <__c.1911>:
     383:	20 45 72 72 6f 72 3a 25 64 0d 0a 00                  Error:%d...

0000038f <__c.1909>:
     38f:	55 73 65 72 00                                      User.

00000394 <__c.1907>:
     394:	57 65 62 62 6f 74 4c 69 62 00                       WebbotLib.

0000039e <atoz>:
     39e:	ee 3e 9c 7a 9e 8e f6 2e 0c 78 ae 1c aa 2a 3a ce     .>.z.....x...*:.
     3ae:	e6 0a b6 1e 38 7c b8 6e 76 da                       ....8|.nv.

000003b8 <digits>:
     3b8:	fc 60 da f2 66 b6 3e e0 fe e6                       .`..f.>...

000003c2 <c_hw_uart>:
     3c2:	00 18 b6 18 d2 18 8b 18 bd 18 a1 18 00 40 7a 10     .............@z.
     3d2:	f3 5a 00 a0 72 4e 18 09 00 10 a5 d4 e8 00 00 e8     .Z..rN..........
     3e2:	76 48 17 00 00 e4 0b 54 02 00 00 ca 9a 3b 00 00     vH.....T.....;..
     3f2:	00 e1 f5 05 00 00 80 96 98 00 00 00 40 42 0f 00     ............@B..
     402:	00 00 a0 86 01 00 00 00 10 27 00 00 00 00 e8 03     .........'......
     412:	00 00 00 00 64 00 00 00 00 00 0a 00 00 00 00 00     ....d...........
     422:	01 00 00 00 00 00 2c 76 d8 88 dc 67 4f 08 23 df     ......,v...gO.#.
     432:	c1 df ae 59 e1 b1 b7 96 e5 e3 e4 53 c6 3a e6 51     ...Y.......S.:.Q
     442:	99 76 96 e8 e6 c2 84 26 eb 89 8c 9b 62 ed 40 7c     .v.....&....b.@|
     452:	6f fc ef bc 9c 9f 40 f2 ba a5 6f a5 f4 90 05 5a     o.....@...o....Z
     462:	2a f7 5c 93 6b 6c f9 67 6d c1 1b fc e0 e4 0d 47     *.\.kl.gm......G
     472:	fe f5 20 e6 b5 00 d0 ed 90 2e 03 00 94 35 77 05     .. ..........5w.
     482:	00 80 84 1e 08 00 00 20 4e 0a 00 00 00 c8 0c 33     ....... N......3
     492:	33 33 33 0f 98 6e 12 83 11 41 ef 8d 21 14 89 3b     333..n...A..!..;
     4a2:	e6 55 16 cf fe e6 db 18 d1 84 4b 38 1b f7 7c 1d     .U........K8..|.
     4b2:	90 1d a4 bb e4 24 20 32 84 72 5e 22 81 00 c9 f1     .....$ 2.r^"....
     4c2:	24 ec a1 e5 3d 27                                   $...='

000004c8 <__ctors_start>:
     4c8:	89 06       	cpc	r8, r25
     4ca:	ed 0f       	add	r30, r29
     4cc:	ef 0f       	add	r30, r31

000004ce <__ctors_end>:
     4ce:	7c 06       	cpc	r7, r28

000004d0 <__dtors_end>:
     4d0:	11 24       	eor	r1, r1
     4d2:	1f be       	out	0x3f, r1	; 63
     4d4:	cf ef       	ldi	r28, 0xFF	; 255
     4d6:	d1 e2       	ldi	r29, 0x21	; 33
     4d8:	de bf       	out	0x3e, r29	; 62
     4da:	cd bf       	out	0x3d, r28	; 61

000004dc <__do_copy_data>:
     4dc:	13 e0       	ldi	r17, 0x03	; 3
     4de:	a0 e0       	ldi	r26, 0x00	; 0
     4e0:	b2 e0       	ldi	r27, 0x02	; 2
     4e2:	ee e9       	ldi	r30, 0x9E	; 158
     4e4:	f0 e4       	ldi	r31, 0x40	; 64
     4e6:	02 c0       	rjmp	.+4      	; 0x4ec <.do_copy_data_start>

000004e8 <.do_copy_data_loop>:
     4e8:	05 90       	lpm	r0, Z+
     4ea:	0d 92       	st	X+, r0

000004ec <.do_copy_data_start>:
     4ec:	ac 31       	cpi	r26, 0x1C	; 28
     4ee:	b1 07       	cpc	r27, r17
     4f0:	d9 f7       	brne	.-10     	; 0x4e8 <.do_copy_data_loop>

000004f2 <__do_clear_bss>:
     4f2:	14 e0       	ldi	r17, 0x04	; 4
     4f4:	ac e1       	ldi	r26, 0x1C	; 28
     4f6:	b3 e0       	ldi	r27, 0x03	; 3
     4f8:	01 c0       	rjmp	.+2      	; 0x4fc <.do_clear_bss_start>

000004fa <.do_clear_bss_loop>:
     4fa:	1d 92       	st	X+, r1

000004fc <.do_clear_bss_start>:
     4fc:	a4 36       	cpi	r26, 0x64	; 100
     4fe:	b1 07       	cpc	r27, r17
     500:	e1 f7       	brne	.-8      	; 0x4fa <.do_clear_bss_loop>

00000502 <__do_global_ctors>:
     502:	14 e0       	ldi	r17, 0x04	; 4
     504:	ce ec       	ldi	r28, 0xCE	; 206
     506:	d4 e0       	ldi	r29, 0x04	; 4
     508:	04 c0       	rjmp	.+8      	; 0x512 <.do_global_ctors_start>

0000050a <.do_global_ctors_loop>:
     50a:	22 97       	sbiw	r28, 0x02	; 2
     50c:	fe 01       	movw	r30, r28
     50e:	0e 94 3e 20 	call	0x407c	; 0x407c <__tablejump__>

00000512 <.do_global_ctors_start>:
     512:	c8 3c       	cpi	r28, 0xC8	; 200
     514:	d1 07       	cpc	r29, r17
     516:	c9 f7       	brne	.-14     	; 0x50a <.do_global_ctors_loop>
     518:	0e 94 85 14 	call	0x290a	; 0x290a <main>
     51c:	0c 94 59 1d 	jmp	0x3ab2	; 0x3ab2 <exit>

00000520 <__bad_interrupt>:
     520:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000524 <vfprintf>:
     524:	a1 e1       	ldi	r26, 0x11	; 17
     526:	b0 e0       	ldi	r27, 0x00	; 0
     528:	e8 e9       	ldi	r30, 0x98	; 152
     52a:	f2 e0       	ldi	r31, 0x02	; 2
     52c:	0c 94 05 20 	jmp	0x400a	; 0x400a <__prologue_saves__>
     530:	3c 01       	movw	r6, r24
     532:	7f 87       	std	Y+15, r23	; 0x0f
     534:	6e 87       	std	Y+14, r22	; 0x0e
     536:	6a 01       	movw	r12, r20
     538:	fc 01       	movw	r30, r24
     53a:	17 82       	std	Z+7, r1	; 0x07
     53c:	16 82       	std	Z+6, r1	; 0x06
     53e:	83 81       	ldd	r24, Z+3	; 0x03
     540:	81 fd       	sbrc	r24, 1
     542:	03 c0       	rjmp	.+6      	; 0x54a <vfprintf+0x26>
     544:	6f ef       	ldi	r22, 0xFF	; 255
     546:	7f ef       	ldi	r23, 0xFF	; 255
     548:	71 c3       	rjmp	.+1762   	; 0xc2c <vfprintf+0x708>
     54a:	9e 01       	movw	r18, r28
     54c:	2f 5f       	subi	r18, 0xFF	; 255
     54e:	3f 4f       	sbci	r19, 0xFF	; 255
     550:	39 8b       	std	Y+17, r19	; 0x11
     552:	28 8b       	std	Y+16, r18	; 0x10
     554:	f3 01       	movw	r30, r6
     556:	23 81       	ldd	r18, Z+3	; 0x03
     558:	ee 85       	ldd	r30, Y+14	; 0x0e
     55a:	ff 85       	ldd	r31, Y+15	; 0x0f
     55c:	23 fd       	sbrc	r18, 3
     55e:	85 91       	lpm	r24, Z+
     560:	23 ff       	sbrs	r18, 3
     562:	81 91       	ld	r24, Z+
     564:	ff 87       	std	Y+15, r31	; 0x0f
     566:	ee 87       	std	Y+14, r30	; 0x0e
     568:	88 23       	and	r24, r24
     56a:	09 f4       	brne	.+2      	; 0x56e <vfprintf+0x4a>
     56c:	5c c3       	rjmp	.+1720   	; 0xc26 <vfprintf+0x702>
     56e:	85 32       	cpi	r24, 0x25	; 37
     570:	51 f4       	brne	.+20     	; 0x586 <vfprintf+0x62>
     572:	ee 85       	ldd	r30, Y+14	; 0x0e
     574:	ff 85       	ldd	r31, Y+15	; 0x0f
     576:	23 fd       	sbrc	r18, 3
     578:	85 91       	lpm	r24, Z+
     57a:	23 ff       	sbrs	r18, 3
     57c:	81 91       	ld	r24, Z+
     57e:	ff 87       	std	Y+15, r31	; 0x0f
     580:	ee 87       	std	Y+14, r30	; 0x0e
     582:	85 32       	cpi	r24, 0x25	; 37
     584:	29 f4       	brne	.+10     	; 0x590 <vfprintf+0x6c>
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	b3 01       	movw	r22, r6
     58a:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     58e:	e2 cf       	rjmp	.-60     	; 0x554 <vfprintf+0x30>
     590:	98 2f       	mov	r25, r24
     592:	10 e0       	ldi	r17, 0x00	; 0
     594:	88 24       	eor	r8, r8
     596:	99 24       	eor	r9, r9
     598:	10 32       	cpi	r17, 0x20	; 32
     59a:	b0 f4       	brcc	.+44     	; 0x5c8 <vfprintf+0xa4>
     59c:	9b 32       	cpi	r25, 0x2B	; 43
     59e:	69 f0       	breq	.+26     	; 0x5ba <vfprintf+0x96>
     5a0:	9c 32       	cpi	r25, 0x2C	; 44
     5a2:	28 f4       	brcc	.+10     	; 0x5ae <vfprintf+0x8a>
     5a4:	90 32       	cpi	r25, 0x20	; 32
     5a6:	51 f0       	breq	.+20     	; 0x5bc <vfprintf+0x98>
     5a8:	93 32       	cpi	r25, 0x23	; 35
     5aa:	71 f4       	brne	.+28     	; 0x5c8 <vfprintf+0xa4>
     5ac:	0b c0       	rjmp	.+22     	; 0x5c4 <vfprintf+0xa0>
     5ae:	9d 32       	cpi	r25, 0x2D	; 45
     5b0:	39 f0       	breq	.+14     	; 0x5c0 <vfprintf+0x9c>
     5b2:	90 33       	cpi	r25, 0x30	; 48
     5b4:	49 f4       	brne	.+18     	; 0x5c8 <vfprintf+0xa4>
     5b6:	11 60       	ori	r17, 0x01	; 1
     5b8:	28 c0       	rjmp	.+80     	; 0x60a <vfprintf+0xe6>
     5ba:	12 60       	ori	r17, 0x02	; 2
     5bc:	14 60       	ori	r17, 0x04	; 4
     5be:	25 c0       	rjmp	.+74     	; 0x60a <vfprintf+0xe6>
     5c0:	18 60       	ori	r17, 0x08	; 8
     5c2:	23 c0       	rjmp	.+70     	; 0x60a <vfprintf+0xe6>
     5c4:	10 61       	ori	r17, 0x10	; 16
     5c6:	21 c0       	rjmp	.+66     	; 0x60a <vfprintf+0xe6>
     5c8:	17 fd       	sbrc	r17, 7
     5ca:	2a c0       	rjmp	.+84     	; 0x620 <vfprintf+0xfc>
     5cc:	89 2f       	mov	r24, r25
     5ce:	80 53       	subi	r24, 0x30	; 48
     5d0:	8a 30       	cpi	r24, 0x0A	; 10
     5d2:	78 f4       	brcc	.+30     	; 0x5f2 <vfprintf+0xce>
     5d4:	16 ff       	sbrs	r17, 6
     5d6:	06 c0       	rjmp	.+12     	; 0x5e4 <vfprintf+0xc0>
     5d8:	fa e0       	ldi	r31, 0x0A	; 10
     5da:	9f 9e       	mul	r9, r31
     5dc:	90 2c       	mov	r9, r0
     5de:	11 24       	eor	r1, r1
     5e0:	98 0e       	add	r9, r24
     5e2:	13 c0       	rjmp	.+38     	; 0x60a <vfprintf+0xe6>
     5e4:	3a e0       	ldi	r19, 0x0A	; 10
     5e6:	83 9e       	mul	r8, r19
     5e8:	80 2c       	mov	r8, r0
     5ea:	11 24       	eor	r1, r1
     5ec:	88 0e       	add	r8, r24
     5ee:	10 62       	ori	r17, 0x20	; 32
     5f0:	0c c0       	rjmp	.+24     	; 0x60a <vfprintf+0xe6>
     5f2:	9e 32       	cpi	r25, 0x2E	; 46
     5f4:	21 f4       	brne	.+8      	; 0x5fe <vfprintf+0xda>
     5f6:	16 fd       	sbrc	r17, 6
     5f8:	16 c3       	rjmp	.+1580   	; 0xc26 <vfprintf+0x702>
     5fa:	10 64       	ori	r17, 0x40	; 64
     5fc:	06 c0       	rjmp	.+12     	; 0x60a <vfprintf+0xe6>
     5fe:	9c 36       	cpi	r25, 0x6C	; 108
     600:	11 f4       	brne	.+4      	; 0x606 <vfprintf+0xe2>
     602:	10 68       	ori	r17, 0x80	; 128
     604:	02 c0       	rjmp	.+4      	; 0x60a <vfprintf+0xe6>
     606:	98 36       	cpi	r25, 0x68	; 104
     608:	59 f4       	brne	.+22     	; 0x620 <vfprintf+0xfc>
     60a:	ee 85       	ldd	r30, Y+14	; 0x0e
     60c:	ff 85       	ldd	r31, Y+15	; 0x0f
     60e:	23 fd       	sbrc	r18, 3
     610:	95 91       	lpm	r25, Z+
     612:	23 ff       	sbrs	r18, 3
     614:	91 91       	ld	r25, Z+
     616:	ff 87       	std	Y+15, r31	; 0x0f
     618:	ee 87       	std	Y+14, r30	; 0x0e
     61a:	99 23       	and	r25, r25
     61c:	09 f0       	breq	.+2      	; 0x620 <vfprintf+0xfc>
     61e:	bc cf       	rjmp	.-136    	; 0x598 <vfprintf+0x74>
     620:	89 2f       	mov	r24, r25
     622:	85 54       	subi	r24, 0x45	; 69
     624:	83 30       	cpi	r24, 0x03	; 3
     626:	20 f4       	brcc	.+8      	; 0x630 <vfprintf+0x10c>
     628:	81 2f       	mov	r24, r17
     62a:	80 61       	ori	r24, 0x10	; 16
     62c:	90 5e       	subi	r25, 0xE0	; 224
     62e:	07 c0       	rjmp	.+14     	; 0x63e <vfprintf+0x11a>
     630:	89 2f       	mov	r24, r25
     632:	85 56       	subi	r24, 0x65	; 101
     634:	83 30       	cpi	r24, 0x03	; 3
     636:	08 f0       	brcs	.+2      	; 0x63a <vfprintf+0x116>
     638:	a1 c1       	rjmp	.+834    	; 0x97c <vfprintf+0x458>
     63a:	81 2f       	mov	r24, r17
     63c:	8f 7e       	andi	r24, 0xEF	; 239
     63e:	86 fd       	sbrc	r24, 6
     640:	02 c0       	rjmp	.+4      	; 0x646 <vfprintf+0x122>
     642:	76 e0       	ldi	r23, 0x06	; 6
     644:	97 2e       	mov	r9, r23
     646:	6f e3       	ldi	r22, 0x3F	; 63
     648:	f6 2e       	mov	r15, r22
     64a:	f8 22       	and	r15, r24
     64c:	95 36       	cpi	r25, 0x65	; 101
     64e:	19 f4       	brne	.+6      	; 0x656 <vfprintf+0x132>
     650:	f0 e4       	ldi	r31, 0x40	; 64
     652:	ff 2a       	or	r15, r31
     654:	07 c0       	rjmp	.+14     	; 0x664 <vfprintf+0x140>
     656:	96 36       	cpi	r25, 0x66	; 102
     658:	19 f4       	brne	.+6      	; 0x660 <vfprintf+0x13c>
     65a:	20 e8       	ldi	r18, 0x80	; 128
     65c:	f2 2a       	or	r15, r18
     65e:	02 c0       	rjmp	.+4      	; 0x664 <vfprintf+0x140>
     660:	91 10       	cpse	r9, r1
     662:	9a 94       	dec	r9
     664:	f7 fe       	sbrs	r15, 7
     666:	0b c0       	rjmp	.+22     	; 0x67e <vfprintf+0x15a>
     668:	3b e3       	ldi	r19, 0x3B	; 59
     66a:	39 15       	cp	r19, r9
     66c:	20 f4       	brcc	.+8      	; 0x676 <vfprintf+0x152>
     66e:	27 e0       	ldi	r18, 0x07	; 7
     670:	5c e3       	ldi	r21, 0x3C	; 60
     672:	b5 2e       	mov	r11, r21
     674:	0e c0       	rjmp	.+28     	; 0x692 <vfprintf+0x16e>
     676:	b9 2c       	mov	r11, r9
     678:	b3 94       	inc	r11
     67a:	27 e0       	ldi	r18, 0x07	; 7
     67c:	0a c0       	rjmp	.+20     	; 0x692 <vfprintf+0x16e>
     67e:	47 e0       	ldi	r20, 0x07	; 7
     680:	49 15       	cp	r20, r9
     682:	28 f4       	brcc	.+10     	; 0x68e <vfprintf+0x16a>
     684:	27 e0       	ldi	r18, 0x07	; 7
     686:	bb 24       	eor	r11, r11
     688:	47 e0       	ldi	r20, 0x07	; 7
     68a:	94 2e       	mov	r9, r20
     68c:	02 c0       	rjmp	.+4      	; 0x692 <vfprintf+0x16e>
     68e:	29 2d       	mov	r18, r9
     690:	bb 24       	eor	r11, r11
     692:	c6 01       	movw	r24, r12
     694:	04 96       	adiw	r24, 0x04	; 4
     696:	9d 87       	std	Y+13, r25	; 0x0d
     698:	8c 87       	std	Y+12, r24	; 0x0c
     69a:	f6 01       	movw	r30, r12
     69c:	60 81       	ld	r22, Z
     69e:	71 81       	ldd	r23, Z+1	; 0x01
     6a0:	82 81       	ldd	r24, Z+2	; 0x02
     6a2:	93 81       	ldd	r25, Z+3	; 0x03
     6a4:	ae 01       	movw	r20, r28
     6a6:	4f 5f       	subi	r20, 0xFF	; 255
     6a8:	5f 4f       	sbci	r21, 0xFF	; 255
     6aa:	0b 2d       	mov	r16, r11
     6ac:	0e 94 5c 1d 	call	0x3ab8	; 0x3ab8 <__ftoa_engine>
     6b0:	6c 01       	movw	r12, r24
     6b2:	09 81       	ldd	r16, Y+1	; 0x01
     6b4:	20 2e       	mov	r2, r16
     6b6:	33 24       	eor	r3, r3
     6b8:	00 ff       	sbrs	r16, 0
     6ba:	04 c0       	rjmp	.+8      	; 0x6c4 <vfprintf+0x1a0>
     6bc:	03 fd       	sbrc	r16, 3
     6be:	02 c0       	rjmp	.+4      	; 0x6c4 <vfprintf+0x1a0>
     6c0:	1d e2       	ldi	r17, 0x2D	; 45
     6c2:	09 c0       	rjmp	.+18     	; 0x6d6 <vfprintf+0x1b2>
     6c4:	f1 fe       	sbrs	r15, 1
     6c6:	02 c0       	rjmp	.+4      	; 0x6cc <vfprintf+0x1a8>
     6c8:	1b e2       	ldi	r17, 0x2B	; 43
     6ca:	05 c0       	rjmp	.+10     	; 0x6d6 <vfprintf+0x1b2>
     6cc:	f2 fc       	sbrc	r15, 2
     6ce:	02 c0       	rjmp	.+4      	; 0x6d4 <vfprintf+0x1b0>
     6d0:	10 e0       	ldi	r17, 0x00	; 0
     6d2:	01 c0       	rjmp	.+2      	; 0x6d6 <vfprintf+0x1b2>
     6d4:	10 e2       	ldi	r17, 0x20	; 32
     6d6:	c1 01       	movw	r24, r2
     6d8:	8c 70       	andi	r24, 0x0C	; 12
     6da:	90 70       	andi	r25, 0x00	; 0
     6dc:	89 2b       	or	r24, r25
     6de:	b9 f1       	breq	.+110    	; 0x74e <vfprintf+0x22a>
     6e0:	11 23       	and	r17, r17
     6e2:	11 f4       	brne	.+4      	; 0x6e8 <vfprintf+0x1c4>
     6e4:	83 e0       	ldi	r24, 0x03	; 3
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <vfprintf+0x1c6>
     6e8:	84 e0       	ldi	r24, 0x04	; 4
     6ea:	88 15       	cp	r24, r8
     6ec:	10 f0       	brcs	.+4      	; 0x6f2 <vfprintf+0x1ce>
     6ee:	88 24       	eor	r8, r8
     6f0:	0a c0       	rjmp	.+20     	; 0x706 <vfprintf+0x1e2>
     6f2:	88 1a       	sub	r8, r24
     6f4:	f3 fc       	sbrc	r15, 3
     6f6:	07 c0       	rjmp	.+14     	; 0x706 <vfprintf+0x1e2>
     6f8:	80 e2       	ldi	r24, 0x20	; 32
     6fa:	90 e0       	ldi	r25, 0x00	; 0
     6fc:	b3 01       	movw	r22, r6
     6fe:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     702:	8a 94       	dec	r8
     704:	c9 f7       	brne	.-14     	; 0x6f8 <vfprintf+0x1d4>
     706:	11 23       	and	r17, r17
     708:	29 f0       	breq	.+10     	; 0x714 <vfprintf+0x1f0>
     70a:	81 2f       	mov	r24, r17
     70c:	90 e0       	ldi	r25, 0x00	; 0
     70e:	b3 01       	movw	r22, r6
     710:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     714:	23 fe       	sbrs	r2, 3
     716:	03 c0       	rjmp	.+6      	; 0x71e <vfprintf+0x1fa>
     718:	04 ee       	ldi	r16, 0xE4	; 228
     71a:	10 e0       	ldi	r17, 0x00	; 0
     71c:	0e c0       	rjmp	.+28     	; 0x73a <vfprintf+0x216>
     71e:	08 ee       	ldi	r16, 0xE8	; 232
     720:	10 e0       	ldi	r17, 0x00	; 0
     722:	0b c0       	rjmp	.+22     	; 0x73a <vfprintf+0x216>
     724:	e1 14       	cp	r14, r1
     726:	f1 04       	cpc	r15, r1
     728:	09 f0       	breq	.+2      	; 0x72c <vfprintf+0x208>
     72a:	80 52       	subi	r24, 0x20	; 32
     72c:	90 e0       	ldi	r25, 0x00	; 0
     72e:	b3 01       	movw	r22, r6
     730:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     734:	0f 5f       	subi	r16, 0xFF	; 255
     736:	1f 4f       	sbci	r17, 0xFF	; 255
     738:	05 c0       	rjmp	.+10     	; 0x744 <vfprintf+0x220>
     73a:	ef 2c       	mov	r14, r15
     73c:	ff 24       	eor	r15, r15
     73e:	f0 e1       	ldi	r31, 0x10	; 16
     740:	ef 22       	and	r14, r31
     742:	ff 24       	eor	r15, r15
     744:	f8 01       	movw	r30, r16
     746:	84 91       	lpm	r24, Z+
     748:	88 23       	and	r24, r24
     74a:	61 f7       	brne	.-40     	; 0x724 <vfprintf+0x200>
     74c:	14 c1       	rjmp	.+552    	; 0x976 <vfprintf+0x452>
     74e:	f7 fe       	sbrs	r15, 7
     750:	12 c0       	rjmp	.+36     	; 0x776 <vfprintf+0x252>
     752:	bc 0c       	add	r11, r12
     754:	24 fe       	sbrs	r2, 4
     756:	04 c0       	rjmp	.+8      	; 0x760 <vfprintf+0x23c>
     758:	8a 81       	ldd	r24, Y+2	; 0x02
     75a:	81 33       	cpi	r24, 0x31	; 49
     75c:	09 f4       	brne	.+2      	; 0x760 <vfprintf+0x23c>
     75e:	ba 94       	dec	r11
     760:	1b 14       	cp	r1, r11
     762:	1c f0       	brlt	.+6      	; 0x76a <vfprintf+0x246>
     764:	bb 24       	eor	r11, r11
     766:	b3 94       	inc	r11
     768:	2d c0       	rjmp	.+90     	; 0x7c4 <vfprintf+0x2a0>
     76a:	f8 e0       	ldi	r31, 0x08	; 8
     76c:	fb 15       	cp	r31, r11
     76e:	50 f5       	brcc	.+84     	; 0x7c4 <vfprintf+0x2a0>
     770:	38 e0       	ldi	r19, 0x08	; 8
     772:	b3 2e       	mov	r11, r19
     774:	27 c0       	rjmp	.+78     	; 0x7c4 <vfprintf+0x2a0>
     776:	f6 fc       	sbrc	r15, 6
     778:	25 c0       	rjmp	.+74     	; 0x7c4 <vfprintf+0x2a0>
     77a:	89 2d       	mov	r24, r9
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	8c 15       	cp	r24, r12
     780:	9d 05       	cpc	r25, r13
     782:	4c f0       	brlt	.+18     	; 0x796 <vfprintf+0x272>
     784:	2c ef       	ldi	r18, 0xFC	; 252
     786:	c2 16       	cp	r12, r18
     788:	2f ef       	ldi	r18, 0xFF	; 255
     78a:	d2 06       	cpc	r13, r18
     78c:	24 f0       	brlt	.+8      	; 0x796 <vfprintf+0x272>
     78e:	30 e8       	ldi	r19, 0x80	; 128
     790:	f3 2a       	or	r15, r19
     792:	01 c0       	rjmp	.+2      	; 0x796 <vfprintf+0x272>
     794:	9a 94       	dec	r9
     796:	99 20       	and	r9, r9
     798:	49 f0       	breq	.+18     	; 0x7ac <vfprintf+0x288>
     79a:	e2 e0       	ldi	r30, 0x02	; 2
     79c:	f0 e0       	ldi	r31, 0x00	; 0
     79e:	ec 0f       	add	r30, r28
     7a0:	fd 1f       	adc	r31, r29
     7a2:	e9 0d       	add	r30, r9
     7a4:	f1 1d       	adc	r31, r1
     7a6:	80 81       	ld	r24, Z
     7a8:	80 33       	cpi	r24, 0x30	; 48
     7aa:	a1 f3       	breq	.-24     	; 0x794 <vfprintf+0x270>
     7ac:	f7 fe       	sbrs	r15, 7
     7ae:	0a c0       	rjmp	.+20     	; 0x7c4 <vfprintf+0x2a0>
     7b0:	b9 2c       	mov	r11, r9
     7b2:	b3 94       	inc	r11
     7b4:	89 2d       	mov	r24, r9
     7b6:	90 e0       	ldi	r25, 0x00	; 0
     7b8:	c8 16       	cp	r12, r24
     7ba:	d9 06       	cpc	r13, r25
     7bc:	14 f0       	brlt	.+4      	; 0x7c2 <vfprintf+0x29e>
     7be:	99 24       	eor	r9, r9
     7c0:	01 c0       	rjmp	.+2      	; 0x7c4 <vfprintf+0x2a0>
     7c2:	9c 18       	sub	r9, r12
     7c4:	f7 fc       	sbrc	r15, 7
     7c6:	03 c0       	rjmp	.+6      	; 0x7ce <vfprintf+0x2aa>
     7c8:	25 e0       	ldi	r18, 0x05	; 5
     7ca:	30 e0       	ldi	r19, 0x00	; 0
     7cc:	09 c0       	rjmp	.+18     	; 0x7e0 <vfprintf+0x2bc>
     7ce:	1c 14       	cp	r1, r12
     7d0:	1d 04       	cpc	r1, r13
     7d2:	1c f0       	brlt	.+6      	; 0x7da <vfprintf+0x2b6>
     7d4:	21 e0       	ldi	r18, 0x01	; 1
     7d6:	30 e0       	ldi	r19, 0x00	; 0
     7d8:	03 c0       	rjmp	.+6      	; 0x7e0 <vfprintf+0x2bc>
     7da:	96 01       	movw	r18, r12
     7dc:	2f 5f       	subi	r18, 0xFF	; 255
     7de:	3f 4f       	sbci	r19, 0xFF	; 255
     7e0:	11 23       	and	r17, r17
     7e2:	11 f0       	breq	.+4      	; 0x7e8 <vfprintf+0x2c4>
     7e4:	2f 5f       	subi	r18, 0xFF	; 255
     7e6:	3f 4f       	sbci	r19, 0xFF	; 255
     7e8:	99 20       	and	r9, r9
     7ea:	29 f0       	breq	.+10     	; 0x7f6 <vfprintf+0x2d2>
     7ec:	89 2d       	mov	r24, r9
     7ee:	90 e0       	ldi	r25, 0x00	; 0
     7f0:	01 96       	adiw	r24, 0x01	; 1
     7f2:	28 0f       	add	r18, r24
     7f4:	39 1f       	adc	r19, r25
     7f6:	88 2d       	mov	r24, r8
     7f8:	90 e0       	ldi	r25, 0x00	; 0
     7fa:	28 17       	cp	r18, r24
     7fc:	39 07       	cpc	r19, r25
     7fe:	14 f0       	brlt	.+4      	; 0x804 <vfprintf+0x2e0>
     800:	88 24       	eor	r8, r8
     802:	01 c0       	rjmp	.+2      	; 0x806 <vfprintf+0x2e2>
     804:	82 1a       	sub	r8, r18
     806:	4f 2c       	mov	r4, r15
     808:	55 24       	eor	r5, r5
     80a:	c2 01       	movw	r24, r4
     80c:	89 70       	andi	r24, 0x09	; 9
     80e:	90 70       	andi	r25, 0x00	; 0
     810:	89 2b       	or	r24, r25
     812:	39 f0       	breq	.+14     	; 0x822 <vfprintf+0x2fe>
     814:	08 c0       	rjmp	.+16     	; 0x826 <vfprintf+0x302>
     816:	80 e2       	ldi	r24, 0x20	; 32
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	b3 01       	movw	r22, r6
     81c:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     820:	8a 94       	dec	r8
     822:	88 20       	and	r8, r8
     824:	c1 f7       	brne	.-16     	; 0x816 <vfprintf+0x2f2>
     826:	11 23       	and	r17, r17
     828:	29 f0       	breq	.+10     	; 0x834 <vfprintf+0x310>
     82a:	81 2f       	mov	r24, r17
     82c:	90 e0       	ldi	r25, 0x00	; 0
     82e:	b3 01       	movw	r22, r6
     830:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     834:	43 fe       	sbrs	r4, 3
     836:	07 c0       	rjmp	.+14     	; 0x846 <vfprintf+0x322>
     838:	08 c0       	rjmp	.+16     	; 0x84a <vfprintf+0x326>
     83a:	80 e3       	ldi	r24, 0x30	; 48
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	b3 01       	movw	r22, r6
     840:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     844:	8a 94       	dec	r8
     846:	88 20       	and	r8, r8
     848:	c1 f7       	brne	.-16     	; 0x83a <vfprintf+0x316>
     84a:	f7 fe       	sbrs	r15, 7
     84c:	46 c0       	rjmp	.+140    	; 0x8da <vfprintf+0x3b6>
     84e:	86 01       	movw	r16, r12
     850:	d7 fe       	sbrs	r13, 7
     852:	02 c0       	rjmp	.+4      	; 0x858 <vfprintf+0x334>
     854:	00 e0       	ldi	r16, 0x00	; 0
     856:	10 e0       	ldi	r17, 0x00	; 0
     858:	76 01       	movw	r14, r12
     85a:	08 94       	sec
     85c:	e1 1c       	adc	r14, r1
     85e:	f1 1c       	adc	r15, r1
     860:	e0 1a       	sub	r14, r16
     862:	f1 0a       	sbc	r15, r17
     864:	41 e0       	ldi	r20, 0x01	; 1
     866:	50 e0       	ldi	r21, 0x00	; 0
     868:	4c 0f       	add	r20, r28
     86a:	5d 1f       	adc	r21, r29
     86c:	e4 0e       	add	r14, r20
     86e:	f5 1e       	adc	r15, r21
     870:	26 01       	movw	r4, r12
     872:	4b 18       	sub	r4, r11
     874:	51 08       	sbc	r5, r1
     876:	89 2d       	mov	r24, r9
     878:	90 e0       	ldi	r25, 0x00	; 0
     87a:	aa 24       	eor	r10, r10
     87c:	bb 24       	eor	r11, r11
     87e:	a8 1a       	sub	r10, r24
     880:	b9 0a       	sbc	r11, r25
     882:	5f ef       	ldi	r21, 0xFF	; 255
     884:	0f 3f       	cpi	r16, 0xFF	; 255
     886:	15 07       	cpc	r17, r21
     888:	29 f4       	brne	.+10     	; 0x894 <vfprintf+0x370>
     88a:	8e e2       	ldi	r24, 0x2E	; 46
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	b3 01       	movw	r22, r6
     890:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     894:	c0 16       	cp	r12, r16
     896:	d1 06       	cpc	r13, r17
     898:	34 f0       	brlt	.+12     	; 0x8a6 <vfprintf+0x382>
     89a:	40 16       	cp	r4, r16
     89c:	51 06       	cpc	r5, r17
     89e:	1c f4       	brge	.+6      	; 0x8a6 <vfprintf+0x382>
     8a0:	f7 01       	movw	r30, r14
     8a2:	80 81       	ld	r24, Z
     8a4:	01 c0       	rjmp	.+2      	; 0x8a8 <vfprintf+0x384>
     8a6:	80 e3       	ldi	r24, 0x30	; 48
     8a8:	01 50       	subi	r16, 0x01	; 1
     8aa:	10 40       	sbci	r17, 0x00	; 0
     8ac:	08 94       	sec
     8ae:	e1 1c       	adc	r14, r1
     8b0:	f1 1c       	adc	r15, r1
     8b2:	0a 15       	cp	r16, r10
     8b4:	1b 05       	cpc	r17, r11
     8b6:	2c f0       	brlt	.+10     	; 0x8c2 <vfprintf+0x39e>
     8b8:	90 e0       	ldi	r25, 0x00	; 0
     8ba:	b3 01       	movw	r22, r6
     8bc:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     8c0:	e0 cf       	rjmp	.-64     	; 0x882 <vfprintf+0x35e>
     8c2:	0c 15       	cp	r16, r12
     8c4:	1d 05       	cpc	r17, r13
     8c6:	39 f4       	brne	.+14     	; 0x8d6 <vfprintf+0x3b2>
     8c8:	9a 81       	ldd	r25, Y+2	; 0x02
     8ca:	96 33       	cpi	r25, 0x36	; 54
     8cc:	18 f4       	brcc	.+6      	; 0x8d4 <vfprintf+0x3b0>
     8ce:	95 33       	cpi	r25, 0x35	; 53
     8d0:	11 f4       	brne	.+4      	; 0x8d6 <vfprintf+0x3b2>
     8d2:	24 fe       	sbrs	r2, 4
     8d4:	81 e3       	ldi	r24, 0x31	; 49
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	4b c0       	rjmp	.+150    	; 0x970 <vfprintf+0x44c>
     8da:	8a 81       	ldd	r24, Y+2	; 0x02
     8dc:	81 33       	cpi	r24, 0x31	; 49
     8de:	09 f0       	breq	.+2      	; 0x8e2 <vfprintf+0x3be>
     8e0:	0f 7e       	andi	r16, 0xEF	; 239
     8e2:	90 e0       	ldi	r25, 0x00	; 0
     8e4:	b3 01       	movw	r22, r6
     8e6:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     8ea:	99 20       	and	r9, r9
     8ec:	a1 f0       	breq	.+40     	; 0x916 <vfprintf+0x3f2>
     8ee:	8e e2       	ldi	r24, 0x2E	; 46
     8f0:	90 e0       	ldi	r25, 0x00	; 0
     8f2:	b3 01       	movw	r22, r6
     8f4:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     8f8:	12 e0       	ldi	r17, 0x02	; 2
     8fa:	e1 e0       	ldi	r30, 0x01	; 1
     8fc:	f0 e0       	ldi	r31, 0x00	; 0
     8fe:	ec 0f       	add	r30, r28
     900:	fd 1f       	adc	r31, r29
     902:	e1 0f       	add	r30, r17
     904:	f1 1d       	adc	r31, r1
     906:	1f 5f       	subi	r17, 0xFF	; 255
     908:	80 81       	ld	r24, Z
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	b3 01       	movw	r22, r6
     90e:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     912:	9a 94       	dec	r9
     914:	91 f7       	brne	.-28     	; 0x8fa <vfprintf+0x3d6>
     916:	44 fc       	sbrc	r4, 4
     918:	03 c0       	rjmp	.+6      	; 0x920 <vfprintf+0x3fc>
     91a:	85 e6       	ldi	r24, 0x65	; 101
     91c:	90 e0       	ldi	r25, 0x00	; 0
     91e:	02 c0       	rjmp	.+4      	; 0x924 <vfprintf+0x400>
     920:	85 e4       	ldi	r24, 0x45	; 69
     922:	90 e0       	ldi	r25, 0x00	; 0
     924:	b3 01       	movw	r22, r6
     926:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     92a:	d7 fc       	sbrc	r13, 7
     92c:	05 c0       	rjmp	.+10     	; 0x938 <vfprintf+0x414>
     92e:	c1 14       	cp	r12, r1
     930:	d1 04       	cpc	r13, r1
     932:	41 f4       	brne	.+16     	; 0x944 <vfprintf+0x420>
     934:	04 ff       	sbrs	r16, 4
     936:	06 c0       	rjmp	.+12     	; 0x944 <vfprintf+0x420>
     938:	d0 94       	com	r13
     93a:	c1 94       	neg	r12
     93c:	d1 08       	sbc	r13, r1
     93e:	d3 94       	inc	r13
     940:	8d e2       	ldi	r24, 0x2D	; 45
     942:	01 c0       	rjmp	.+2      	; 0x946 <vfprintf+0x422>
     944:	8b e2       	ldi	r24, 0x2B	; 43
     946:	90 e0       	ldi	r25, 0x00	; 0
     948:	b3 01       	movw	r22, r6
     94a:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     94e:	80 e3       	ldi	r24, 0x30	; 48
     950:	05 c0       	rjmp	.+10     	; 0x95c <vfprintf+0x438>
     952:	8f 5f       	subi	r24, 0xFF	; 255
     954:	26 ef       	ldi	r18, 0xF6	; 246
     956:	3f ef       	ldi	r19, 0xFF	; 255
     958:	c2 0e       	add	r12, r18
     95a:	d3 1e       	adc	r13, r19
     95c:	3a e0       	ldi	r19, 0x0A	; 10
     95e:	c3 16       	cp	r12, r19
     960:	d1 04       	cpc	r13, r1
     962:	bc f7       	brge	.-18     	; 0x952 <vfprintf+0x42e>
     964:	90 e0       	ldi	r25, 0x00	; 0
     966:	b3 01       	movw	r22, r6
     968:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     96c:	c6 01       	movw	r24, r12
     96e:	c0 96       	adiw	r24, 0x30	; 48
     970:	b3 01       	movw	r22, r6
     972:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     976:	cc 84       	ldd	r12, Y+12	; 0x0c
     978:	dd 84       	ldd	r13, Y+13	; 0x0d
     97a:	52 c1       	rjmp	.+676    	; 0xc20 <vfprintf+0x6fc>
     97c:	93 36       	cpi	r25, 0x63	; 99
     97e:	31 f0       	breq	.+12     	; 0x98c <vfprintf+0x468>
     980:	93 37       	cpi	r25, 0x73	; 115
     982:	99 f0       	breq	.+38     	; 0x9aa <vfprintf+0x486>
     984:	93 35       	cpi	r25, 0x53	; 83
     986:	09 f0       	breq	.+2      	; 0x98a <vfprintf+0x466>
     988:	59 c0       	rjmp	.+178    	; 0xa3c <vfprintf+0x518>
     98a:	23 c0       	rjmp	.+70     	; 0x9d2 <vfprintf+0x4ae>
     98c:	f6 01       	movw	r30, r12
     98e:	80 81       	ld	r24, Z
     990:	89 83       	std	Y+1, r24	; 0x01
     992:	5e 01       	movw	r10, r28
     994:	08 94       	sec
     996:	a1 1c       	adc	r10, r1
     998:	b1 1c       	adc	r11, r1
     99a:	22 e0       	ldi	r18, 0x02	; 2
     99c:	30 e0       	ldi	r19, 0x00	; 0
     99e:	c2 0e       	add	r12, r18
     9a0:	d3 1e       	adc	r13, r19
     9a2:	21 e0       	ldi	r18, 0x01	; 1
     9a4:	e2 2e       	mov	r14, r18
     9a6:	f1 2c       	mov	r15, r1
     9a8:	12 c0       	rjmp	.+36     	; 0x9ce <vfprintf+0x4aa>
     9aa:	f6 01       	movw	r30, r12
     9ac:	a0 80       	ld	r10, Z
     9ae:	b1 80       	ldd	r11, Z+1	; 0x01
     9b0:	16 fd       	sbrc	r17, 6
     9b2:	03 c0       	rjmp	.+6      	; 0x9ba <vfprintf+0x496>
     9b4:	6f ef       	ldi	r22, 0xFF	; 255
     9b6:	7f ef       	ldi	r23, 0xFF	; 255
     9b8:	02 c0       	rjmp	.+4      	; 0x9be <vfprintf+0x49a>
     9ba:	69 2d       	mov	r22, r9
     9bc:	70 e0       	ldi	r23, 0x00	; 0
     9be:	22 e0       	ldi	r18, 0x02	; 2
     9c0:	30 e0       	ldi	r19, 0x00	; 0
     9c2:	c2 0e       	add	r12, r18
     9c4:	d3 1e       	adc	r13, r19
     9c6:	c5 01       	movw	r24, r10
     9c8:	0e 94 46 1e 	call	0x3c8c	; 0x3c8c <strnlen>
     9cc:	7c 01       	movw	r14, r24
     9ce:	1f 77       	andi	r17, 0x7F	; 127
     9d0:	13 c0       	rjmp	.+38     	; 0x9f8 <vfprintf+0x4d4>
     9d2:	f6 01       	movw	r30, r12
     9d4:	a0 80       	ld	r10, Z
     9d6:	b1 80       	ldd	r11, Z+1	; 0x01
     9d8:	16 fd       	sbrc	r17, 6
     9da:	03 c0       	rjmp	.+6      	; 0x9e2 <vfprintf+0x4be>
     9dc:	6f ef       	ldi	r22, 0xFF	; 255
     9de:	7f ef       	ldi	r23, 0xFF	; 255
     9e0:	02 c0       	rjmp	.+4      	; 0x9e6 <vfprintf+0x4c2>
     9e2:	69 2d       	mov	r22, r9
     9e4:	70 e0       	ldi	r23, 0x00	; 0
     9e6:	22 e0       	ldi	r18, 0x02	; 2
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	c2 0e       	add	r12, r18
     9ec:	d3 1e       	adc	r13, r19
     9ee:	c5 01       	movw	r24, r10
     9f0:	0e 94 34 1e 	call	0x3c68	; 0x3c68 <strnlen_P>
     9f4:	7c 01       	movw	r14, r24
     9f6:	10 68       	ori	r17, 0x80	; 128
     9f8:	13 ff       	sbrs	r17, 3
     9fa:	07 c0       	rjmp	.+14     	; 0xa0a <vfprintf+0x4e6>
     9fc:	1b c0       	rjmp	.+54     	; 0xa34 <vfprintf+0x510>
     9fe:	80 e2       	ldi	r24, 0x20	; 32
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	b3 01       	movw	r22, r6
     a04:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     a08:	8a 94       	dec	r8
     a0a:	88 2d       	mov	r24, r8
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	e8 16       	cp	r14, r24
     a10:	f9 06       	cpc	r15, r25
     a12:	a8 f3       	brcs	.-22     	; 0x9fe <vfprintf+0x4da>
     a14:	0f c0       	rjmp	.+30     	; 0xa34 <vfprintf+0x510>
     a16:	f5 01       	movw	r30, r10
     a18:	17 fd       	sbrc	r17, 7
     a1a:	85 91       	lpm	r24, Z+
     a1c:	17 ff       	sbrs	r17, 7
     a1e:	81 91       	ld	r24, Z+
     a20:	5f 01       	movw	r10, r30
     a22:	90 e0       	ldi	r25, 0x00	; 0
     a24:	b3 01       	movw	r22, r6
     a26:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     a2a:	81 10       	cpse	r8, r1
     a2c:	8a 94       	dec	r8
     a2e:	08 94       	sec
     a30:	e1 08       	sbc	r14, r1
     a32:	f1 08       	sbc	r15, r1
     a34:	e1 14       	cp	r14, r1
     a36:	f1 04       	cpc	r15, r1
     a38:	71 f7       	brne	.-36     	; 0xa16 <vfprintf+0x4f2>
     a3a:	f2 c0       	rjmp	.+484    	; 0xc20 <vfprintf+0x6fc>
     a3c:	94 36       	cpi	r25, 0x64	; 100
     a3e:	11 f0       	breq	.+4      	; 0xa44 <vfprintf+0x520>
     a40:	99 36       	cpi	r25, 0x69	; 105
     a42:	89 f5       	brne	.+98     	; 0xaa6 <vfprintf+0x582>
     a44:	17 ff       	sbrs	r17, 7
     a46:	08 c0       	rjmp	.+16     	; 0xa58 <vfprintf+0x534>
     a48:	f6 01       	movw	r30, r12
     a4a:	20 81       	ld	r18, Z
     a4c:	31 81       	ldd	r19, Z+1	; 0x01
     a4e:	42 81       	ldd	r20, Z+2	; 0x02
     a50:	53 81       	ldd	r21, Z+3	; 0x03
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	90 e0       	ldi	r25, 0x00	; 0
     a56:	0a c0       	rjmp	.+20     	; 0xa6c <vfprintf+0x548>
     a58:	f6 01       	movw	r30, r12
     a5a:	80 81       	ld	r24, Z
     a5c:	91 81       	ldd	r25, Z+1	; 0x01
     a5e:	9c 01       	movw	r18, r24
     a60:	44 27       	eor	r20, r20
     a62:	37 fd       	sbrc	r19, 7
     a64:	40 95       	com	r20
     a66:	54 2f       	mov	r21, r20
     a68:	82 e0       	ldi	r24, 0x02	; 2
     a6a:	90 e0       	ldi	r25, 0x00	; 0
     a6c:	c8 0e       	add	r12, r24
     a6e:	d9 1e       	adc	r13, r25
     a70:	9f e6       	ldi	r25, 0x6F	; 111
     a72:	f9 2e       	mov	r15, r25
     a74:	f1 22       	and	r15, r17
     a76:	57 ff       	sbrs	r21, 7
     a78:	09 c0       	rjmp	.+18     	; 0xa8c <vfprintf+0x568>
     a7a:	50 95       	com	r21
     a7c:	40 95       	com	r20
     a7e:	30 95       	com	r19
     a80:	21 95       	neg	r18
     a82:	3f 4f       	sbci	r19, 0xFF	; 255
     a84:	4f 4f       	sbci	r20, 0xFF	; 255
     a86:	5f 4f       	sbci	r21, 0xFF	; 255
     a88:	90 e8       	ldi	r25, 0x80	; 128
     a8a:	f9 2a       	or	r15, r25
     a8c:	ca 01       	movw	r24, r20
     a8e:	b9 01       	movw	r22, r18
     a90:	ae 01       	movw	r20, r28
     a92:	4f 5f       	subi	r20, 0xFF	; 255
     a94:	5f 4f       	sbci	r21, 0xFF	; 255
     a96:	2a e0       	ldi	r18, 0x0A	; 10
     a98:	30 e0       	ldi	r19, 0x00	; 0
     a9a:	0e 94 14 1f 	call	0x3e28	; 0x3e28 <__ultoa_invert>
     a9e:	e8 2e       	mov	r14, r24
     aa0:	e8 89       	ldd	r30, Y+16	; 0x10
     aa2:	ee 1a       	sub	r14, r30
     aa4:	41 c0       	rjmp	.+130    	; 0xb28 <vfprintf+0x604>
     aa6:	95 37       	cpi	r25, 0x75	; 117
     aa8:	21 f4       	brne	.+8      	; 0xab2 <vfprintf+0x58e>
     aaa:	1f 7e       	andi	r17, 0xEF	; 239
     aac:	2a e0       	ldi	r18, 0x0A	; 10
     aae:	30 e0       	ldi	r19, 0x00	; 0
     ab0:	1c c0       	rjmp	.+56     	; 0xaea <vfprintf+0x5c6>
     ab2:	19 7f       	andi	r17, 0xF9	; 249
     ab4:	9f 36       	cpi	r25, 0x6F	; 111
     ab6:	61 f0       	breq	.+24     	; 0xad0 <vfprintf+0x5ac>
     ab8:	90 37       	cpi	r25, 0x70	; 112
     aba:	20 f4       	brcc	.+8      	; 0xac4 <vfprintf+0x5a0>
     abc:	98 35       	cpi	r25, 0x58	; 88
     abe:	09 f0       	breq	.+2      	; 0xac2 <vfprintf+0x59e>
     ac0:	b2 c0       	rjmp	.+356    	; 0xc26 <vfprintf+0x702>
     ac2:	0f c0       	rjmp	.+30     	; 0xae2 <vfprintf+0x5be>
     ac4:	90 37       	cpi	r25, 0x70	; 112
     ac6:	39 f0       	breq	.+14     	; 0xad6 <vfprintf+0x5b2>
     ac8:	98 37       	cpi	r25, 0x78	; 120
     aca:	09 f0       	breq	.+2      	; 0xace <vfprintf+0x5aa>
     acc:	ac c0       	rjmp	.+344    	; 0xc26 <vfprintf+0x702>
     ace:	04 c0       	rjmp	.+8      	; 0xad8 <vfprintf+0x5b4>
     ad0:	28 e0       	ldi	r18, 0x08	; 8
     ad2:	30 e0       	ldi	r19, 0x00	; 0
     ad4:	0a c0       	rjmp	.+20     	; 0xaea <vfprintf+0x5c6>
     ad6:	10 61       	ori	r17, 0x10	; 16
     ad8:	14 fd       	sbrc	r17, 4
     ada:	14 60       	ori	r17, 0x04	; 4
     adc:	20 e1       	ldi	r18, 0x10	; 16
     ade:	30 e0       	ldi	r19, 0x00	; 0
     ae0:	04 c0       	rjmp	.+8      	; 0xaea <vfprintf+0x5c6>
     ae2:	14 fd       	sbrc	r17, 4
     ae4:	16 60       	ori	r17, 0x06	; 6
     ae6:	20 e1       	ldi	r18, 0x10	; 16
     ae8:	32 e0       	ldi	r19, 0x02	; 2
     aea:	17 ff       	sbrs	r17, 7
     aec:	08 c0       	rjmp	.+16     	; 0xafe <vfprintf+0x5da>
     aee:	f6 01       	movw	r30, r12
     af0:	60 81       	ld	r22, Z
     af2:	71 81       	ldd	r23, Z+1	; 0x01
     af4:	82 81       	ldd	r24, Z+2	; 0x02
     af6:	93 81       	ldd	r25, Z+3	; 0x03
     af8:	44 e0       	ldi	r20, 0x04	; 4
     afa:	50 e0       	ldi	r21, 0x00	; 0
     afc:	08 c0       	rjmp	.+16     	; 0xb0e <vfprintf+0x5ea>
     afe:	f6 01       	movw	r30, r12
     b00:	80 81       	ld	r24, Z
     b02:	91 81       	ldd	r25, Z+1	; 0x01
     b04:	bc 01       	movw	r22, r24
     b06:	80 e0       	ldi	r24, 0x00	; 0
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	42 e0       	ldi	r20, 0x02	; 2
     b0c:	50 e0       	ldi	r21, 0x00	; 0
     b0e:	c4 0e       	add	r12, r20
     b10:	d5 1e       	adc	r13, r21
     b12:	ae 01       	movw	r20, r28
     b14:	4f 5f       	subi	r20, 0xFF	; 255
     b16:	5f 4f       	sbci	r21, 0xFF	; 255
     b18:	0e 94 14 1f 	call	0x3e28	; 0x3e28 <__ultoa_invert>
     b1c:	e8 2e       	mov	r14, r24
     b1e:	58 89       	ldd	r21, Y+16	; 0x10
     b20:	e5 1a       	sub	r14, r21
     b22:	8f e7       	ldi	r24, 0x7F	; 127
     b24:	f8 2e       	mov	r15, r24
     b26:	f1 22       	and	r15, r17
     b28:	f6 fe       	sbrs	r15, 6
     b2a:	0b c0       	rjmp	.+22     	; 0xb42 <vfprintf+0x61e>
     b2c:	8e ef       	ldi	r24, 0xFE	; 254
     b2e:	f8 22       	and	r15, r24
     b30:	e9 14       	cp	r14, r9
     b32:	38 f4       	brcc	.+14     	; 0xb42 <vfprintf+0x61e>
     b34:	f4 fe       	sbrs	r15, 4
     b36:	07 c0       	rjmp	.+14     	; 0xb46 <vfprintf+0x622>
     b38:	f2 fc       	sbrc	r15, 2
     b3a:	05 c0       	rjmp	.+10     	; 0xb46 <vfprintf+0x622>
     b3c:	9f ee       	ldi	r25, 0xEF	; 239
     b3e:	f9 22       	and	r15, r25
     b40:	02 c0       	rjmp	.+4      	; 0xb46 <vfprintf+0x622>
     b42:	1e 2d       	mov	r17, r14
     b44:	01 c0       	rjmp	.+2      	; 0xb48 <vfprintf+0x624>
     b46:	19 2d       	mov	r17, r9
     b48:	f4 fe       	sbrs	r15, 4
     b4a:	0d c0       	rjmp	.+26     	; 0xb66 <vfprintf+0x642>
     b4c:	fe 01       	movw	r30, r28
     b4e:	ee 0d       	add	r30, r14
     b50:	f1 1d       	adc	r31, r1
     b52:	80 81       	ld	r24, Z
     b54:	80 33       	cpi	r24, 0x30	; 48
     b56:	19 f4       	brne	.+6      	; 0xb5e <vfprintf+0x63a>
     b58:	e9 ee       	ldi	r30, 0xE9	; 233
     b5a:	fe 22       	and	r15, r30
     b5c:	08 c0       	rjmp	.+16     	; 0xb6e <vfprintf+0x64a>
     b5e:	1f 5f       	subi	r17, 0xFF	; 255
     b60:	f2 fe       	sbrs	r15, 2
     b62:	05 c0       	rjmp	.+10     	; 0xb6e <vfprintf+0x64a>
     b64:	03 c0       	rjmp	.+6      	; 0xb6c <vfprintf+0x648>
     b66:	8f 2d       	mov	r24, r15
     b68:	86 78       	andi	r24, 0x86	; 134
     b6a:	09 f0       	breq	.+2      	; 0xb6e <vfprintf+0x64a>
     b6c:	1f 5f       	subi	r17, 0xFF	; 255
     b6e:	0f 2d       	mov	r16, r15
     b70:	f3 fc       	sbrc	r15, 3
     b72:	14 c0       	rjmp	.+40     	; 0xb9c <vfprintf+0x678>
     b74:	f0 fe       	sbrs	r15, 0
     b76:	0f c0       	rjmp	.+30     	; 0xb96 <vfprintf+0x672>
     b78:	18 15       	cp	r17, r8
     b7a:	10 f0       	brcs	.+4      	; 0xb80 <vfprintf+0x65c>
     b7c:	9e 2c       	mov	r9, r14
     b7e:	0b c0       	rjmp	.+22     	; 0xb96 <vfprintf+0x672>
     b80:	9e 2c       	mov	r9, r14
     b82:	98 0c       	add	r9, r8
     b84:	91 1a       	sub	r9, r17
     b86:	18 2d       	mov	r17, r8
     b88:	06 c0       	rjmp	.+12     	; 0xb96 <vfprintf+0x672>
     b8a:	80 e2       	ldi	r24, 0x20	; 32
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	b3 01       	movw	r22, r6
     b90:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     b94:	1f 5f       	subi	r17, 0xFF	; 255
     b96:	18 15       	cp	r17, r8
     b98:	c0 f3       	brcs	.-16     	; 0xb8a <vfprintf+0x666>
     b9a:	04 c0       	rjmp	.+8      	; 0xba4 <vfprintf+0x680>
     b9c:	18 15       	cp	r17, r8
     b9e:	10 f4       	brcc	.+4      	; 0xba4 <vfprintf+0x680>
     ba0:	81 1a       	sub	r8, r17
     ba2:	01 c0       	rjmp	.+2      	; 0xba6 <vfprintf+0x682>
     ba4:	88 24       	eor	r8, r8
     ba6:	04 ff       	sbrs	r16, 4
     ba8:	0f c0       	rjmp	.+30     	; 0xbc8 <vfprintf+0x6a4>
     baa:	80 e3       	ldi	r24, 0x30	; 48
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	b3 01       	movw	r22, r6
     bb0:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     bb4:	02 ff       	sbrs	r16, 2
     bb6:	1d c0       	rjmp	.+58     	; 0xbf2 <vfprintf+0x6ce>
     bb8:	01 fd       	sbrc	r16, 1
     bba:	03 c0       	rjmp	.+6      	; 0xbc2 <vfprintf+0x69e>
     bbc:	88 e7       	ldi	r24, 0x78	; 120
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	0e c0       	rjmp	.+28     	; 0xbde <vfprintf+0x6ba>
     bc2:	88 e5       	ldi	r24, 0x58	; 88
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	0b c0       	rjmp	.+22     	; 0xbde <vfprintf+0x6ba>
     bc8:	80 2f       	mov	r24, r16
     bca:	86 78       	andi	r24, 0x86	; 134
     bcc:	91 f0       	breq	.+36     	; 0xbf2 <vfprintf+0x6ce>
     bce:	01 ff       	sbrs	r16, 1
     bd0:	02 c0       	rjmp	.+4      	; 0xbd6 <vfprintf+0x6b2>
     bd2:	8b e2       	ldi	r24, 0x2B	; 43
     bd4:	01 c0       	rjmp	.+2      	; 0xbd8 <vfprintf+0x6b4>
     bd6:	80 e2       	ldi	r24, 0x20	; 32
     bd8:	f7 fc       	sbrc	r15, 7
     bda:	8d e2       	ldi	r24, 0x2D	; 45
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	b3 01       	movw	r22, r6
     be0:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     be4:	06 c0       	rjmp	.+12     	; 0xbf2 <vfprintf+0x6ce>
     be6:	80 e3       	ldi	r24, 0x30	; 48
     be8:	90 e0       	ldi	r25, 0x00	; 0
     bea:	b3 01       	movw	r22, r6
     bec:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     bf0:	9a 94       	dec	r9
     bf2:	e9 14       	cp	r14, r9
     bf4:	c0 f3       	brcs	.-16     	; 0xbe6 <vfprintf+0x6c2>
     bf6:	ea 94       	dec	r14
     bf8:	e1 e0       	ldi	r30, 0x01	; 1
     bfa:	f0 e0       	ldi	r31, 0x00	; 0
     bfc:	ec 0f       	add	r30, r28
     bfe:	fd 1f       	adc	r31, r29
     c00:	ee 0d       	add	r30, r14
     c02:	f1 1d       	adc	r31, r1
     c04:	80 81       	ld	r24, Z
     c06:	90 e0       	ldi	r25, 0x00	; 0
     c08:	b3 01       	movw	r22, r6
     c0a:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     c0e:	ee 20       	and	r14, r14
     c10:	91 f7       	brne	.-28     	; 0xbf6 <vfprintf+0x6d2>
     c12:	06 c0       	rjmp	.+12     	; 0xc20 <vfprintf+0x6fc>
     c14:	80 e2       	ldi	r24, 0x20	; 32
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	b3 01       	movw	r22, r6
     c1a:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <fputc>
     c1e:	8a 94       	dec	r8
     c20:	88 20       	and	r8, r8
     c22:	c1 f7       	brne	.-16     	; 0xc14 <vfprintf+0x6f0>
     c24:	97 cc       	rjmp	.-1746   	; 0x554 <vfprintf+0x30>
     c26:	f3 01       	movw	r30, r6
     c28:	66 81       	ldd	r22, Z+6	; 0x06
     c2a:	77 81       	ldd	r23, Z+7	; 0x07
     c2c:	cb 01       	movw	r24, r22
     c2e:	61 96       	adiw	r28, 0x11	; 17
     c30:	e2 e1       	ldi	r30, 0x12	; 18
     c32:	0c 94 21 20 	jmp	0x4042	; 0x4042 <__epilogue_restores__>

00000c36 <_Z41__static_initialization_and_destruction_0ii>:
	{
		motors[i].compute();
	}

  	return HEXAPOD_LOOP_DURATION;
}
     c36:	df 93       	push	r29
     c38:	cf 93       	push	r28
     c3a:	cd b7       	in	r28, 0x3d	; 61
     c3c:	de b7       	in	r29, 0x3e	; 62
     c3e:	2a 97       	sbiw	r28, 0x0a	; 10
     c40:	0f b6       	in	r0, 0x3f	; 63
     c42:	f8 94       	cli
     c44:	de bf       	out	0x3e, r29	; 62
     c46:	0f be       	out	0x3f, r0	; 63
     c48:	cd bf       	out	0x3d, r28	; 61
     c4a:	9a 83       	std	Y+2, r25	; 0x02
     c4c:	89 83       	std	Y+1, r24	; 0x01
     c4e:	7c 83       	std	Y+4, r23	; 0x04
     c50:	6b 83       	std	Y+3, r22	; 0x03
     c52:	89 81       	ldd	r24, Y+1	; 0x01
     c54:	9a 81       	ldd	r25, Y+2	; 0x02
     c56:	81 30       	cpi	r24, 0x01	; 1
     c58:	91 05       	cpc	r25, r1
     c5a:	39 f5       	brne	.+78     	; 0xcaa <_Z41__static_initialization_and_destruction_0ii+0x74>
     c5c:	8b 81       	ldd	r24, Y+3	; 0x03
     c5e:	9c 81       	ldd	r25, Y+4	; 0x04
     c60:	2f ef       	ldi	r18, 0xFF	; 255
     c62:	8f 3f       	cpi	r24, 0xFF	; 255
     c64:	92 07       	cpc	r25, r18
     c66:	09 f5       	brne	.+66     	; 0xcaa <_Z41__static_initialization_and_destruction_0ii+0x74>
#include "hardware.h"
#include "protocol.h"
#include "smart_motor.h"


Protocol proto;
     c68:	8c e1       	ldi	r24, 0x1C	; 28
     c6a:	93 e0       	ldi	r25, 0x03	; 3
     c6c:	0e 94 b7 0b 	call	0x176e	; 0x176e <_ZN8ProtocolC1Ev>

SmartMotor motors[2];
     c70:	89 e4       	ldi	r24, 0x49	; 73
     c72:	93 e0       	ldi	r25, 0x03	; 3
     c74:	9a 87       	std	Y+10, r25	; 0x0a
     c76:	89 87       	std	Y+9, r24	; 0x09
     c78:	81 e0       	ldi	r24, 0x01	; 1
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	98 87       	std	Y+8, r25	; 0x08
     c7e:	8f 83       	std	Y+7, r24	; 0x07
     c80:	0e c0       	rjmp	.+28     	; 0xc9e <_Z41__static_initialization_and_destruction_0ii+0x68>
     c82:	89 85       	ldd	r24, Y+9	; 0x09
     c84:	9a 85       	ldd	r25, Y+10	; 0x0a
     c86:	0e 94 31 0c 	call	0x1862	; 0x1862 <_ZN10SmartMotorC1Ev>
     c8a:	89 85       	ldd	r24, Y+9	; 0x09
     c8c:	9a 85       	ldd	r25, Y+10	; 0x0a
     c8e:	0b 96       	adiw	r24, 0x0b	; 11
     c90:	9a 87       	std	Y+10, r25	; 0x0a
     c92:	89 87       	std	Y+9, r24	; 0x09
     c94:	8f 81       	ldd	r24, Y+7	; 0x07
     c96:	98 85       	ldd	r25, Y+8	; 0x08
     c98:	01 97       	sbiw	r24, 0x01	; 1
     c9a:	98 87       	std	Y+8, r25	; 0x08
     c9c:	8f 83       	std	Y+7, r24	; 0x07
     c9e:	8f 81       	ldd	r24, Y+7	; 0x07
     ca0:	98 85       	ldd	r25, Y+8	; 0x08
     ca2:	2f ef       	ldi	r18, 0xFF	; 255
     ca4:	8f 3f       	cpi	r24, 0xFF	; 255
     ca6:	92 07       	cpc	r25, r18
     ca8:	61 f7       	brne	.-40     	; 0xc82 <_Z41__static_initialization_and_destruction_0ii+0x4c>
     caa:	89 81       	ldd	r24, Y+1	; 0x01
     cac:	9a 81       	ldd	r25, Y+2	; 0x02
     cae:	00 97       	sbiw	r24, 0x00	; 0
     cb0:	d1 f4       	brne	.+52     	; 0xce6 <_Z41__static_initialization_and_destruction_0ii+0xb0>
     cb2:	8b 81       	ldd	r24, Y+3	; 0x03
     cb4:	9c 81       	ldd	r25, Y+4	; 0x04
     cb6:	2f ef       	ldi	r18, 0xFF	; 255
     cb8:	8f 3f       	cpi	r24, 0xFF	; 255
     cba:	92 07       	cpc	r25, r18
     cbc:	a1 f4       	brne	.+40     	; 0xce6 <_Z41__static_initialization_and_destruction_0ii+0xb0>
     cbe:	8f e5       	ldi	r24, 0x5F	; 95
     cc0:	93 e0       	ldi	r25, 0x03	; 3
     cc2:	9e 83       	std	Y+6, r25	; 0x06
     cc4:	8d 83       	std	Y+5, r24	; 0x05
     cc6:	8d 81       	ldd	r24, Y+5	; 0x05
     cc8:	9e 81       	ldd	r25, Y+6	; 0x06
     cca:	23 e0       	ldi	r18, 0x03	; 3
     ccc:	89 34       	cpi	r24, 0x49	; 73
     cce:	92 07       	cpc	r25, r18
     cd0:	51 f0       	breq	.+20     	; 0xce6 <_Z41__static_initialization_and_destruction_0ii+0xb0>
     cd2:	8d 81       	ldd	r24, Y+5	; 0x05
     cd4:	9e 81       	ldd	r25, Y+6	; 0x06
     cd6:	0b 97       	sbiw	r24, 0x0b	; 11
     cd8:	9e 83       	std	Y+6, r25	; 0x06
     cda:	8d 83       	std	Y+5, r24	; 0x05
     cdc:	8d 81       	ldd	r24, Y+5	; 0x05
     cde:	9e 81       	ldd	r25, Y+6	; 0x06
     ce0:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <_ZN10SmartMotorD1Ev>
     ce4:	f0 cf       	rjmp	.-32     	; 0xcc6 <_Z41__static_initialization_and_destruction_0ii+0x90>
	{
		motors[i].compute();
	}

  	return HEXAPOD_LOOP_DURATION;
}
     ce6:	2a 96       	adiw	r28, 0x0a	; 10
     ce8:	0f b6       	in	r0, 0x3f	; 63
     cea:	f8 94       	cli
     cec:	de bf       	out	0x3e, r29	; 62
     cee:	0f be       	out	0x3f, r0	; 63
     cf0:	cd bf       	out	0x3d, r28	; 61
     cf2:	cf 91       	pop	r28
     cf4:	df 91       	pop	r29
     cf6:	08 95       	ret

00000cf8 <_GLOBAL__D_proto>:
     cf8:	df 93       	push	r29
     cfa:	cf 93       	push	r28
     cfc:	cd b7       	in	r28, 0x3d	; 61
     cfe:	de b7       	in	r29, 0x3e	; 62
     d00:	80 e0       	ldi	r24, 0x00	; 0
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	6f ef       	ldi	r22, 0xFF	; 255
     d06:	7f ef       	ldi	r23, 0xFF	; 255
     d08:	0e 94 1b 06 	call	0xc36	; 0xc36 <_Z41__static_initialization_and_destruction_0ii>
     d0c:	cf 91       	pop	r28
     d0e:	df 91       	pop	r29
     d10:	08 95       	ret

00000d12 <_GLOBAL__I_proto>:
     d12:	df 93       	push	r29
     d14:	cf 93       	push	r28
     d16:	cd b7       	in	r28, 0x3d	; 61
     d18:	de b7       	in	r29, 0x3e	; 62
     d1a:	81 e0       	ldi	r24, 0x01	; 1
     d1c:	90 e0       	ldi	r25, 0x00	; 0
     d1e:	6f ef       	ldi	r22, 0xFF	; 255
     d20:	7f ef       	ldi	r23, 0xFF	; 255
     d22:	0e 94 1b 06 	call	0xc36	; 0xc36 <_Z41__static_initialization_and_destruction_0ii>
     d26:	cf 91       	pop	r28
     d28:	df 91       	pop	r29
     d2a:	08 95       	ret

00000d2c <_ZN6StreamlsEi>:
		return print(num);
	}
	Stream& operator<< (int8_t num ){
		return print(num);
	}
	Stream& operator<< (int16_t num ){
     d2c:	df 93       	push	r29
     d2e:	cf 93       	push	r28
     d30:	00 d0       	rcall	.+0      	; 0xd32 <_ZN6StreamlsEi+0x6>
     d32:	00 d0       	rcall	.+0      	; 0xd34 <_ZN6StreamlsEi+0x8>
     d34:	cd b7       	in	r28, 0x3d	; 61
     d36:	de b7       	in	r29, 0x3e	; 62
     d38:	9a 83       	std	Y+2, r25	; 0x02
     d3a:	89 83       	std	Y+1, r24	; 0x01
     d3c:	7c 83       	std	Y+4, r23	; 0x04
     d3e:	6b 83       	std	Y+3, r22	; 0x03
		return print(num);
     d40:	89 81       	ldd	r24, Y+1	; 0x01
     d42:	9a 81       	ldd	r25, Y+2	; 0x02
     d44:	2b 81       	ldd	r18, Y+3	; 0x03
     d46:	3c 81       	ldd	r19, Y+4	; 0x04
     d48:	b9 01       	movw	r22, r18
     d4a:	0e 94 43 12 	call	0x2486	; 0x2486 <_ZN6Stream5printEi>
	}
     d4e:	0f 90       	pop	r0
     d50:	0f 90       	pop	r0
     d52:	0f 90       	pop	r0
     d54:	0f 90       	pop	r0
     d56:	cf 91       	pop	r28
     d58:	df 91       	pop	r29
     d5a:	08 95       	ret

00000d5c <_ZN6StreamlsEPKc>:
	// Dump the value of a sensor
	Stream& operator<< (Sensor& sensor ){
		return print(sensor);
	}

	Stream& operator<< (const char str[] ){
     d5c:	df 93       	push	r29
     d5e:	cf 93       	push	r28
     d60:	00 d0       	rcall	.+0      	; 0xd62 <_ZN6StreamlsEPKc+0x6>
     d62:	00 d0       	rcall	.+0      	; 0xd64 <_ZN6StreamlsEPKc+0x8>
     d64:	cd b7       	in	r28, 0x3d	; 61
     d66:	de b7       	in	r29, 0x3e	; 62
     d68:	9a 83       	std	Y+2, r25	; 0x02
     d6a:	89 83       	std	Y+1, r24	; 0x01
     d6c:	7c 83       	std	Y+4, r23	; 0x04
     d6e:	6b 83       	std	Y+3, r22	; 0x03
		return print(str);
     d70:	89 81       	ldd	r24, Y+1	; 0x01
     d72:	9a 81       	ldd	r25, Y+2	; 0x02
     d74:	2b 81       	ldd	r18, Y+3	; 0x03
     d76:	3c 81       	ldd	r19, Y+4	; 0x04
     d78:	b9 01       	movw	r22, r18
     d7a:	0e 94 6a 12 	call	0x24d4	; 0x24d4 <_ZN6Stream5printEPKc>
	}
     d7e:	0f 90       	pop	r0
     d80:	0f 90       	pop	r0
     d82:	0f 90       	pop	r0
     d84:	0f 90       	pop	r0
     d86:	cf 91       	pop	r28
     d88:	df 91       	pop	r29
     d8a:	08 95       	ret

00000d8c <_ZN6StreamlsEj>:
		return print(c);
	}
	Stream& operator<< (uint8_t num ){
		return print(num);
	}
	Stream& operator<< (uint16_t num ){
     d8c:	df 93       	push	r29
     d8e:	cf 93       	push	r28
     d90:	00 d0       	rcall	.+0      	; 0xd92 <_ZN6StreamlsEj+0x6>
     d92:	00 d0       	rcall	.+0      	; 0xd94 <_ZN6StreamlsEj+0x8>
     d94:	cd b7       	in	r28, 0x3d	; 61
     d96:	de b7       	in	r29, 0x3e	; 62
     d98:	9a 83       	std	Y+2, r25	; 0x02
     d9a:	89 83       	std	Y+1, r24	; 0x01
     d9c:	7c 83       	std	Y+4, r23	; 0x04
     d9e:	6b 83       	std	Y+3, r22	; 0x03
		return print(num);
     da0:	89 81       	ldd	r24, Y+1	; 0x01
     da2:	9a 81       	ldd	r25, Y+2	; 0x02
     da4:	2b 81       	ldd	r18, Y+3	; 0x03
     da6:	3c 81       	ldd	r19, Y+4	; 0x04
     da8:	b9 01       	movw	r22, r18
     daa:	0e 94 b1 12 	call	0x2562	; 0x2562 <_ZN6Stream5printEj>
	}
     dae:	0f 90       	pop	r0
     db0:	0f 90       	pop	r0
     db2:	0f 90       	pop	r0
     db4:	0f 90       	pop	r0
     db6:	cf 91       	pop	r28
     db8:	df 91       	pop	r29
     dba:	08 95       	ret

00000dbc <_Z12treat_packetR6Packet>:
	motors[1].link_servo(servo2);

	return 0;
}

void treat_packet(Packet &p){
     dbc:	df 93       	push	r29
     dbe:	cf 93       	push	r28
     dc0:	00 d0       	rcall	.+0      	; 0xdc2 <_Z12treat_packetR6Packet+0x6>
     dc2:	00 d0       	rcall	.+0      	; 0xdc4 <_Z12treat_packetR6Packet+0x8>
     dc4:	cd b7       	in	r28, 0x3d	; 61
     dc6:	de b7       	in	r29, 0x3e	; 62
     dc8:	9a 83       	std	Y+2, r25	; 0x02
     dca:	89 83       	std	Y+1, r24	; 0x01

	if(p.motor_id >= sizeof(motors)/sizeof(SmartMotor))
     dcc:	e9 81       	ldd	r30, Y+1	; 0x01
     dce:	fa 81       	ldd	r31, Y+2	; 0x02
     dd0:	81 81       	ldd	r24, Z+1	; 0x01
     dd2:	82 30       	cpi	r24, 0x02	; 2
     dd4:	d8 f0       	brcs	.+54     	; 0xe0c <_Z12treat_packetR6Packet+0x50>
	{
		uart1<<"failed treat packet "<<(int)p.motor_id<<" "<<sizeof(motors)/sizeof(SmartMotor);
     dd6:	8c e0       	ldi	r24, 0x0C	; 12
     dd8:	94 e0       	ldi	r25, 0x04	; 4
     dda:	20 e0       	ldi	r18, 0x00	; 0
     ddc:	32 e0       	ldi	r19, 0x02	; 2
     dde:	b9 01       	movw	r22, r18
     de0:	0e 94 ae 06 	call	0xd5c	; 0xd5c <_ZN6StreamlsEPKc>
     de4:	ac 01       	movw	r20, r24
     de6:	e9 81       	ldd	r30, Y+1	; 0x01
     de8:	fa 81       	ldd	r31, Y+2	; 0x02
     dea:	81 81       	ldd	r24, Z+1	; 0x01
     dec:	28 2f       	mov	r18, r24
     dee:	30 e0       	ldi	r19, 0x00	; 0
     df0:	ca 01       	movw	r24, r20
     df2:	b9 01       	movw	r22, r18
     df4:	0e 94 96 06 	call	0xd2c	; 0xd2c <_ZN6StreamlsEi>
     df8:	25 e1       	ldi	r18, 0x15	; 21
     dfa:	32 e0       	ldi	r19, 0x02	; 2
     dfc:	b9 01       	movw	r22, r18
     dfe:	0e 94 ae 06 	call	0xd5c	; 0xd5c <_ZN6StreamlsEPKc>
     e02:	62 e0       	ldi	r22, 0x02	; 2
     e04:	70 e0       	ldi	r23, 0x00	; 0
     e06:	0e 94 c6 06 	call	0xd8c	; 0xd8c <_ZN6StreamlsEj>
     e0a:	70 c0       	rjmp	.+224    	; 0xeec <_Z12treat_packetR6Packet+0x130>
		return ;
	}
	switch (p.cmd_id)
     e0c:	e9 81       	ldd	r30, Y+1	; 0x01
     e0e:	fa 81       	ldd	r31, Y+2	; 0x02
     e10:	80 81       	ld	r24, Z
     e12:	28 2f       	mov	r18, r24
     e14:	30 e0       	ldi	r19, 0x00	; 0
     e16:	3c 83       	std	Y+4, r19	; 0x04
     e18:	2b 83       	std	Y+3, r18	; 0x03
     e1a:	8b 81       	ldd	r24, Y+3	; 0x03
     e1c:	9c 81       	ldd	r25, Y+4	; 0x04
     e1e:	82 30       	cpi	r24, 0x02	; 2
     e20:	91 05       	cpc	r25, r1
     e22:	09 f4       	brne	.+2      	; 0xe26 <_Z12treat_packetR6Packet+0x6a>
     e24:	63 c0       	rjmp	.+198    	; 0xeec <_Z12treat_packetR6Packet+0x130>
     e26:	2b 81       	ldd	r18, Y+3	; 0x03
     e28:	3c 81       	ldd	r19, Y+4	; 0x04
     e2a:	23 30       	cpi	r18, 0x03	; 3
     e2c:	31 05       	cpc	r19, r1
     e2e:	34 f4       	brge	.+12     	; 0xe3c <_Z12treat_packetR6Packet+0x80>
     e30:	8b 81       	ldd	r24, Y+3	; 0x03
     e32:	9c 81       	ldd	r25, Y+4	; 0x04
     e34:	81 30       	cpi	r24, 0x01	; 1
     e36:	91 05       	cpc	r25, r1
     e38:	61 f0       	breq	.+24     	; 0xe52 <_Z12treat_packetR6Packet+0x96>
     e3a:	58 c0       	rjmp	.+176    	; 0xeec <_Z12treat_packetR6Packet+0x130>
     e3c:	2b 81       	ldd	r18, Y+3	; 0x03
     e3e:	3c 81       	ldd	r19, Y+4	; 0x04
     e40:	23 30       	cpi	r18, 0x03	; 3
     e42:	31 05       	cpc	r19, r1
     e44:	29 f1       	breq	.+74     	; 0xe90 <_Z12treat_packetR6Packet+0xd4>
     e46:	8b 81       	ldd	r24, Y+3	; 0x03
     e48:	9c 81       	ldd	r25, Y+4	; 0x04
     e4a:	84 30       	cpi	r24, 0x04	; 4
     e4c:	91 05       	cpc	r25, r1
     e4e:	c9 f1       	breq	.+114    	; 0xec2 <_Z12treat_packetR6Packet+0x106>
     e50:	4d c0       	rjmp	.+154    	; 0xeec <_Z12treat_packetR6Packet+0x130>
	{
		case Packet::SET_POS: { 
			motors[p.motor_id].set_position(p.pos,p.t);
     e52:	e9 81       	ldd	r30, Y+1	; 0x01
     e54:	fa 81       	ldd	r31, Y+2	; 0x02
     e56:	81 81       	ldd	r24, Z+1	; 0x01
     e58:	48 2f       	mov	r20, r24
     e5a:	50 e0       	ldi	r21, 0x00	; 0
     e5c:	ca 01       	movw	r24, r20
     e5e:	88 0f       	add	r24, r24
     e60:	99 1f       	adc	r25, r25
     e62:	9c 01       	movw	r18, r24
     e64:	22 0f       	add	r18, r18
     e66:	33 1f       	adc	r19, r19
     e68:	22 0f       	add	r18, r18
     e6a:	33 1f       	adc	r19, r19
     e6c:	82 0f       	add	r24, r18
     e6e:	93 1f       	adc	r25, r19
     e70:	84 0f       	add	r24, r20
     e72:	95 1f       	adc	r25, r21
     e74:	87 5b       	subi	r24, 0xB7	; 183
     e76:	9c 4f       	sbci	r25, 0xFC	; 252
     e78:	e9 81       	ldd	r30, Y+1	; 0x01
     e7a:	fa 81       	ldd	r31, Y+2	; 0x02
     e7c:	42 81       	ldd	r20, Z+2	; 0x02
     e7e:	e9 81       	ldd	r30, Y+1	; 0x01
     e80:	fa 81       	ldd	r31, Y+2	; 0x02
     e82:	23 81       	ldd	r18, Z+3	; 0x03
     e84:	34 81       	ldd	r19, Z+4	; 0x04
     e86:	64 2f       	mov	r22, r20
     e88:	a9 01       	movw	r20, r18
     e8a:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <_ZN10SmartMotor12set_positionEai>
     e8e:	2e c0       	rjmp	.+92     	; 0xeec <_Z12treat_packetR6Packet+0x130>
		//	motors[p.motor_id].get_position(p.pos);
			//proto.send(p);
			break;
		}
		case Packet::GET_STATUS:{
			p.status = motors[p.motor_id].is_moving();
     e90:	e9 81       	ldd	r30, Y+1	; 0x01
     e92:	fa 81       	ldd	r31, Y+2	; 0x02
     e94:	81 81       	ldd	r24, Z+1	; 0x01
     e96:	48 2f       	mov	r20, r24
     e98:	50 e0       	ldi	r21, 0x00	; 0
     e9a:	ca 01       	movw	r24, r20
     e9c:	88 0f       	add	r24, r24
     e9e:	99 1f       	adc	r25, r25
     ea0:	9c 01       	movw	r18, r24
     ea2:	22 0f       	add	r18, r18
     ea4:	33 1f       	adc	r19, r19
     ea6:	22 0f       	add	r18, r18
     ea8:	33 1f       	adc	r19, r19
     eaa:	82 0f       	add	r24, r18
     eac:	93 1f       	adc	r25, r19
     eae:	84 0f       	add	r24, r20
     eb0:	95 1f       	adc	r25, r21
     eb2:	87 5b       	subi	r24, 0xB7	; 183
     eb4:	9c 4f       	sbci	r25, 0xFC	; 252
     eb6:	0e 94 b5 0c 	call	0x196a	; 0x196a <_ZN10SmartMotor9is_movingEv>
     eba:	e9 81       	ldd	r30, Y+1	; 0x01
     ebc:	fa 81       	ldd	r31, Y+2	; 0x02
     ebe:	85 83       	std	Z+5, r24	; 0x05
     ec0:	15 c0       	rjmp	.+42     	; 0xeec <_Z12treat_packetR6Packet+0x130>
			//proto.send(p);
			break;
		}
		case Packet::STOP_MOTION: { 
			motors[p.motor_id].stop_motion();
     ec2:	e9 81       	ldd	r30, Y+1	; 0x01
     ec4:	fa 81       	ldd	r31, Y+2	; 0x02
     ec6:	81 81       	ldd	r24, Z+1	; 0x01
     ec8:	48 2f       	mov	r20, r24
     eca:	50 e0       	ldi	r21, 0x00	; 0
     ecc:	ca 01       	movw	r24, r20
     ece:	88 0f       	add	r24, r24
     ed0:	99 1f       	adc	r25, r25
     ed2:	9c 01       	movw	r18, r24
     ed4:	22 0f       	add	r18, r18
     ed6:	33 1f       	adc	r19, r19
     ed8:	22 0f       	add	r18, r18
     eda:	33 1f       	adc	r19, r19
     edc:	82 0f       	add	r24, r18
     ede:	93 1f       	adc	r25, r19
     ee0:	84 0f       	add	r24, r20
     ee2:	95 1f       	adc	r25, r21
     ee4:	87 5b       	subi	r24, 0xB7	; 183
     ee6:	9c 4f       	sbci	r25, 0xFC	; 252
     ee8:	0e 94 cd 0c 	call	0x199a	; 0x199a <_ZN10SmartMotor11stop_motionEv>
			break;
		}
	}

}
     eec:	0f 90       	pop	r0
     eee:	0f 90       	pop	r0
     ef0:	0f 90       	pop	r0
     ef2:	0f 90       	pop	r0
     ef4:	cf 91       	pop	r28
     ef6:	df 91       	pop	r29
     ef8:	08 95       	ret

00000efa <appControl>:

// This is the main loop
TICK_COUNT appControl(LOOP_COUNT loopCount, TICK_COUNT loopStart) {
     efa:	df 93       	push	r29
     efc:	cf 93       	push	r28
     efe:	cd b7       	in	r28, 0x3d	; 61
     f00:	de b7       	in	r29, 0x3e	; 62
     f02:	66 97       	sbiw	r28, 0x16	; 22
     f04:	0f b6       	in	r0, 0x3f	; 63
     f06:	f8 94       	cli
     f08:	de bf       	out	0x3e, r29	; 62
     f0a:	0f be       	out	0x3f, r0	; 63
     f0c:	cd bf       	out	0x3d, r28	; 61
     f0e:	6e 87       	std	Y+14, r22	; 0x0e
     f10:	7f 87       	std	Y+15, r23	; 0x0f
     f12:	88 8b       	std	Y+16, r24	; 0x10
     f14:	99 8b       	std	Y+17, r25	; 0x11
     f16:	2a 8b       	std	Y+18, r18	; 0x12
     f18:	3b 8b       	std	Y+19, r19	; 0x13
     f1a:	4c 8b       	std	Y+20, r20	; 0x14
     f1c:	5d 8b       	std	Y+21, r21	; 0x15

	Packet p;
     f1e:	ce 01       	movw	r24, r28
     f20:	03 96       	adiw	r24, 0x03	; 3
     f22:	0e 94 29 08 	call	0x1052	; 0x1052 <_ZN6PacketC1Ev>
     f26:	04 c0       	rjmp	.+8      	; 0xf30 <appControl+0x36>

	while(proto.treatIO(p) == 1)
	{
		treat_packet(p);
     f28:	ce 01       	movw	r24, r28
     f2a:	03 96       	adiw	r24, 0x03	; 3
     f2c:	0e 94 de 06 	call	0xdbc	; 0xdbc <_Z12treat_packetR6Packet>
// This is the main loop
TICK_COUNT appControl(LOOP_COUNT loopCount, TICK_COUNT loopStart) {

	Packet p;

	while(proto.treatIO(p) == 1)
     f30:	8c e1       	ldi	r24, 0x1C	; 28
     f32:	93 e0       	ldi	r25, 0x03	; 3
     f34:	9e 01       	movw	r18, r28
     f36:	2d 5f       	subi	r18, 0xFD	; 253
     f38:	3f 4f       	sbci	r19, 0xFF	; 255
     f3a:	b9 01       	movw	r22, r18
     f3c:	0e 94 56 0a 	call	0x14ac	; 0x14ac <_ZN8Protocol7treatIOER6Packet>
     f40:	1e 8a       	std	Y+22, r1	; 0x16
     f42:	81 30       	cpi	r24, 0x01	; 1
     f44:	91 05       	cpc	r25, r1
     f46:	11 f4       	brne	.+4      	; 0xf4c <appControl+0x52>
     f48:	81 e0       	ldi	r24, 0x01	; 1
     f4a:	8e 8b       	std	Y+22, r24	; 0x16
     f4c:	8e 89       	ldd	r24, Y+22	; 0x16
     f4e:	88 23       	and	r24, r24
     f50:	59 f7       	brne	.-42     	; 0xf28 <appControl+0x2e>
	{
		treat_packet(p);
	}

	for (int i = 0; i < sizeof(motors)/sizeof(SmartMotor); i++)
     f52:	1a 82       	std	Y+2, r1	; 0x02
     f54:	19 82       	std	Y+1, r1	; 0x01
     f56:	17 c0       	rjmp	.+46     	; 0xf86 <appControl+0x8c>
	{
		motors[i].compute();
     f58:	49 81       	ldd	r20, Y+1	; 0x01
     f5a:	5a 81       	ldd	r21, Y+2	; 0x02
     f5c:	ca 01       	movw	r24, r20
     f5e:	88 0f       	add	r24, r24
     f60:	99 1f       	adc	r25, r25
     f62:	9c 01       	movw	r18, r24
     f64:	22 0f       	add	r18, r18
     f66:	33 1f       	adc	r19, r19
     f68:	22 0f       	add	r18, r18
     f6a:	33 1f       	adc	r19, r19
     f6c:	82 0f       	add	r24, r18
     f6e:	93 1f       	adc	r25, r19
     f70:	84 0f       	add	r24, r20
     f72:	95 1f       	adc	r25, r21
     f74:	87 5b       	subi	r24, 0xB7	; 183
     f76:	9c 4f       	sbci	r25, 0xFC	; 252
     f78:	0e 94 87 0d 	call	0x1b0e	; 0x1b0e <_ZN10SmartMotor7computeEv>
	while(proto.treatIO(p) == 1)
	{
		treat_packet(p);
	}

	for (int i = 0; i < sizeof(motors)/sizeof(SmartMotor); i++)
     f7c:	89 81       	ldd	r24, Y+1	; 0x01
     f7e:	9a 81       	ldd	r25, Y+2	; 0x02
     f80:	01 96       	adiw	r24, 0x01	; 1
     f82:	9a 83       	std	Y+2, r25	; 0x02
     f84:	89 83       	std	Y+1, r24	; 0x01
     f86:	89 81       	ldd	r24, Y+1	; 0x01
     f88:	9a 81       	ldd	r25, Y+2	; 0x02
     f8a:	82 30       	cpi	r24, 0x02	; 2
     f8c:	91 05       	cpc	r25, r1
     f8e:	20 f3       	brcs	.-56     	; 0xf58 <appControl+0x5e>
	{
		motors[i].compute();
	}

  	return HEXAPOD_LOOP_DURATION;
     f90:	80 e2       	ldi	r24, 0x20	; 32
     f92:	9e e4       	ldi	r25, 0x4E	; 78
     f94:	a0 e0       	ldi	r26, 0x00	; 0
     f96:	b0 e0       	ldi	r27, 0x00	; 0
}
     f98:	bc 01       	movw	r22, r24
     f9a:	cd 01       	movw	r24, r26
     f9c:	66 96       	adiw	r28, 0x16	; 22
     f9e:	0f b6       	in	r0, 0x3f	; 63
     fa0:	f8 94       	cli
     fa2:	de bf       	out	0x3e, r29	; 62
     fa4:	0f be       	out	0x3f, r0	; 63
     fa6:	cd bf       	out	0x3d, r28	; 61
     fa8:	cf 91       	pop	r28
     faa:	df 91       	pop	r29
     fac:	08 95       	ret

00000fae <appInitSoftware>:
	initHardware();
}


// Initialise the software
TICK_COUNT appInitSoftware(TICK_COUNT loopStart) {
     fae:	df 93       	push	r29
     fb0:	cf 93       	push	r28
     fb2:	00 d0       	rcall	.+0      	; 0xfb4 <appInitSoftware+0x6>
     fb4:	00 d0       	rcall	.+0      	; 0xfb6 <appInitSoftware+0x8>
     fb6:	cd b7       	in	r28, 0x3d	; 61
     fb8:	de b7       	in	r29, 0x3e	; 62
     fba:	69 83       	std	Y+1, r22	; 0x01
     fbc:	7a 83       	std	Y+2, r23	; 0x02
     fbe:	8b 83       	std	Y+3, r24	; 0x03
     fc0:	9c 83       	std	Y+4, r25	; 0x04

	proto.init(&uart1);
     fc2:	8c e1       	ldi	r24, 0x1C	; 28
     fc4:	93 e0       	ldi	r25, 0x03	; 3
     fc6:	2c e0       	ldi	r18, 0x0C	; 12
     fc8:	34 e0       	ldi	r19, 0x04	; 4
     fca:	b9 01       	movw	r22, r18
     fcc:	0e 94 99 0b 	call	0x1732	; 0x1732 <_ZN8Protocol4initEP6UartHW>

	motors[0].link_servo(servo1);
     fd0:	89 e4       	ldi	r24, 0x49	; 73
     fd2:	93 e0       	ldi	r25, 0x03	; 3
     fd4:	2e ef       	ldi	r18, 0xFE	; 254
     fd6:	33 e0       	ldi	r19, 0x03	; 3
     fd8:	b9 01       	movw	r22, r18
     fda:	0e 94 6d 0c 	call	0x18da	; 0x18da <_ZN10SmartMotor10link_servoER5Servo>

	motors[1].link_servo(servo2);
     fde:	84 e5       	ldi	r24, 0x54	; 84
     fe0:	93 e0       	ldi	r25, 0x03	; 3
     fe2:	22 e0       	ldi	r18, 0x02	; 2
     fe4:	34 e0       	ldi	r19, 0x04	; 4
     fe6:	b9 01       	movw	r22, r18
     fe8:	0e 94 6d 0c 	call	0x18da	; 0x18da <_ZN10SmartMotor10link_servoER5Servo>

	return 0;
     fec:	80 e0       	ldi	r24, 0x00	; 0
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	a0 e0       	ldi	r26, 0x00	; 0
     ff2:	b0 e0       	ldi	r27, 0x00	; 0
}
     ff4:	bc 01       	movw	r22, r24
     ff6:	cd 01       	movw	r24, r26
     ff8:	0f 90       	pop	r0
     ffa:	0f 90       	pop	r0
     ffc:	0f 90       	pop	r0
     ffe:	0f 90       	pop	r0
    1000:	cf 91       	pop	r28
    1002:	df 91       	pop	r29
    1004:	08 95       	ret

00001006 <appInitHardware>:
Protocol proto;

SmartMotor motors[2];

// Initialise the hardware
void appInitHardware(void) {
    1006:	df 93       	push	r29
    1008:	cf 93       	push	r28
    100a:	cd b7       	in	r28, 0x3d	; 61
    100c:	de b7       	in	r29, 0x3e	; 62
	initHardware();
    100e:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <initHardware>
}
    1012:	cf 91       	pop	r28
    1014:	df 91       	pop	r29
    1016:	08 95       	ret

00001018 <_ZN6PacketC2Ev>:
#include "protocol.h"

#include <stdlib.h>


Packet::Packet()
    1018:	df 93       	push	r29
    101a:	cf 93       	push	r28
    101c:	00 d0       	rcall	.+0      	; 0x101e <_ZN6PacketC2Ev+0x6>
    101e:	cd b7       	in	r28, 0x3d	; 61
    1020:	de b7       	in	r29, 0x3e	; 62
    1022:	9a 83       	std	Y+2, r25	; 0x02
    1024:	89 83       	std	Y+1, r24	; 0x01
{
	cmd_id = 0;
    1026:	e9 81       	ldd	r30, Y+1	; 0x01
    1028:	fa 81       	ldd	r31, Y+2	; 0x02
    102a:	10 82       	st	Z, r1
	motor_id = 0;
    102c:	e9 81       	ldd	r30, Y+1	; 0x01
    102e:	fa 81       	ldd	r31, Y+2	; 0x02
    1030:	11 82       	std	Z+1, r1	; 0x01
	pos = 0;
    1032:	e9 81       	ldd	r30, Y+1	; 0x01
    1034:	fa 81       	ldd	r31, Y+2	; 0x02
    1036:	12 82       	std	Z+2, r1	; 0x02
	t = 0;
    1038:	e9 81       	ldd	r30, Y+1	; 0x01
    103a:	fa 81       	ldd	r31, Y+2	; 0x02
    103c:	14 82       	std	Z+4, r1	; 0x04
    103e:	13 82       	std	Z+3, r1	; 0x03

	status = Packet::STOP;
    1040:	e9 81       	ldd	r30, Y+1	; 0x01
    1042:	fa 81       	ldd	r31, Y+2	; 0x02
    1044:	81 e0       	ldi	r24, 0x01	; 1
    1046:	85 83       	std	Z+5, r24	; 0x05

	//command_len = {5, 2, 2, 2};
}
    1048:	0f 90       	pop	r0
    104a:	0f 90       	pop	r0
    104c:	cf 91       	pop	r28
    104e:	df 91       	pop	r29
    1050:	08 95       	ret

00001052 <_ZN6PacketC1Ev>:
#include "protocol.h"

#include <stdlib.h>


Packet::Packet()
    1052:	df 93       	push	r29
    1054:	cf 93       	push	r28
    1056:	00 d0       	rcall	.+0      	; 0x1058 <_ZN6PacketC1Ev+0x6>
    1058:	cd b7       	in	r28, 0x3d	; 61
    105a:	de b7       	in	r29, 0x3e	; 62
    105c:	9a 83       	std	Y+2, r25	; 0x02
    105e:	89 83       	std	Y+1, r24	; 0x01
{
	cmd_id = 0;
    1060:	e9 81       	ldd	r30, Y+1	; 0x01
    1062:	fa 81       	ldd	r31, Y+2	; 0x02
    1064:	10 82       	st	Z, r1
	motor_id = 0;
    1066:	e9 81       	ldd	r30, Y+1	; 0x01
    1068:	fa 81       	ldd	r31, Y+2	; 0x02
    106a:	11 82       	std	Z+1, r1	; 0x01
	pos = 0;
    106c:	e9 81       	ldd	r30, Y+1	; 0x01
    106e:	fa 81       	ldd	r31, Y+2	; 0x02
    1070:	12 82       	std	Z+2, r1	; 0x02
	t = 0;
    1072:	e9 81       	ldd	r30, Y+1	; 0x01
    1074:	fa 81       	ldd	r31, Y+2	; 0x02
    1076:	14 82       	std	Z+4, r1	; 0x04
    1078:	13 82       	std	Z+3, r1	; 0x03

	status = Packet::STOP;
    107a:	e9 81       	ldd	r30, Y+1	; 0x01
    107c:	fa 81       	ldd	r31, Y+2	; 0x02
    107e:	81 e0       	ldi	r24, 0x01	; 1
    1080:	85 83       	std	Z+5, r24	; 0x05

	//command_len = {5, 2, 2, 2};
}
    1082:	0f 90       	pop	r0
    1084:	0f 90       	pop	r0
    1086:	cf 91       	pop	r28
    1088:	df 91       	pop	r29
    108a:	08 95       	ret

0000108c <_ZN8Protocol4sendER6Packet>:
//////////////////////////////////////////
//
// PRIVATE
//////////////////////////////////////////////

void Protocol::send(Packet &p)
    108c:	df 93       	push	r29
    108e:	cf 93       	push	r28
    1090:	00 d0       	rcall	.+0      	; 0x1092 <_ZN8Protocol4sendER6Packet+0x6>
    1092:	00 d0       	rcall	.+0      	; 0x1094 <_ZN8Protocol4sendER6Packet+0x8>
    1094:	00 d0       	rcall	.+0      	; 0x1096 <_ZN8Protocol4sendER6Packet+0xa>
    1096:	cd b7       	in	r28, 0x3d	; 61
    1098:	de b7       	in	r29, 0x3e	; 62
    109a:	9a 83       	std	Y+2, r25	; 0x02
    109c:	89 83       	std	Y+1, r24	; 0x01
    109e:	7c 83       	std	Y+4, r23	; 0x04
    10a0:	6b 83       	std	Y+3, r22	; 0x03
{
	switch (p.cmd_id)
    10a2:	eb 81       	ldd	r30, Y+3	; 0x03
    10a4:	fc 81       	ldd	r31, Y+4	; 0x04
    10a6:	80 81       	ld	r24, Z
    10a8:	28 2f       	mov	r18, r24
    10aa:	30 e0       	ldi	r19, 0x00	; 0
    10ac:	3e 83       	std	Y+6, r19	; 0x06
    10ae:	2d 83       	std	Y+5, r18	; 0x05
    10b0:	8d 81       	ldd	r24, Y+5	; 0x05
    10b2:	9e 81       	ldd	r25, Y+6	; 0x06
    10b4:	82 30       	cpi	r24, 0x02	; 2
    10b6:	91 05       	cpc	r25, r1
    10b8:	39 f0       	breq	.+14     	; 0x10c8 <_ZN8Protocol4sendER6Packet+0x3c>
    10ba:	2d 81       	ldd	r18, Y+5	; 0x05
    10bc:	3e 81       	ldd	r19, Y+6	; 0x06
    10be:	23 30       	cpi	r18, 0x03	; 3
    10c0:	31 05       	cpc	r19, r1
    10c2:	09 f4       	brne	.+2      	; 0x10c6 <_ZN8Protocol4sendER6Packet+0x3a>
    10c4:	3f c0       	rjmp	.+126    	; 0x1144 <_ZN8Protocol4sendER6Packet+0xb8>
    10c6:	7a c0       	rjmp	.+244    	; 0x11bc <_ZN8Protocol4sendER6Packet+0x130>
	{
		case Packet::SET_POS :{
			break;
		}
		case Packet::GET_POS: {
			out[out_offset++] = p.cmd_id;
    10c8:	e9 81       	ldd	r30, Y+1	; 0x01
    10ca:	fa 81       	ldd	r31, Y+2	; 0x02
    10cc:	53 a5       	ldd	r21, Z+43	; 0x2b
    10ce:	25 2f       	mov	r18, r21
    10d0:	30 e0       	ldi	r19, 0x00	; 0
    10d2:	eb 81       	ldd	r30, Y+3	; 0x03
    10d4:	fc 81       	ldd	r31, Y+4	; 0x04
    10d6:	40 81       	ld	r20, Z
    10d8:	89 81       	ldd	r24, Y+1	; 0x01
    10da:	9a 81       	ldd	r25, Y+2	; 0x02
    10dc:	82 0f       	add	r24, r18
    10de:	93 1f       	adc	r25, r19
    10e0:	fc 01       	movw	r30, r24
    10e2:	76 96       	adiw	r30, 0x16	; 22
    10e4:	40 83       	st	Z, r20
    10e6:	85 2f       	mov	r24, r21
    10e8:	8f 5f       	subi	r24, 0xFF	; 255
    10ea:	e9 81       	ldd	r30, Y+1	; 0x01
    10ec:	fa 81       	ldd	r31, Y+2	; 0x02
    10ee:	83 a7       	std	Z+43, r24	; 0x2b
			out[out_offset++] = p.motor_id;
    10f0:	e9 81       	ldd	r30, Y+1	; 0x01
    10f2:	fa 81       	ldd	r31, Y+2	; 0x02
    10f4:	53 a5       	ldd	r21, Z+43	; 0x2b
    10f6:	25 2f       	mov	r18, r21
    10f8:	30 e0       	ldi	r19, 0x00	; 0
    10fa:	eb 81       	ldd	r30, Y+3	; 0x03
    10fc:	fc 81       	ldd	r31, Y+4	; 0x04
    10fe:	41 81       	ldd	r20, Z+1	; 0x01
    1100:	89 81       	ldd	r24, Y+1	; 0x01
    1102:	9a 81       	ldd	r25, Y+2	; 0x02
    1104:	82 0f       	add	r24, r18
    1106:	93 1f       	adc	r25, r19
    1108:	fc 01       	movw	r30, r24
    110a:	76 96       	adiw	r30, 0x16	; 22
    110c:	40 83       	st	Z, r20
    110e:	85 2f       	mov	r24, r21
    1110:	8f 5f       	subi	r24, 0xFF	; 255
    1112:	e9 81       	ldd	r30, Y+1	; 0x01
    1114:	fa 81       	ldd	r31, Y+2	; 0x02
    1116:	83 a7       	std	Z+43, r24	; 0x2b
			out[out_offset++] = p.pos;
    1118:	e9 81       	ldd	r30, Y+1	; 0x01
    111a:	fa 81       	ldd	r31, Y+2	; 0x02
    111c:	53 a5       	ldd	r21, Z+43	; 0x2b
    111e:	25 2f       	mov	r18, r21
    1120:	30 e0       	ldi	r19, 0x00	; 0
    1122:	eb 81       	ldd	r30, Y+3	; 0x03
    1124:	fc 81       	ldd	r31, Y+4	; 0x04
    1126:	82 81       	ldd	r24, Z+2	; 0x02
    1128:	48 2f       	mov	r20, r24
    112a:	89 81       	ldd	r24, Y+1	; 0x01
    112c:	9a 81       	ldd	r25, Y+2	; 0x02
    112e:	82 0f       	add	r24, r18
    1130:	93 1f       	adc	r25, r19
    1132:	fc 01       	movw	r30, r24
    1134:	76 96       	adiw	r30, 0x16	; 22
    1136:	40 83       	st	Z, r20
    1138:	85 2f       	mov	r24, r21
    113a:	8f 5f       	subi	r24, 0xFF	; 255
    113c:	e9 81       	ldd	r30, Y+1	; 0x01
    113e:	fa 81       	ldd	r31, Y+2	; 0x02
    1140:	83 a7       	std	Z+43, r24	; 0x2b
    1142:	3c c0       	rjmp	.+120    	; 0x11bc <_ZN8Protocol4sendER6Packet+0x130>
			break;
		}
		case Packet::GET_STATUS:{
			out[out_offset++] = p.cmd_id;
    1144:	e9 81       	ldd	r30, Y+1	; 0x01
    1146:	fa 81       	ldd	r31, Y+2	; 0x02
    1148:	53 a5       	ldd	r21, Z+43	; 0x2b
    114a:	25 2f       	mov	r18, r21
    114c:	30 e0       	ldi	r19, 0x00	; 0
    114e:	eb 81       	ldd	r30, Y+3	; 0x03
    1150:	fc 81       	ldd	r31, Y+4	; 0x04
    1152:	40 81       	ld	r20, Z
    1154:	89 81       	ldd	r24, Y+1	; 0x01
    1156:	9a 81       	ldd	r25, Y+2	; 0x02
    1158:	82 0f       	add	r24, r18
    115a:	93 1f       	adc	r25, r19
    115c:	fc 01       	movw	r30, r24
    115e:	76 96       	adiw	r30, 0x16	; 22
    1160:	40 83       	st	Z, r20
    1162:	85 2f       	mov	r24, r21
    1164:	8f 5f       	subi	r24, 0xFF	; 255
    1166:	e9 81       	ldd	r30, Y+1	; 0x01
    1168:	fa 81       	ldd	r31, Y+2	; 0x02
    116a:	83 a7       	std	Z+43, r24	; 0x2b
			out[out_offset++] = p.motor_id;
    116c:	e9 81       	ldd	r30, Y+1	; 0x01
    116e:	fa 81       	ldd	r31, Y+2	; 0x02
    1170:	53 a5       	ldd	r21, Z+43	; 0x2b
    1172:	25 2f       	mov	r18, r21
    1174:	30 e0       	ldi	r19, 0x00	; 0
    1176:	eb 81       	ldd	r30, Y+3	; 0x03
    1178:	fc 81       	ldd	r31, Y+4	; 0x04
    117a:	41 81       	ldd	r20, Z+1	; 0x01
    117c:	89 81       	ldd	r24, Y+1	; 0x01
    117e:	9a 81       	ldd	r25, Y+2	; 0x02
    1180:	82 0f       	add	r24, r18
    1182:	93 1f       	adc	r25, r19
    1184:	fc 01       	movw	r30, r24
    1186:	76 96       	adiw	r30, 0x16	; 22
    1188:	40 83       	st	Z, r20
    118a:	85 2f       	mov	r24, r21
    118c:	8f 5f       	subi	r24, 0xFF	; 255
    118e:	e9 81       	ldd	r30, Y+1	; 0x01
    1190:	fa 81       	ldd	r31, Y+2	; 0x02
    1192:	83 a7       	std	Z+43, r24	; 0x2b
			out[out_offset++] = p.status;
    1194:	e9 81       	ldd	r30, Y+1	; 0x01
    1196:	fa 81       	ldd	r31, Y+2	; 0x02
    1198:	53 a5       	ldd	r21, Z+43	; 0x2b
    119a:	25 2f       	mov	r18, r21
    119c:	30 e0       	ldi	r19, 0x00	; 0
    119e:	eb 81       	ldd	r30, Y+3	; 0x03
    11a0:	fc 81       	ldd	r31, Y+4	; 0x04
    11a2:	45 81       	ldd	r20, Z+5	; 0x05
    11a4:	89 81       	ldd	r24, Y+1	; 0x01
    11a6:	9a 81       	ldd	r25, Y+2	; 0x02
    11a8:	82 0f       	add	r24, r18
    11aa:	93 1f       	adc	r25, r19
    11ac:	fc 01       	movw	r30, r24
    11ae:	76 96       	adiw	r30, 0x16	; 22
    11b0:	40 83       	st	Z, r20
    11b2:	85 2f       	mov	r24, r21
    11b4:	8f 5f       	subi	r24, 0xFF	; 255
    11b6:	e9 81       	ldd	r30, Y+1	; 0x01
    11b8:	fa 81       	ldd	r31, Y+2	; 0x02
    11ba:	83 a7       	std	Z+43, r24	; 0x2b
		}
		case Packet::STOP_MOTION: { 
			break;
		}
	}	
}
    11bc:	26 96       	adiw	r28, 0x06	; 6
    11be:	0f b6       	in	r0, 0x3f	; 63
    11c0:	f8 94       	cli
    11c2:	de bf       	out	0x3e, r29	; 62
    11c4:	0f be       	out	0x3f, r0	; 63
    11c6:	cd bf       	out	0x3d, r28	; 61
    11c8:	cf 91       	pop	r28
    11ca:	df 91       	pop	r29
    11cc:	08 95       	ret

000011ce <_ZN8Protocol6_writeEPhi>:
		}
	}	
}


void Protocol::_write(uint8_t *data, int size)
    11ce:	df 93       	push	r29
    11d0:	cf 93       	push	r28
    11d2:	cd b7       	in	r28, 0x3d	; 61
    11d4:	de b7       	in	r29, 0x3e	; 62
    11d6:	28 97       	sbiw	r28, 0x08	; 8
    11d8:	0f b6       	in	r0, 0x3f	; 63
    11da:	f8 94       	cli
    11dc:	de bf       	out	0x3e, r29	; 62
    11de:	0f be       	out	0x3f, r0	; 63
    11e0:	cd bf       	out	0x3d, r28	; 61
    11e2:	9c 83       	std	Y+4, r25	; 0x04
    11e4:	8b 83       	std	Y+3, r24	; 0x03
    11e6:	7e 83       	std	Y+6, r23	; 0x06
    11e8:	6d 83       	std	Y+5, r22	; 0x05
    11ea:	58 87       	std	Y+8, r21	; 0x08
    11ec:	4f 83       	std	Y+7, r20	; 0x07
{
	uint8_t *p = data;
    11ee:	8d 81       	ldd	r24, Y+5	; 0x05
    11f0:	9e 81       	ldd	r25, Y+6	; 0x06
    11f2:	9a 83       	std	Y+2, r25	; 0x02
    11f4:	89 83       	std	Y+1, r24	; 0x01
    11f6:	19 c0       	rjmp	.+50     	; 0x122a <_ZN8Protocol6_writeEPhi+0x5c>
	while(p-data < size)
	{
		_uart->write(*p);
    11f8:	eb 81       	ldd	r30, Y+3	; 0x03
    11fa:	fc 81       	ldd	r31, Y+4	; 0x04
    11fc:	01 90       	ld	r0, Z+
    11fe:	f0 81       	ld	r31, Z
    1200:	e0 2d       	mov	r30, r0
    1202:	01 90       	ld	r0, Z+
    1204:	f0 81       	ld	r31, Z
    1206:	e0 2d       	mov	r30, r0
    1208:	40 81       	ld	r20, Z
    120a:	51 81       	ldd	r21, Z+1	; 0x01
    120c:	eb 81       	ldd	r30, Y+3	; 0x03
    120e:	fc 81       	ldd	r31, Y+4	; 0x04
    1210:	80 81       	ld	r24, Z
    1212:	91 81       	ldd	r25, Z+1	; 0x01
    1214:	e9 81       	ldd	r30, Y+1	; 0x01
    1216:	fa 81       	ldd	r31, Y+2	; 0x02
    1218:	20 81       	ld	r18, Z
    121a:	62 2f       	mov	r22, r18
    121c:	fa 01       	movw	r30, r20
    121e:	09 95       	icall
		p++;
    1220:	89 81       	ldd	r24, Y+1	; 0x01
    1222:	9a 81       	ldd	r25, Y+2	; 0x02
    1224:	01 96       	adiw	r24, 0x01	; 1
    1226:	9a 83       	std	Y+2, r25	; 0x02
    1228:	89 83       	std	Y+1, r24	; 0x01


void Protocol::_write(uint8_t *data, int size)
{
	uint8_t *p = data;
	while(p-data < size)
    122a:	29 81       	ldd	r18, Y+1	; 0x01
    122c:	3a 81       	ldd	r19, Y+2	; 0x02
    122e:	8d 81       	ldd	r24, Y+5	; 0x05
    1230:	9e 81       	ldd	r25, Y+6	; 0x06
    1232:	28 1b       	sub	r18, r24
    1234:	39 0b       	sbc	r19, r25
    1236:	8f 81       	ldd	r24, Y+7	; 0x07
    1238:	98 85       	ldd	r25, Y+8	; 0x08
    123a:	28 17       	cp	r18, r24
    123c:	39 07       	cpc	r19, r25
    123e:	e4 f2       	brlt	.-72     	; 0x11f8 <_ZN8Protocol6_writeEPhi+0x2a>
	{
		_uart->write(*p);
		p++;
	}
}
    1240:	28 96       	adiw	r28, 0x08	; 8
    1242:	0f b6       	in	r0, 0x3f	; 63
    1244:	f8 94       	cli
    1246:	de bf       	out	0x3e, r29	; 62
    1248:	0f be       	out	0x3f, r0	; 63
    124a:	cd bf       	out	0x3d, r28	; 61
    124c:	cf 91       	pop	r28
    124e:	df 91       	pop	r29
    1250:	08 95       	ret

00001252 <_ZN8Protocol5_readEv>:

uint8_t Protocol::_read()
    1252:	df 93       	push	r29
    1254:	cf 93       	push	r28
    1256:	00 d0       	rcall	.+0      	; 0x1258 <_ZN8Protocol5_readEv+0x6>
    1258:	00 d0       	rcall	.+0      	; 0x125a <_ZN8Protocol5_readEv+0x8>
    125a:	cd b7       	in	r28, 0x3d	; 61
    125c:	de b7       	in	r29, 0x3e	; 62
    125e:	9c 83       	std	Y+4, r25	; 0x04
    1260:	8b 83       	std	Y+3, r24	; 0x03
{
	int c = -1;
    1262:	8f ef       	ldi	r24, 0xFF	; 255
    1264:	9f ef       	ldi	r25, 0xFF	; 255
    1266:	9a 83       	std	Y+2, r25	; 0x02
    1268:	89 83       	std	Y+1, r24	; 0x01
    126a:	39 c0       	rjmp	.+114    	; 0x12de <_ZN8Protocol5_readEv+0x8c>
	//CRITICAL_SECTION{
	while(in_offset < Protocol::BUFFER_SIZE )
	{
		c = _uart->read();
    126c:	eb 81       	ldd	r30, Y+3	; 0x03
    126e:	fc 81       	ldd	r31, Y+4	; 0x04
    1270:	01 90       	ld	r0, Z+
    1272:	f0 81       	ld	r31, Z
    1274:	e0 2d       	mov	r30, r0
    1276:	80 81       	ld	r24, Z
    1278:	91 81       	ldd	r25, Z+1	; 0x01
    127a:	fc 01       	movw	r30, r24
    127c:	32 96       	adiw	r30, 0x02	; 2
    127e:	20 81       	ld	r18, Z
    1280:	31 81       	ldd	r19, Z+1	; 0x01
    1282:	eb 81       	ldd	r30, Y+3	; 0x03
    1284:	fc 81       	ldd	r31, Y+4	; 0x04
    1286:	80 81       	ld	r24, Z
    1288:	91 81       	ldd	r25, Z+1	; 0x01
    128a:	f9 01       	movw	r30, r18
    128c:	09 95       	icall
    128e:	9a 83       	std	Y+2, r25	; 0x02
    1290:	89 83       	std	Y+1, r24	; 0x01
		if(c == -1)
    1292:	89 81       	ldd	r24, Y+1	; 0x01
    1294:	9a 81       	ldd	r25, Y+2	; 0x02
    1296:	2f ef       	ldi	r18, 0xFF	; 255
    1298:	8f 3f       	cpi	r24, 0xFF	; 255
    129a:	92 07       	cpc	r25, r18
    129c:	29 f1       	breq	.+74     	; 0x12e8 <_ZN8Protocol5_readEv+0x96>
			break;
		in[in_offset] = 0;
    129e:	eb 81       	ldd	r30, Y+3	; 0x03
    12a0:	fc 81       	ldd	r31, Y+4	; 0x04
    12a2:	82 a5       	ldd	r24, Z+42	; 0x2a
    12a4:	28 2f       	mov	r18, r24
    12a6:	30 e0       	ldi	r19, 0x00	; 0
    12a8:	8b 81       	ldd	r24, Y+3	; 0x03
    12aa:	9c 81       	ldd	r25, Y+4	; 0x04
    12ac:	82 0f       	add	r24, r18
    12ae:	93 1f       	adc	r25, r19
    12b0:	fc 01       	movw	r30, r24
    12b2:	32 96       	adiw	r30, 0x02	; 2
    12b4:	10 82       	st	Z, r1
		in[in_offset] = (uint8_t)(c & 0xFF);
    12b6:	eb 81       	ldd	r30, Y+3	; 0x03
    12b8:	fc 81       	ldd	r31, Y+4	; 0x04
    12ba:	82 a5       	ldd	r24, Z+42	; 0x2a
    12bc:	28 2f       	mov	r18, r24
    12be:	30 e0       	ldi	r19, 0x00	; 0
    12c0:	49 81       	ldd	r20, Y+1	; 0x01
    12c2:	8b 81       	ldd	r24, Y+3	; 0x03
    12c4:	9c 81       	ldd	r25, Y+4	; 0x04
    12c6:	82 0f       	add	r24, r18
    12c8:	93 1f       	adc	r25, r19
    12ca:	fc 01       	movw	r30, r24
    12cc:	32 96       	adiw	r30, 0x02	; 2
    12ce:	40 83       	st	Z, r20
		in_offset++;
    12d0:	eb 81       	ldd	r30, Y+3	; 0x03
    12d2:	fc 81       	ldd	r31, Y+4	; 0x04
    12d4:	82 a5       	ldd	r24, Z+42	; 0x2a
    12d6:	8f 5f       	subi	r24, 0xFF	; 255
    12d8:	eb 81       	ldd	r30, Y+3	; 0x03
    12da:	fc 81       	ldd	r31, Y+4	; 0x04
    12dc:	82 a7       	std	Z+42, r24	; 0x2a

uint8_t Protocol::_read()
{
	int c = -1;
	//CRITICAL_SECTION{
	while(in_offset < Protocol::BUFFER_SIZE )
    12de:	eb 81       	ldd	r30, Y+3	; 0x03
    12e0:	fc 81       	ldd	r31, Y+4	; 0x04
    12e2:	82 a5       	ldd	r24, Z+42	; 0x2a
    12e4:	84 31       	cpi	r24, 0x14	; 20
    12e6:	10 f2       	brcs	.-124    	; 0x126c <_ZN8Protocol5_readEv+0x1a>
		in[in_offset] = 0;
		in[in_offset] = (uint8_t)(c & 0xFF);
		in_offset++;
	}
	//}
	return 0;
    12e8:	80 e0       	ldi	r24, 0x00	; 0
}
    12ea:	0f 90       	pop	r0
    12ec:	0f 90       	pop	r0
    12ee:	0f 90       	pop	r0
    12f0:	0f 90       	pop	r0
    12f2:	cf 91       	pop	r28
    12f4:	df 91       	pop	r29
    12f6:	08 95       	ret
	// Dump the value of a sensor
	Stream& operator<< (Sensor& sensor ){
		return print(sensor);
	}

	Stream& operator<< (const char str[] ){
    12f8:	df 93       	push	r29
    12fa:	cf 93       	push	r28
    12fc:	00 d0       	rcall	.+0      	; 0x12fe <_ZN8Protocol5_readEv+0xac>
    12fe:	00 d0       	rcall	.+0      	; 0x1300 <_ZN8Protocol5_readEv+0xae>
    1300:	cd b7       	in	r28, 0x3d	; 61
    1302:	de b7       	in	r29, 0x3e	; 62
    1304:	9a 83       	std	Y+2, r25	; 0x02
    1306:	89 83       	std	Y+1, r24	; 0x01
    1308:	7c 83       	std	Y+4, r23	; 0x04
    130a:	6b 83       	std	Y+3, r22	; 0x03
		return print(str);
    130c:	89 81       	ldd	r24, Y+1	; 0x01
    130e:	9a 81       	ldd	r25, Y+2	; 0x02
    1310:	2b 81       	ldd	r18, Y+3	; 0x03
    1312:	3c 81       	ldd	r19, Y+4	; 0x04
    1314:	b9 01       	movw	r22, r18
    1316:	0e 94 6a 12 	call	0x24d4	; 0x24d4 <_ZN6Stream5printEPKc>
	}
    131a:	0f 90       	pop	r0
    131c:	0f 90       	pop	r0
    131e:	0f 90       	pop	r0
    1320:	0f 90       	pop	r0
    1322:	cf 91       	pop	r28
    1324:	df 91       	pop	r29
    1326:	08 95       	ret
		return print(num);
	}
	Stream& operator<< (int8_t num ){
		return print(num);
	}
	Stream& operator<< (int16_t num ){
    1328:	df 93       	push	r29
    132a:	cf 93       	push	r28
    132c:	00 d0       	rcall	.+0      	; 0x132e <_ZN8Protocol5_readEv+0xdc>
    132e:	00 d0       	rcall	.+0      	; 0x1330 <_ZN8Protocol5_readEv+0xde>
    1330:	cd b7       	in	r28, 0x3d	; 61
    1332:	de b7       	in	r29, 0x3e	; 62
    1334:	9a 83       	std	Y+2, r25	; 0x02
    1336:	89 83       	std	Y+1, r24	; 0x01
    1338:	7c 83       	std	Y+4, r23	; 0x04
    133a:	6b 83       	std	Y+3, r22	; 0x03
		return print(num);
    133c:	89 81       	ldd	r24, Y+1	; 0x01
    133e:	9a 81       	ldd	r25, Y+2	; 0x02
    1340:	2b 81       	ldd	r18, Y+3	; 0x03
    1342:	3c 81       	ldd	r19, Y+4	; 0x04
    1344:	b9 01       	movw	r22, r18
    1346:	0e 94 43 12 	call	0x2486	; 0x2486 <_ZN6Stream5printEi>
	}
    134a:	0f 90       	pop	r0
    134c:	0f 90       	pop	r0
    134e:	0f 90       	pop	r0
    1350:	0f 90       	pop	r0
    1352:	cf 91       	pop	r28
    1354:	df 91       	pop	r29
    1356:	08 95       	ret

00001358 <_ZN8Protocol5forgeER6Packet>:
			break;
		}
	}	
}

void Protocol::forge(Packet &p)
    1358:	df 93       	push	r29
    135a:	cf 93       	push	r28
    135c:	00 d0       	rcall	.+0      	; 0x135e <_ZN8Protocol5forgeER6Packet+0x6>
    135e:	00 d0       	rcall	.+0      	; 0x1360 <_ZN8Protocol5forgeER6Packet+0x8>
    1360:	00 d0       	rcall	.+0      	; 0x1362 <_ZN8Protocol5forgeER6Packet+0xa>
    1362:	cd b7       	in	r28, 0x3d	; 61
    1364:	de b7       	in	r29, 0x3e	; 62
    1366:	9a 83       	std	Y+2, r25	; 0x02
    1368:	89 83       	std	Y+1, r24	; 0x01
    136a:	7c 83       	std	Y+4, r23	; 0x04
    136c:	6b 83       	std	Y+3, r22	; 0x03
{
	switch (in[0])
    136e:	e9 81       	ldd	r30, Y+1	; 0x01
    1370:	fa 81       	ldd	r31, Y+2	; 0x02
    1372:	82 81       	ldd	r24, Z+2	; 0x02
    1374:	28 2f       	mov	r18, r24
    1376:	30 e0       	ldi	r19, 0x00	; 0
    1378:	3e 83       	std	Y+6, r19	; 0x06
    137a:	2d 83       	std	Y+5, r18	; 0x05
    137c:	8d 81       	ldd	r24, Y+5	; 0x05
    137e:	9e 81       	ldd	r25, Y+6	; 0x06
    1380:	82 30       	cpi	r24, 0x02	; 2
    1382:	91 05       	cpc	r25, r1
    1384:	09 f4       	brne	.+2      	; 0x1388 <_ZN8Protocol5forgeER6Packet+0x30>
    1386:	3e c0       	rjmp	.+124    	; 0x1404 <_ZN8Protocol5forgeER6Packet+0xac>
    1388:	2d 81       	ldd	r18, Y+5	; 0x05
    138a:	3e 81       	ldd	r19, Y+6	; 0x06
    138c:	23 30       	cpi	r18, 0x03	; 3
    138e:	31 05       	cpc	r19, r1
    1390:	34 f4       	brge	.+12     	; 0x139e <_ZN8Protocol5forgeER6Packet+0x46>
    1392:	8d 81       	ldd	r24, Y+5	; 0x05
    1394:	9e 81       	ldd	r25, Y+6	; 0x06
    1396:	81 30       	cpi	r24, 0x01	; 1
    1398:	91 05       	cpc	r25, r1
    139a:	71 f0       	breq	.+28     	; 0x13b8 <_ZN8Protocol5forgeER6Packet+0x60>
    139c:	6a c0       	rjmp	.+212    	; 0x1472 <_ZN8Protocol5forgeER6Packet+0x11a>
    139e:	2d 81       	ldd	r18, Y+5	; 0x05
    13a0:	3e 81       	ldd	r19, Y+6	; 0x06
    13a2:	23 30       	cpi	r18, 0x03	; 3
    13a4:	31 05       	cpc	r19, r1
    13a6:	09 f4       	brne	.+2      	; 0x13aa <_ZN8Protocol5forgeER6Packet+0x52>
    13a8:	4b c0       	rjmp	.+150    	; 0x1440 <_ZN8Protocol5forgeER6Packet+0xe8>
    13aa:	8d 81       	ldd	r24, Y+5	; 0x05
    13ac:	9e 81       	ldd	r25, Y+6	; 0x06
    13ae:	84 30       	cpi	r24, 0x04	; 4
    13b0:	91 05       	cpc	r25, r1
    13b2:	09 f4       	brne	.+2      	; 0x13b6 <_ZN8Protocol5forgeER6Packet+0x5e>
    13b4:	52 c0       	rjmp	.+164    	; 0x145a <_ZN8Protocol5forgeER6Packet+0x102>
    13b6:	5d c0       	rjmp	.+186    	; 0x1472 <_ZN8Protocol5forgeER6Packet+0x11a>
	{
		case Packet::SET_POS :{
			p.cmd_id = in[0];
    13b8:	e9 81       	ldd	r30, Y+1	; 0x01
    13ba:	fa 81       	ldd	r31, Y+2	; 0x02
    13bc:	82 81       	ldd	r24, Z+2	; 0x02
    13be:	eb 81       	ldd	r30, Y+3	; 0x03
    13c0:	fc 81       	ldd	r31, Y+4	; 0x04
    13c2:	80 83       	st	Z, r24
			p.motor_id = in[1];
    13c4:	e9 81       	ldd	r30, Y+1	; 0x01
    13c6:	fa 81       	ldd	r31, Y+2	; 0x02
    13c8:	83 81       	ldd	r24, Z+3	; 0x03
    13ca:	eb 81       	ldd	r30, Y+3	; 0x03
    13cc:	fc 81       	ldd	r31, Y+4	; 0x04
    13ce:	81 83       	std	Z+1, r24	; 0x01
			p.pos = in[2];
    13d0:	e9 81       	ldd	r30, Y+1	; 0x01
    13d2:	fa 81       	ldd	r31, Y+2	; 0x02
    13d4:	84 81       	ldd	r24, Z+4	; 0x04
    13d6:	eb 81       	ldd	r30, Y+3	; 0x03
    13d8:	fc 81       	ldd	r31, Y+4	; 0x04
    13da:	82 83       	std	Z+2, r24	; 0x02
			p.t = (in[3]<<8 & 0xFF00) | (in[4] & 0x00FF);
    13dc:	e9 81       	ldd	r30, Y+1	; 0x01
    13de:	fa 81       	ldd	r31, Y+2	; 0x02
    13e0:	85 81       	ldd	r24, Z+5	; 0x05
    13e2:	88 2f       	mov	r24, r24
    13e4:	90 e0       	ldi	r25, 0x00	; 0
    13e6:	98 2f       	mov	r25, r24
    13e8:	88 27       	eor	r24, r24
    13ea:	9c 01       	movw	r18, r24
    13ec:	e9 81       	ldd	r30, Y+1	; 0x01
    13ee:	fa 81       	ldd	r31, Y+2	; 0x02
    13f0:	86 81       	ldd	r24, Z+6	; 0x06
    13f2:	88 2f       	mov	r24, r24
    13f4:	90 e0       	ldi	r25, 0x00	; 0
    13f6:	82 2b       	or	r24, r18
    13f8:	93 2b       	or	r25, r19
    13fa:	eb 81       	ldd	r30, Y+3	; 0x03
    13fc:	fc 81       	ldd	r31, Y+4	; 0x04
    13fe:	94 83       	std	Z+4, r25	; 0x04
    1400:	83 83       	std	Z+3, r24	; 0x03
    1402:	37 c0       	rjmp	.+110    	; 0x1472 <_ZN8Protocol5forgeER6Packet+0x11a>
			break;
		}
		case Packet::GET_POS: {
			p.cmd_id = in[0];
    1404:	e9 81       	ldd	r30, Y+1	; 0x01
    1406:	fa 81       	ldd	r31, Y+2	; 0x02
    1408:	82 81       	ldd	r24, Z+2	; 0x02
    140a:	eb 81       	ldd	r30, Y+3	; 0x03
    140c:	fc 81       	ldd	r31, Y+4	; 0x04
    140e:	80 83       	st	Z, r24
			p.motor_id = in[1];
    1410:	e9 81       	ldd	r30, Y+1	; 0x01
    1412:	fa 81       	ldd	r31, Y+2	; 0x02
    1414:	83 81       	ldd	r24, Z+3	; 0x03
    1416:	eb 81       	ldd	r30, Y+3	; 0x03
    1418:	fc 81       	ldd	r31, Y+4	; 0x04
    141a:	81 83       	std	Z+1, r24	; 0x01
			uart1<<" command "<<(int)in[0];
    141c:	8c e0       	ldi	r24, 0x0C	; 12
    141e:	94 e0       	ldi	r25, 0x04	; 4
    1420:	27 e1       	ldi	r18, 0x17	; 23
    1422:	32 e0       	ldi	r19, 0x02	; 2
    1424:	b9 01       	movw	r22, r18
    1426:	0e 94 ae 06 	call	0xd5c	; 0xd5c <_ZN6StreamlsEPKc>
    142a:	ac 01       	movw	r20, r24
    142c:	e9 81       	ldd	r30, Y+1	; 0x01
    142e:	fa 81       	ldd	r31, Y+2	; 0x02
    1430:	82 81       	ldd	r24, Z+2	; 0x02
    1432:	28 2f       	mov	r18, r24
    1434:	30 e0       	ldi	r19, 0x00	; 0
    1436:	ca 01       	movw	r24, r20
    1438:	b9 01       	movw	r22, r18
    143a:	0e 94 96 06 	call	0xd2c	; 0xd2c <_ZN6StreamlsEi>
    143e:	19 c0       	rjmp	.+50     	; 0x1472 <_ZN8Protocol5forgeER6Packet+0x11a>
			break;
		}
		case Packet::GET_STATUS:{
			p.cmd_id = in[0];
    1440:	e9 81       	ldd	r30, Y+1	; 0x01
    1442:	fa 81       	ldd	r31, Y+2	; 0x02
    1444:	82 81       	ldd	r24, Z+2	; 0x02
    1446:	eb 81       	ldd	r30, Y+3	; 0x03
    1448:	fc 81       	ldd	r31, Y+4	; 0x04
    144a:	80 83       	st	Z, r24
			p.motor_id = in[1];
    144c:	e9 81       	ldd	r30, Y+1	; 0x01
    144e:	fa 81       	ldd	r31, Y+2	; 0x02
    1450:	83 81       	ldd	r24, Z+3	; 0x03
    1452:	eb 81       	ldd	r30, Y+3	; 0x03
    1454:	fc 81       	ldd	r31, Y+4	; 0x04
    1456:	81 83       	std	Z+1, r24	; 0x01
    1458:	0c c0       	rjmp	.+24     	; 0x1472 <_ZN8Protocol5forgeER6Packet+0x11a>
			break;
		}
		case Packet::STOP_MOTION: { 
			p.cmd_id = in[0];
    145a:	e9 81       	ldd	r30, Y+1	; 0x01
    145c:	fa 81       	ldd	r31, Y+2	; 0x02
    145e:	82 81       	ldd	r24, Z+2	; 0x02
    1460:	eb 81       	ldd	r30, Y+3	; 0x03
    1462:	fc 81       	ldd	r31, Y+4	; 0x04
    1464:	80 83       	st	Z, r24
			p.motor_id = in[1];
    1466:	e9 81       	ldd	r30, Y+1	; 0x01
    1468:	fa 81       	ldd	r31, Y+2	; 0x02
    146a:	83 81       	ldd	r24, Z+3	; 0x03
    146c:	eb 81       	ldd	r30, Y+3	; 0x03
    146e:	fc 81       	ldd	r31, Y+4	; 0x04
    1470:	81 83       	std	Z+1, r24	; 0x01
			break;
		}
	}	
}
    1472:	26 96       	adiw	r28, 0x06	; 6
    1474:	0f b6       	in	r0, 0x3f	; 63
    1476:	f8 94       	cli
    1478:	de bf       	out	0x3e, r29	; 62
    147a:	0f be       	out	0x3f, r0	; 63
    147c:	cd bf       	out	0x3d, r28	; 61
    147e:	cf 91       	pop	r28
    1480:	df 91       	pop	r29
    1482:	08 95       	ret

00001484 <_ZN6StreamlsEh>:
		return print(str);
	}
	Stream& operator<< (char c ){
		return print(c);
	}
	Stream& operator<< (uint8_t num ){
    1484:	df 93       	push	r29
    1486:	cf 93       	push	r28
    1488:	00 d0       	rcall	.+0      	; 0x148a <_ZN6StreamlsEh+0x6>
    148a:	0f 92       	push	r0
    148c:	cd b7       	in	r28, 0x3d	; 61
    148e:	de b7       	in	r29, 0x3e	; 62
    1490:	9a 83       	std	Y+2, r25	; 0x02
    1492:	89 83       	std	Y+1, r24	; 0x01
    1494:	6b 83       	std	Y+3, r22	; 0x03
		return print(num);
    1496:	89 81       	ldd	r24, Y+1	; 0x01
    1498:	9a 81       	ldd	r25, Y+2	; 0x02
    149a:	6b 81       	ldd	r22, Y+3	; 0x03
    149c:	0e 94 b8 12 	call	0x2570	; 0x2570 <_ZN6Stream5printEh>
	}
    14a0:	0f 90       	pop	r0
    14a2:	0f 90       	pop	r0
    14a4:	0f 90       	pop	r0
    14a6:	cf 91       	pop	r28
    14a8:	df 91       	pop	r29
    14aa:	08 95       	ret

000014ac <_ZN8Protocol7treatIOER6Packet>:
			_uart->write('\n');
}



int Protocol::treatIO(Packet &p)
    14ac:	df 93       	push	r29
    14ae:	cf 93       	push	r28
    14b0:	cd b7       	in	r28, 0x3d	; 61
    14b2:	de b7       	in	r29, 0x3e	; 62
    14b4:	28 97       	sbiw	r28, 0x08	; 8
    14b6:	0f b6       	in	r0, 0x3f	; 63
    14b8:	f8 94       	cli
    14ba:	de bf       	out	0x3e, r29	; 62
    14bc:	0f be       	out	0x3f, r0	; 63
    14be:	cd bf       	out	0x3d, r28	; 61
    14c0:	9c 83       	std	Y+4, r25	; 0x04
    14c2:	8b 83       	std	Y+3, r24	; 0x03
    14c4:	7e 83       	std	Y+6, r23	; 0x06
    14c6:	6d 83       	std	Y+5, r22	; 0x05
{	
	const static uint8_t command_len[] = {BUFFER_SIZE, 5, 1, 1, 1};
	
	_read();
    14c8:	8b 81       	ldd	r24, Y+3	; 0x03
    14ca:	9c 81       	ldd	r25, Y+4	; 0x04
    14cc:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN8Protocol5_readEv>
	uint8_t len = BUFFER_SIZE;
    14d0:	84 e1       	ldi	r24, 0x14	; 20
    14d2:	8a 83       	std	Y+2, r24	; 0x02
	if(in_offset>0)
    14d4:	eb 81       	ldd	r30, Y+3	; 0x03
    14d6:	fc 81       	ldd	r31, Y+4	; 0x04
    14d8:	82 a5       	ldd	r24, Z+42	; 0x2a
    14da:	88 23       	and	r24, r24
    14dc:	09 f4       	brne	.+2      	; 0x14e0 <_ZN8Protocol7treatIOER6Packet+0x34>
    14de:	64 c0       	rjmp	.+200    	; 0x15a8 <_ZN8Protocol7treatIOER6Packet+0xfc>
	{
		if(in[0] == 0 || in[0] >= sizeof(command_len)/sizeof(uint8_t))
    14e0:	eb 81       	ldd	r30, Y+3	; 0x03
    14e2:	fc 81       	ldd	r31, Y+4	; 0x04
    14e4:	82 81       	ldd	r24, Z+2	; 0x02
    14e6:	88 23       	and	r24, r24
    14e8:	29 f0       	breq	.+10     	; 0x14f4 <_ZN8Protocol7treatIOER6Packet+0x48>
    14ea:	eb 81       	ldd	r30, Y+3	; 0x03
    14ec:	fc 81       	ldd	r31, Y+4	; 0x04
    14ee:	82 81       	ldd	r24, Z+2	; 0x02
    14f0:	85 30       	cpi	r24, 0x05	; 5
    14f2:	30 f0       	brcs	.+12     	; 0x1500 <_ZN8Protocol7treatIOER6Packet+0x54>
		{
			in_offset = 0;
    14f4:	eb 81       	ldd	r30, Y+3	; 0x03
    14f6:	fc 81       	ldd	r31, Y+4	; 0x04
    14f8:	12 a6       	std	Z+42, r1	; 0x2a
			return 0;
    14fa:	18 86       	std	Y+8, r1	; 0x08
    14fc:	1f 82       	std	Y+7, r1	; 0x07
    14fe:	6e c0       	rjmp	.+220    	; 0x15dc <_ZN8Protocol7treatIOER6Packet+0x130>
		}
	//	if(in[0]<sizeof(command_len))
		len = command_len[in[0]];
    1500:	eb 81       	ldd	r30, Y+3	; 0x03
    1502:	fc 81       	ldd	r31, Y+4	; 0x04
    1504:	82 81       	ldd	r24, Z+2	; 0x02
    1506:	88 2f       	mov	r24, r24
    1508:	90 e0       	ldi	r25, 0x00	; 0
    150a:	fc 01       	movw	r30, r24
    150c:	e8 5d       	subi	r30, 0xD8	; 216
    150e:	fd 4f       	sbci	r31, 0xFD	; 253
    1510:	80 81       	ld	r24, Z
    1512:	8a 83       	std	Y+2, r24	; 0x02

		uart1<<"len : "<<len;
    1514:	8c e0       	ldi	r24, 0x0C	; 12
    1516:	94 e0       	ldi	r25, 0x04	; 4
    1518:	21 e2       	ldi	r18, 0x21	; 33
    151a:	32 e0       	ldi	r19, 0x02	; 2
    151c:	b9 01       	movw	r22, r18
    151e:	0e 94 ae 06 	call	0xd5c	; 0xd5c <_ZN6StreamlsEPKc>
    1522:	6a 81       	ldd	r22, Y+2	; 0x02
    1524:	0e 94 42 0a 	call	0x1484	; 0x1484 <_ZN6StreamlsEh>
		
		if (in_offset>=len)
    1528:	eb 81       	ldd	r30, Y+3	; 0x03
    152a:	fc 81       	ldd	r31, Y+4	; 0x04
    152c:	92 a5       	ldd	r25, Z+42	; 0x2a
    152e:	8a 81       	ldd	r24, Y+2	; 0x02
    1530:	98 17       	cp	r25, r24
    1532:	d0 f1       	brcs	.+116    	; 0x15a8 <_ZN8Protocol7treatIOER6Packet+0xfc>
		{
			forge(p);
    1534:	8b 81       	ldd	r24, Y+3	; 0x03
    1536:	9c 81       	ldd	r25, Y+4	; 0x04
    1538:	2d 81       	ldd	r18, Y+5	; 0x05
    153a:	3e 81       	ldd	r19, Y+6	; 0x06
    153c:	b9 01       	movw	r22, r18
    153e:	0e 94 ac 09 	call	0x1358	; 0x1358 <_ZN8Protocol5forgeER6Packet>
			
			in_offset-=len;
    1542:	eb 81       	ldd	r30, Y+3	; 0x03
    1544:	fc 81       	ldd	r31, Y+4	; 0x04
    1546:	92 a5       	ldd	r25, Z+42	; 0x2a
    1548:	8a 81       	ldd	r24, Y+2	; 0x02
    154a:	29 2f       	mov	r18, r25
    154c:	28 1b       	sub	r18, r24
    154e:	82 2f       	mov	r24, r18
    1550:	eb 81       	ldd	r30, Y+3	; 0x03
    1552:	fc 81       	ldd	r31, Y+4	; 0x04
    1554:	82 a7       	std	Z+42, r24	; 0x2a
			for(uint8_t i=0;i<in_offset;i++)
    1556:	19 82       	std	Y+1, r1	; 0x01
    1558:	1c c0       	rjmp	.+56     	; 0x1592 <_ZN8Protocol7treatIOER6Packet+0xe6>
			{
				in[i] = in[i+len];
    155a:	89 81       	ldd	r24, Y+1	; 0x01
    155c:	48 2f       	mov	r20, r24
    155e:	50 e0       	ldi	r21, 0x00	; 0
    1560:	89 81       	ldd	r24, Y+1	; 0x01
    1562:	28 2f       	mov	r18, r24
    1564:	30 e0       	ldi	r19, 0x00	; 0
    1566:	8a 81       	ldd	r24, Y+2	; 0x02
    1568:	88 2f       	mov	r24, r24
    156a:	90 e0       	ldi	r25, 0x00	; 0
    156c:	28 0f       	add	r18, r24
    156e:	39 1f       	adc	r19, r25
    1570:	8b 81       	ldd	r24, Y+3	; 0x03
    1572:	9c 81       	ldd	r25, Y+4	; 0x04
    1574:	82 0f       	add	r24, r18
    1576:	93 1f       	adc	r25, r19
    1578:	fc 01       	movw	r30, r24
    157a:	32 96       	adiw	r30, 0x02	; 2
    157c:	20 81       	ld	r18, Z
    157e:	8b 81       	ldd	r24, Y+3	; 0x03
    1580:	9c 81       	ldd	r25, Y+4	; 0x04
    1582:	84 0f       	add	r24, r20
    1584:	95 1f       	adc	r25, r21
    1586:	fc 01       	movw	r30, r24
    1588:	32 96       	adiw	r30, 0x02	; 2
    158a:	20 83       	st	Z, r18
		if (in_offset>=len)
		{
			forge(p);
			
			in_offset-=len;
			for(uint8_t i=0;i<in_offset;i++)
    158c:	89 81       	ldd	r24, Y+1	; 0x01
    158e:	8f 5f       	subi	r24, 0xFF	; 255
    1590:	89 83       	std	Y+1, r24	; 0x01
    1592:	eb 81       	ldd	r30, Y+3	; 0x03
    1594:	fc 81       	ldd	r31, Y+4	; 0x04
    1596:	92 a5       	ldd	r25, Z+42	; 0x2a
    1598:	89 81       	ldd	r24, Y+1	; 0x01
    159a:	89 17       	cp	r24, r25
    159c:	f0 f2       	brcs	.-68     	; 0x155a <_ZN8Protocol7treatIOER6Packet+0xae>
			{
				in[i] = in[i+len];
			}
			return 1;
    159e:	81 e0       	ldi	r24, 0x01	; 1
    15a0:	90 e0       	ldi	r25, 0x00	; 0
    15a2:	98 87       	std	Y+8, r25	; 0x08
    15a4:	8f 83       	std	Y+7, r24	; 0x07
    15a6:	1a c0       	rjmp	.+52     	; 0x15dc <_ZN8Protocol7treatIOER6Packet+0x130>
		}
	}
	if(out_offset>0)
    15a8:	eb 81       	ldd	r30, Y+3	; 0x03
    15aa:	fc 81       	ldd	r31, Y+4	; 0x04
    15ac:	83 a5       	ldd	r24, Z+43	; 0x2b
    15ae:	88 23       	and	r24, r24
    15b0:	99 f0       	breq	.+38     	; 0x15d8 <_ZN8Protocol7treatIOER6Packet+0x12c>
	{
		_write(out, out_offset);
    15b2:	8b 81       	ldd	r24, Y+3	; 0x03
    15b4:	9c 81       	ldd	r25, Y+4	; 0x04
    15b6:	ac 01       	movw	r20, r24
    15b8:	4a 5e       	subi	r20, 0xEA	; 234
    15ba:	5f 4f       	sbci	r21, 0xFF	; 255
    15bc:	eb 81       	ldd	r30, Y+3	; 0x03
    15be:	fc 81       	ldd	r31, Y+4	; 0x04
    15c0:	83 a5       	ldd	r24, Z+43	; 0x2b
    15c2:	28 2f       	mov	r18, r24
    15c4:	30 e0       	ldi	r19, 0x00	; 0
    15c6:	8b 81       	ldd	r24, Y+3	; 0x03
    15c8:	9c 81       	ldd	r25, Y+4	; 0x04
    15ca:	ba 01       	movw	r22, r20
    15cc:	a9 01       	movw	r20, r18
    15ce:	0e 94 e7 08 	call	0x11ce	; 0x11ce <_ZN8Protocol6_writeEPhi>
		out_offset = 0;
    15d2:	eb 81       	ldd	r30, Y+3	; 0x03
    15d4:	fc 81       	ldd	r31, Y+4	; 0x04
    15d6:	13 a6       	std	Z+43, r1	; 0x2b
	}
	return 0;
    15d8:	18 86       	std	Y+8, r1	; 0x08
    15da:	1f 82       	std	Y+7, r1	; 0x07
    15dc:	8f 81       	ldd	r24, Y+7	; 0x07
    15de:	98 85       	ldd	r25, Y+8	; 0x08
}
    15e0:	28 96       	adiw	r28, 0x08	; 8
    15e2:	0f b6       	in	r0, 0x3f	; 63
    15e4:	f8 94       	cli
    15e6:	de bf       	out	0x3e, r29	; 62
    15e8:	0f be       	out	0x3f, r0	; 63
    15ea:	cd bf       	out	0x3d, r28	; 61
    15ec:	cf 91       	pop	r28
    15ee:	df 91       	pop	r29
    15f0:	08 95       	ret

000015f2 <_ZN8Protocol5printEi>:
{
	_uart = uart;
	_uart->setPollingMode(false);
}

void Protocol::print(int16_t i)
    15f2:	df 93       	push	r29
    15f4:	cf 93       	push	r28
    15f6:	cd b7       	in	r28, 0x3d	; 61
    15f8:	de b7       	in	r29, 0x3e	; 62
    15fa:	64 97       	sbiw	r28, 0x14	; 20
    15fc:	0f b6       	in	r0, 0x3f	; 63
    15fe:	f8 94       	cli
    1600:	de bf       	out	0x3e, r29	; 62
    1602:	0f be       	out	0x3f, r0	; 63
    1604:	cd bf       	out	0x3d, r28	; 61
    1606:	9a 8b       	std	Y+18, r25	; 0x12
    1608:	89 8b       	std	Y+17, r24	; 0x11
    160a:	7c 8b       	std	Y+20, r23	; 0x14
    160c:	6b 8b       	std	Y+19, r22	; 0x13
{
		char str[10];
		for(int j=0;j<10;j++)
    160e:	1c 82       	std	Y+4, r1	; 0x04
    1610:	1b 82       	std	Y+3, r1	; 0x03
    1612:	0d c0       	rjmp	.+26     	; 0x162e <_ZN8Protocol5printEi+0x3c>
			str[j] = 0;
    1614:	2b 81       	ldd	r18, Y+3	; 0x03
    1616:	3c 81       	ldd	r19, Y+4	; 0x04
    1618:	ce 01       	movw	r24, r28
    161a:	07 96       	adiw	r24, 0x07	; 7
    161c:	fc 01       	movw	r30, r24
    161e:	e2 0f       	add	r30, r18
    1620:	f3 1f       	adc	r31, r19
    1622:	10 82       	st	Z, r1
}

void Protocol::print(int16_t i)
{
		char str[10];
		for(int j=0;j<10;j++)
    1624:	8b 81       	ldd	r24, Y+3	; 0x03
    1626:	9c 81       	ldd	r25, Y+4	; 0x04
    1628:	01 96       	adiw	r24, 0x01	; 1
    162a:	9c 83       	std	Y+4, r25	; 0x04
    162c:	8b 83       	std	Y+3, r24	; 0x03
    162e:	8b 81       	ldd	r24, Y+3	; 0x03
    1630:	9c 81       	ldd	r25, Y+4	; 0x04
    1632:	8a 30       	cpi	r24, 0x0A	; 10
    1634:	91 05       	cpc	r25, r1
    1636:	74 f3       	brlt	.-36     	; 0x1614 <_ZN8Protocol5printEi+0x22>
			str[j] = 0;
		char *p = str;
    1638:	ce 01       	movw	r24, r28
    163a:	07 96       	adiw	r24, 0x07	; 7
    163c:	9e 83       	std	Y+6, r25	; 0x06
    163e:	8d 83       	std	Y+5, r24	; 0x05
		p=itoa(i, (char*)str, 10);
    1640:	8b 89       	ldd	r24, Y+19	; 0x13
    1642:	9c 89       	ldd	r25, Y+20	; 0x14
    1644:	9e 01       	movw	r18, r28
    1646:	29 5f       	subi	r18, 0xF9	; 249
    1648:	3f 4f       	sbci	r19, 0xFF	; 255
    164a:	b9 01       	movw	r22, r18
    164c:	4a e0       	ldi	r20, 0x0A	; 10
    164e:	50 e0       	ldi	r21, 0x00	; 0
    1650:	0e 94 51 1e 	call	0x3ca2	; 0x3ca2 <itoa>
    1654:	9e 83       	std	Y+6, r25	; 0x06
    1656:	8d 83       	std	Y+5, r24	; 0x05
		for(int j=0;j<10;j++)
    1658:	1a 82       	std	Y+2, r1	; 0x02
    165a:	19 82       	std	Y+1, r1	; 0x01
    165c:	20 c0       	rjmp	.+64     	; 0x169e <_ZN8Protocol5printEi+0xac>
		{
			_uart->write(p[j]);
    165e:	e9 89       	ldd	r30, Y+17	; 0x11
    1660:	fa 89       	ldd	r31, Y+18	; 0x12
    1662:	01 90       	ld	r0, Z+
    1664:	f0 81       	ld	r31, Z
    1666:	e0 2d       	mov	r30, r0
    1668:	01 90       	ld	r0, Z+
    166a:	f0 81       	ld	r31, Z
    166c:	e0 2d       	mov	r30, r0
    166e:	a0 81       	ld	r26, Z
    1670:	b1 81       	ldd	r27, Z+1	; 0x01
    1672:	e9 89       	ldd	r30, Y+17	; 0x11
    1674:	fa 89       	ldd	r31, Y+18	; 0x12
    1676:	80 81       	ld	r24, Z
    1678:	91 81       	ldd	r25, Z+1	; 0x01
    167a:	ac 01       	movw	r20, r24
    167c:	29 81       	ldd	r18, Y+1	; 0x01
    167e:	3a 81       	ldd	r19, Y+2	; 0x02
    1680:	8d 81       	ldd	r24, Y+5	; 0x05
    1682:	9e 81       	ldd	r25, Y+6	; 0x06
    1684:	fc 01       	movw	r30, r24
    1686:	e2 0f       	add	r30, r18
    1688:	f3 1f       	adc	r31, r19
    168a:	20 81       	ld	r18, Z
    168c:	ca 01       	movw	r24, r20
    168e:	62 2f       	mov	r22, r18
    1690:	fd 01       	movw	r30, r26
    1692:	09 95       	icall
		char str[10];
		for(int j=0;j<10;j++)
			str[j] = 0;
		char *p = str;
		p=itoa(i, (char*)str, 10);
		for(int j=0;j<10;j++)
    1694:	89 81       	ldd	r24, Y+1	; 0x01
    1696:	9a 81       	ldd	r25, Y+2	; 0x02
    1698:	01 96       	adiw	r24, 0x01	; 1
    169a:	9a 83       	std	Y+2, r25	; 0x02
    169c:	89 83       	std	Y+1, r24	; 0x01
    169e:	89 81       	ldd	r24, Y+1	; 0x01
    16a0:	9a 81       	ldd	r25, Y+2	; 0x02
    16a2:	8a 30       	cpi	r24, 0x0A	; 10
    16a4:	91 05       	cpc	r25, r1
    16a6:	dc f2       	brlt	.-74     	; 0x165e <_ZN8Protocol5printEi+0x6c>
		{
			_uart->write(p[j]);
		} 
			_uart->write('\r');
    16a8:	e9 89       	ldd	r30, Y+17	; 0x11
    16aa:	fa 89       	ldd	r31, Y+18	; 0x12
    16ac:	01 90       	ld	r0, Z+
    16ae:	f0 81       	ld	r31, Z
    16b0:	e0 2d       	mov	r30, r0
    16b2:	01 90       	ld	r0, Z+
    16b4:	f0 81       	ld	r31, Z
    16b6:	e0 2d       	mov	r30, r0
    16b8:	20 81       	ld	r18, Z
    16ba:	31 81       	ldd	r19, Z+1	; 0x01
    16bc:	e9 89       	ldd	r30, Y+17	; 0x11
    16be:	fa 89       	ldd	r31, Y+18	; 0x12
    16c0:	80 81       	ld	r24, Z
    16c2:	91 81       	ldd	r25, Z+1	; 0x01
    16c4:	6d e0       	ldi	r22, 0x0D	; 13
    16c6:	f9 01       	movw	r30, r18
    16c8:	09 95       	icall
			_uart->write('\n');
    16ca:	e9 89       	ldd	r30, Y+17	; 0x11
    16cc:	fa 89       	ldd	r31, Y+18	; 0x12
    16ce:	01 90       	ld	r0, Z+
    16d0:	f0 81       	ld	r31, Z
    16d2:	e0 2d       	mov	r30, r0
    16d4:	01 90       	ld	r0, Z+
    16d6:	f0 81       	ld	r31, Z
    16d8:	e0 2d       	mov	r30, r0
    16da:	20 81       	ld	r18, Z
    16dc:	31 81       	ldd	r19, Z+1	; 0x01
    16de:	e9 89       	ldd	r30, Y+17	; 0x11
    16e0:	fa 89       	ldd	r31, Y+18	; 0x12
    16e2:	80 81       	ld	r24, Z
    16e4:	91 81       	ldd	r25, Z+1	; 0x01
    16e6:	6a e0       	ldi	r22, 0x0A	; 10
    16e8:	f9 01       	movw	r30, r18
    16ea:	09 95       	icall
}
    16ec:	64 96       	adiw	r28, 0x14	; 20
    16ee:	0f b6       	in	r0, 0x3f	; 63
    16f0:	f8 94       	cli
    16f2:	de bf       	out	0x3e, r29	; 62
    16f4:	0f be       	out	0x3f, r0	; 63
    16f6:	cd bf       	out	0x3d, r28	; 61
    16f8:	cf 91       	pop	r28
    16fa:	df 91       	pop	r29
    16fc:	08 95       	ret

000016fe <_ZN6UartHW14setPollingModeEa>:

		return ch;
	}

	// Put the receiver in polling mode (TRUE) or interrupt mode (FALSE)
	void setPollingMode(boolean polling){
    16fe:	df 93       	push	r29
    1700:	cf 93       	push	r28
    1702:	00 d0       	rcall	.+0      	; 0x1704 <_ZN6UartHW14setPollingModeEa+0x6>
    1704:	0f 92       	push	r0
    1706:	cd b7       	in	r28, 0x3d	; 61
    1708:	de b7       	in	r29, 0x3e	; 62
    170a:	9a 83       	std	Y+2, r25	; 0x02
    170c:	89 83       	std	Y+1, r24	; 0x01
    170e:	6b 83       	std	Y+3, r22	; 0x03
		uartReceivePollingMode(m_hw, polling);
    1710:	e9 81       	ldd	r30, Y+1	; 0x01
    1712:	fa 81       	ldd	r31, Y+2	; 0x02
    1714:	86 89       	ldd	r24, Z+22	; 0x16
    1716:	97 89       	ldd	r25, Z+23	; 0x17
    1718:	6b 81       	ldd	r22, Y+3	; 0x03
    171a:	0e 94 c2 19 	call	0x3384	; 0x3384 <uartReceivePollingMode>
		m_polling = polling;
    171e:	e9 81       	ldd	r30, Y+1	; 0x01
    1720:	fa 81       	ldd	r31, Y+2	; 0x02
    1722:	8b 81       	ldd	r24, Y+3	; 0x03
    1724:	80 8f       	std	Z+24, r24	; 0x18
	}
    1726:	0f 90       	pop	r0
    1728:	0f 90       	pop	r0
    172a:	0f 90       	pop	r0
    172c:	cf 91       	pop	r28
    172e:	df 91       	pop	r29
    1730:	08 95       	ret

00001732 <_ZN8Protocol4initEP6UartHW>:
	memset(in, 0, Protocol::BUFFER_SIZE);
	memset(out, 0, Protocol::BUFFER_SIZE);
	haveMessage = false;
}

void Protocol::init(UartHW *uart)
    1732:	df 93       	push	r29
    1734:	cf 93       	push	r28
    1736:	00 d0       	rcall	.+0      	; 0x1738 <_ZN8Protocol4initEP6UartHW+0x6>
    1738:	00 d0       	rcall	.+0      	; 0x173a <_ZN8Protocol4initEP6UartHW+0x8>
    173a:	cd b7       	in	r28, 0x3d	; 61
    173c:	de b7       	in	r29, 0x3e	; 62
    173e:	9a 83       	std	Y+2, r25	; 0x02
    1740:	89 83       	std	Y+1, r24	; 0x01
    1742:	7c 83       	std	Y+4, r23	; 0x04
    1744:	6b 83       	std	Y+3, r22	; 0x03
{
	_uart = uart;
    1746:	e9 81       	ldd	r30, Y+1	; 0x01
    1748:	fa 81       	ldd	r31, Y+2	; 0x02
    174a:	8b 81       	ldd	r24, Y+3	; 0x03
    174c:	9c 81       	ldd	r25, Y+4	; 0x04
    174e:	91 83       	std	Z+1, r25	; 0x01
    1750:	80 83       	st	Z, r24
	_uart->setPollingMode(false);
    1752:	e9 81       	ldd	r30, Y+1	; 0x01
    1754:	fa 81       	ldd	r31, Y+2	; 0x02
    1756:	80 81       	ld	r24, Z
    1758:	91 81       	ldd	r25, Z+1	; 0x01
    175a:	60 e0       	ldi	r22, 0x00	; 0
    175c:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <_ZN6UartHW14setPollingModeEa>
}
    1760:	0f 90       	pop	r0
    1762:	0f 90       	pop	r0
    1764:	0f 90       	pop	r0
    1766:	0f 90       	pop	r0
    1768:	cf 91       	pop	r28
    176a:	df 91       	pop	r29
    176c:	08 95       	ret

0000176e <_ZN8ProtocolC1Ev>:
	status = Packet::STOP;

	//command_len = {5, 2, 2, 2};
}

Protocol::Protocol()
    176e:	df 93       	push	r29
    1770:	cf 93       	push	r28
    1772:	00 d0       	rcall	.+0      	; 0x1774 <_ZN8ProtocolC1Ev+0x6>
    1774:	cd b7       	in	r28, 0x3d	; 61
    1776:	de b7       	in	r29, 0x3e	; 62
    1778:	9a 83       	std	Y+2, r25	; 0x02
    177a:	89 83       	std	Y+1, r24	; 0x01
{
	_uart = NULL;
    177c:	e9 81       	ldd	r30, Y+1	; 0x01
    177e:	fa 81       	ldd	r31, Y+2	; 0x02
    1780:	11 82       	std	Z+1, r1	; 0x01
    1782:	10 82       	st	Z, r1
	in_offset = 0;
    1784:	e9 81       	ldd	r30, Y+1	; 0x01
    1786:	fa 81       	ldd	r31, Y+2	; 0x02
    1788:	12 a6       	std	Z+42, r1	; 0x2a
	out_offset = 0;
    178a:	e9 81       	ldd	r30, Y+1	; 0x01
    178c:	fa 81       	ldd	r31, Y+2	; 0x02
    178e:	13 a6       	std	Z+43, r1	; 0x2b
	memset(in, 0, Protocol::BUFFER_SIZE);
    1790:	89 81       	ldd	r24, Y+1	; 0x01
    1792:	9a 81       	ldd	r25, Y+2	; 0x02
    1794:	02 96       	adiw	r24, 0x02	; 2
    1796:	60 e0       	ldi	r22, 0x00	; 0
    1798:	70 e0       	ldi	r23, 0x00	; 0
    179a:	44 e1       	ldi	r20, 0x14	; 20
    179c:	50 e0       	ldi	r21, 0x00	; 0
    179e:	0e 94 3f 1e 	call	0x3c7e	; 0x3c7e <memset>
	memset(out, 0, Protocol::BUFFER_SIZE);
    17a2:	89 81       	ldd	r24, Y+1	; 0x01
    17a4:	9a 81       	ldd	r25, Y+2	; 0x02
    17a6:	46 96       	adiw	r24, 0x16	; 22
    17a8:	60 e0       	ldi	r22, 0x00	; 0
    17aa:	70 e0       	ldi	r23, 0x00	; 0
    17ac:	44 e1       	ldi	r20, 0x14	; 20
    17ae:	50 e0       	ldi	r21, 0x00	; 0
    17b0:	0e 94 3f 1e 	call	0x3c7e	; 0x3c7e <memset>
	haveMessage = false;
    17b4:	e9 81       	ldd	r30, Y+1	; 0x01
    17b6:	fa 81       	ldd	r31, Y+2	; 0x02
    17b8:	14 a6       	std	Z+44, r1	; 0x2c
}
    17ba:	0f 90       	pop	r0
    17bc:	0f 90       	pop	r0
    17be:	cf 91       	pop	r28
    17c0:	df 91       	pop	r29
    17c2:	08 95       	ret

000017c4 <_ZN8ProtocolC2Ev>:
	status = Packet::STOP;

	//command_len = {5, 2, 2, 2};
}

Protocol::Protocol()
    17c4:	df 93       	push	r29
    17c6:	cf 93       	push	r28
    17c8:	00 d0       	rcall	.+0      	; 0x17ca <_ZN8ProtocolC2Ev+0x6>
    17ca:	cd b7       	in	r28, 0x3d	; 61
    17cc:	de b7       	in	r29, 0x3e	; 62
    17ce:	9a 83       	std	Y+2, r25	; 0x02
    17d0:	89 83       	std	Y+1, r24	; 0x01
{
	_uart = NULL;
    17d2:	e9 81       	ldd	r30, Y+1	; 0x01
    17d4:	fa 81       	ldd	r31, Y+2	; 0x02
    17d6:	11 82       	std	Z+1, r1	; 0x01
    17d8:	10 82       	st	Z, r1
	in_offset = 0;
    17da:	e9 81       	ldd	r30, Y+1	; 0x01
    17dc:	fa 81       	ldd	r31, Y+2	; 0x02
    17de:	12 a6       	std	Z+42, r1	; 0x2a
	out_offset = 0;
    17e0:	e9 81       	ldd	r30, Y+1	; 0x01
    17e2:	fa 81       	ldd	r31, Y+2	; 0x02
    17e4:	13 a6       	std	Z+43, r1	; 0x2b
	memset(in, 0, Protocol::BUFFER_SIZE);
    17e6:	89 81       	ldd	r24, Y+1	; 0x01
    17e8:	9a 81       	ldd	r25, Y+2	; 0x02
    17ea:	02 96       	adiw	r24, 0x02	; 2
    17ec:	60 e0       	ldi	r22, 0x00	; 0
    17ee:	70 e0       	ldi	r23, 0x00	; 0
    17f0:	44 e1       	ldi	r20, 0x14	; 20
    17f2:	50 e0       	ldi	r21, 0x00	; 0
    17f4:	0e 94 3f 1e 	call	0x3c7e	; 0x3c7e <memset>
	memset(out, 0, Protocol::BUFFER_SIZE);
    17f8:	89 81       	ldd	r24, Y+1	; 0x01
    17fa:	9a 81       	ldd	r25, Y+2	; 0x02
    17fc:	46 96       	adiw	r24, 0x16	; 22
    17fe:	60 e0       	ldi	r22, 0x00	; 0
    1800:	70 e0       	ldi	r23, 0x00	; 0
    1802:	44 e1       	ldi	r20, 0x14	; 20
    1804:	50 e0       	ldi	r21, 0x00	; 0
    1806:	0e 94 3f 1e 	call	0x3c7e	; 0x3c7e <memset>
	haveMessage = false;
    180a:	e9 81       	ldd	r30, Y+1	; 0x01
    180c:	fa 81       	ldd	r31, Y+2	; 0x02
    180e:	14 a6       	std	Z+44, r1	; 0x2c
}
    1810:	0f 90       	pop	r0
    1812:	0f 90       	pop	r0
    1814:	cf 91       	pop	r28
    1816:	df 91       	pop	r29
    1818:	08 95       	ret

0000181a <_ZN10SmartMotorC2Ev>:
#include "smart_motor.h"


SmartMotor::SmartMotor()
    181a:	df 93       	push	r29
    181c:	cf 93       	push	r28
    181e:	00 d0       	rcall	.+0      	; 0x1820 <_ZN10SmartMotorC2Ev+0x6>
    1820:	cd b7       	in	r28, 0x3d	; 61
    1822:	de b7       	in	r29, 0x3e	; 62
    1824:	9a 83       	std	Y+2, r25	; 0x02
    1826:	89 83       	std	Y+1, r24	; 0x01
{

	_limit_min = DRIVE_SPEED_MIN;
    1828:	e9 81       	ldd	r30, Y+1	; 0x01
    182a:	fa 81       	ldd	r31, Y+2	; 0x02
    182c:	81 e8       	ldi	r24, 0x81	; 129
    182e:	82 83       	std	Z+2, r24	; 0x02
	_limit_max = DRIVE_SPEED_MAX;
    1830:	e9 81       	ldd	r30, Y+1	; 0x01
    1832:	fa 81       	ldd	r31, Y+2	; 0x02
    1834:	8f e7       	ldi	r24, 0x7F	; 127
    1836:	83 83       	std	Z+3, r24	; 0x03

	_position = 0;
    1838:	e9 81       	ldd	r30, Y+1	; 0x01
    183a:	fa 81       	ldd	r31, Y+2	; 0x02
    183c:	15 82       	std	Z+5, r1	; 0x05
    183e:	14 82       	std	Z+4, r1	; 0x04
	_step_size = 0;
    1840:	e9 81       	ldd	r30, Y+1	; 0x01
    1842:	fa 81       	ldd	r31, Y+2	; 0x02
    1844:	17 82       	std	Z+7, r1	; 0x07
    1846:	16 82       	std	Z+6, r1	; 0x06
	_step_count = 0;
    1848:	e9 81       	ldd	r30, Y+1	; 0x01
    184a:	fa 81       	ldd	r31, Y+2	; 0x02
    184c:	11 86       	std	Z+9, r1	; 0x09
    184e:	10 86       	std	Z+8, r1	; 0x08

	_firsttime = true;
    1850:	e9 81       	ldd	r30, Y+1	; 0x01
    1852:	fa 81       	ldd	r31, Y+2	; 0x02
    1854:	81 e0       	ldi	r24, 0x01	; 1
    1856:	82 87       	std	Z+10, r24	; 0x0a
}
    1858:	0f 90       	pop	r0
    185a:	0f 90       	pop	r0
    185c:	cf 91       	pop	r28
    185e:	df 91       	pop	r29
    1860:	08 95       	ret

00001862 <_ZN10SmartMotorC1Ev>:
#include "smart_motor.h"


SmartMotor::SmartMotor()
    1862:	df 93       	push	r29
    1864:	cf 93       	push	r28
    1866:	00 d0       	rcall	.+0      	; 0x1868 <_ZN10SmartMotorC1Ev+0x6>
    1868:	cd b7       	in	r28, 0x3d	; 61
    186a:	de b7       	in	r29, 0x3e	; 62
    186c:	9a 83       	std	Y+2, r25	; 0x02
    186e:	89 83       	std	Y+1, r24	; 0x01
{

	_limit_min = DRIVE_SPEED_MIN;
    1870:	e9 81       	ldd	r30, Y+1	; 0x01
    1872:	fa 81       	ldd	r31, Y+2	; 0x02
    1874:	81 e8       	ldi	r24, 0x81	; 129
    1876:	82 83       	std	Z+2, r24	; 0x02
	_limit_max = DRIVE_SPEED_MAX;
    1878:	e9 81       	ldd	r30, Y+1	; 0x01
    187a:	fa 81       	ldd	r31, Y+2	; 0x02
    187c:	8f e7       	ldi	r24, 0x7F	; 127
    187e:	83 83       	std	Z+3, r24	; 0x03

	_position = 0;
    1880:	e9 81       	ldd	r30, Y+1	; 0x01
    1882:	fa 81       	ldd	r31, Y+2	; 0x02
    1884:	15 82       	std	Z+5, r1	; 0x05
    1886:	14 82       	std	Z+4, r1	; 0x04
	_step_size = 0;
    1888:	e9 81       	ldd	r30, Y+1	; 0x01
    188a:	fa 81       	ldd	r31, Y+2	; 0x02
    188c:	17 82       	std	Z+7, r1	; 0x07
    188e:	16 82       	std	Z+6, r1	; 0x06
	_step_count = 0;
    1890:	e9 81       	ldd	r30, Y+1	; 0x01
    1892:	fa 81       	ldd	r31, Y+2	; 0x02
    1894:	11 86       	std	Z+9, r1	; 0x09
    1896:	10 86       	std	Z+8, r1	; 0x08

	_firsttime = true;
    1898:	e9 81       	ldd	r30, Y+1	; 0x01
    189a:	fa 81       	ldd	r31, Y+2	; 0x02
    189c:	81 e0       	ldi	r24, 0x01	; 1
    189e:	82 87       	std	Z+10, r24	; 0x0a
}
    18a0:	0f 90       	pop	r0
    18a2:	0f 90       	pop	r0
    18a4:	cf 91       	pop	r28
    18a6:	df 91       	pop	r29
    18a8:	08 95       	ret

000018aa <_ZN10SmartMotorD2Ev>:

SmartMotor::~SmartMotor()
    18aa:	df 93       	push	r29
    18ac:	cf 93       	push	r28
    18ae:	00 d0       	rcall	.+0      	; 0x18b0 <_ZN10SmartMotorD2Ev+0x6>
    18b0:	cd b7       	in	r28, 0x3d	; 61
    18b2:	de b7       	in	r29, 0x3e	; 62
    18b4:	9a 83       	std	Y+2, r25	; 0x02
    18b6:	89 83       	std	Y+1, r24	; 0x01
{
}
    18b8:	0f 90       	pop	r0
    18ba:	0f 90       	pop	r0
    18bc:	cf 91       	pop	r28
    18be:	df 91       	pop	r29
    18c0:	08 95       	ret

000018c2 <_ZN10SmartMotorD1Ev>:
	_step_count = 0;

	_firsttime = true;
}

SmartMotor::~SmartMotor()
    18c2:	df 93       	push	r29
    18c4:	cf 93       	push	r28
    18c6:	00 d0       	rcall	.+0      	; 0x18c8 <_ZN10SmartMotorD1Ev+0x6>
    18c8:	cd b7       	in	r28, 0x3d	; 61
    18ca:	de b7       	in	r29, 0x3e	; 62
    18cc:	9a 83       	std	Y+2, r25	; 0x02
    18ce:	89 83       	std	Y+1, r24	; 0x01
{
}
    18d0:	0f 90       	pop	r0
    18d2:	0f 90       	pop	r0
    18d4:	cf 91       	pop	r28
    18d6:	df 91       	pop	r29
    18d8:	08 95       	ret

000018da <_ZN10SmartMotor10link_servoER5Servo>:

void SmartMotor::link_servo(Servo &servo)
    18da:	df 93       	push	r29
    18dc:	cf 93       	push	r28
    18de:	00 d0       	rcall	.+0      	; 0x18e0 <_ZN10SmartMotor10link_servoER5Servo+0x6>
    18e0:	00 d0       	rcall	.+0      	; 0x18e2 <_ZN10SmartMotor10link_servoER5Servo+0x8>
    18e2:	cd b7       	in	r28, 0x3d	; 61
    18e4:	de b7       	in	r29, 0x3e	; 62
    18e6:	9a 83       	std	Y+2, r25	; 0x02
    18e8:	89 83       	std	Y+1, r24	; 0x01
    18ea:	7c 83       	std	Y+4, r23	; 0x04
    18ec:	6b 83       	std	Y+3, r22	; 0x03
{
	_servo = &servo;
    18ee:	e9 81       	ldd	r30, Y+1	; 0x01
    18f0:	fa 81       	ldd	r31, Y+2	; 0x02
    18f2:	8b 81       	ldd	r24, Y+3	; 0x03
    18f4:	9c 81       	ldd	r25, Y+4	; 0x04
    18f6:	91 83       	std	Z+1, r25	; 0x01
    18f8:	80 83       	st	Z, r24
}
    18fa:	0f 90       	pop	r0
    18fc:	0f 90       	pop	r0
    18fe:	0f 90       	pop	r0
    1900:	0f 90       	pop	r0
    1902:	cf 91       	pop	r28
    1904:	df 91       	pop	r29
    1906:	08 95       	ret

00001908 <_ZN10SmartMotor9set_limitEaa>:


void SmartMotor::set_limit(DRIVE_SPEED min, DRIVE_SPEED max)
    1908:	df 93       	push	r29
    190a:	cf 93       	push	r28
    190c:	00 d0       	rcall	.+0      	; 0x190e <_ZN10SmartMotor9set_limitEaa+0x6>
    190e:	00 d0       	rcall	.+0      	; 0x1910 <_ZN10SmartMotor9set_limitEaa+0x8>
    1910:	cd b7       	in	r28, 0x3d	; 61
    1912:	de b7       	in	r29, 0x3e	; 62
    1914:	9a 83       	std	Y+2, r25	; 0x02
    1916:	89 83       	std	Y+1, r24	; 0x01
    1918:	6b 83       	std	Y+3, r22	; 0x03
    191a:	4c 83       	std	Y+4, r20	; 0x04
{
	_limit_min = min;
    191c:	e9 81       	ldd	r30, Y+1	; 0x01
    191e:	fa 81       	ldd	r31, Y+2	; 0x02
    1920:	8b 81       	ldd	r24, Y+3	; 0x03
    1922:	82 83       	std	Z+2, r24	; 0x02
	_limit_max = max;
    1924:	e9 81       	ldd	r30, Y+1	; 0x01
    1926:	fa 81       	ldd	r31, Y+2	; 0x02
    1928:	8c 81       	ldd	r24, Y+4	; 0x04
    192a:	83 83       	std	Z+3, r24	; 0x03
}
    192c:	0f 90       	pop	r0
    192e:	0f 90       	pop	r0
    1930:	0f 90       	pop	r0
    1932:	0f 90       	pop	r0
    1934:	cf 91       	pop	r28
    1936:	df 91       	pop	r29
    1938:	08 95       	ret

0000193a <_ZN10SmartMotor12get_positionERa>:

void SmartMotor::get_position(DRIVE_SPEED &position)
    193a:	df 93       	push	r29
    193c:	cf 93       	push	r28
    193e:	00 d0       	rcall	.+0      	; 0x1940 <_ZN10SmartMotor12get_positionERa+0x6>
    1940:	00 d0       	rcall	.+0      	; 0x1942 <_ZN10SmartMotor12get_positionERa+0x8>
    1942:	cd b7       	in	r28, 0x3d	; 61
    1944:	de b7       	in	r29, 0x3e	; 62
    1946:	9a 83       	std	Y+2, r25	; 0x02
    1948:	89 83       	std	Y+1, r24	; 0x01
    194a:	7c 83       	std	Y+4, r23	; 0x04
    194c:	6b 83       	std	Y+3, r22	; 0x03
{
	position = _position;
    194e:	e9 81       	ldd	r30, Y+1	; 0x01
    1950:	fa 81       	ldd	r31, Y+2	; 0x02
    1952:	84 81       	ldd	r24, Z+4	; 0x04
    1954:	95 81       	ldd	r25, Z+5	; 0x05
    1956:	eb 81       	ldd	r30, Y+3	; 0x03
    1958:	fc 81       	ldd	r31, Y+4	; 0x04
    195a:	80 83       	st	Z, r24
}
    195c:	0f 90       	pop	r0
    195e:	0f 90       	pop	r0
    1960:	0f 90       	pop	r0
    1962:	0f 90       	pop	r0
    1964:	cf 91       	pop	r28
    1966:	df 91       	pop	r29
    1968:	08 95       	ret

0000196a <_ZN10SmartMotor9is_movingEv>:
		_step_size = ((pos - _position) / t) * (HEXAPOD_LOOP_DURATION / 1000);
		_step_count = (pos - _position) / _step_size;	
	}
}

bool SmartMotor::is_moving()
    196a:	df 93       	push	r29
    196c:	cf 93       	push	r28
    196e:	00 d0       	rcall	.+0      	; 0x1970 <_ZN10SmartMotor9is_movingEv+0x6>
    1970:	0f 92       	push	r0
    1972:	cd b7       	in	r28, 0x3d	; 61
    1974:	de b7       	in	r29, 0x3e	; 62
    1976:	9a 83       	std	Y+2, r25	; 0x02
    1978:	89 83       	std	Y+1, r24	; 0x01
{
	return _step_count != 0;
    197a:	e9 81       	ldd	r30, Y+1	; 0x01
    197c:	fa 81       	ldd	r31, Y+2	; 0x02
    197e:	80 85       	ldd	r24, Z+8	; 0x08
    1980:	91 85       	ldd	r25, Z+9	; 0x09
    1982:	1b 82       	std	Y+3, r1	; 0x03
    1984:	00 97       	sbiw	r24, 0x00	; 0
    1986:	11 f0       	breq	.+4      	; 0x198c <_ZN10SmartMotor9is_movingEv+0x22>
    1988:	81 e0       	ldi	r24, 0x01	; 1
    198a:	8b 83       	std	Y+3, r24	; 0x03
    198c:	8b 81       	ldd	r24, Y+3	; 0x03
}
    198e:	0f 90       	pop	r0
    1990:	0f 90       	pop	r0
    1992:	0f 90       	pop	r0
    1994:	cf 91       	pop	r28
    1996:	df 91       	pop	r29
    1998:	08 95       	ret

0000199a <_ZN10SmartMotor11stop_motionEv>:

void SmartMotor::stop_motion()
    199a:	df 93       	push	r29
    199c:	cf 93       	push	r28
    199e:	00 d0       	rcall	.+0      	; 0x19a0 <_ZN10SmartMotor11stop_motionEv+0x6>
    19a0:	cd b7       	in	r28, 0x3d	; 61
    19a2:	de b7       	in	r29, 0x3e	; 62
    19a4:	9a 83       	std	Y+2, r25	; 0x02
    19a6:	89 83       	std	Y+1, r24	; 0x01
{
	_step_count = 0;
    19a8:	e9 81       	ldd	r30, Y+1	; 0x01
    19aa:	fa 81       	ldd	r31, Y+2	; 0x02
    19ac:	11 86       	std	Z+9, r1	; 0x09
    19ae:	10 86       	std	Z+8, r1	; 0x08
}
    19b0:	0f 90       	pop	r0
    19b2:	0f 90       	pop	r0
    19b4:	cf 91       	pop	r28
    19b6:	df 91       	pop	r29
    19b8:	08 95       	ret

000019ba <_ZN10SmartMotor12set_positionEai>:
void SmartMotor::get_position(DRIVE_SPEED &position)
{
	position = _position;
}

void SmartMotor::set_position(DRIVE_SPEED position, int16_t t)
    19ba:	0f 93       	push	r16
    19bc:	1f 93       	push	r17
    19be:	df 93       	push	r29
    19c0:	cf 93       	push	r28
    19c2:	cd b7       	in	r28, 0x3d	; 61
    19c4:	de b7       	in	r29, 0x3e	; 62
    19c6:	29 97       	sbiw	r28, 0x09	; 9
    19c8:	0f b6       	in	r0, 0x3f	; 63
    19ca:	f8 94       	cli
    19cc:	de bf       	out	0x3e, r29	; 62
    19ce:	0f be       	out	0x3f, r0	; 63
    19d0:	cd bf       	out	0x3d, r28	; 61
    19d2:	9c 83       	std	Y+4, r25	; 0x04
    19d4:	8b 83       	std	Y+3, r24	; 0x03
    19d6:	6d 83       	std	Y+5, r22	; 0x05
    19d8:	5f 83       	std	Y+7, r21	; 0x07
    19da:	4e 83       	std	Y+6, r20	; 0x06

	//uart1.print("time");
	//print(position);
//	print(t);
	
	position = (position < _limit_min)? _limit_min : position;
    19dc:	eb 81       	ldd	r30, Y+3	; 0x03
    19de:	fc 81       	ldd	r31, Y+4	; 0x04
    19e0:	92 81       	ldd	r25, Z+2	; 0x02
    19e2:	8d 81       	ldd	r24, Y+5	; 0x05
    19e4:	89 17       	cp	r24, r25
    19e6:	2c f4       	brge	.+10     	; 0x19f2 <_ZN10SmartMotor12set_positionEai+0x38>
    19e8:	eb 81       	ldd	r30, Y+3	; 0x03
    19ea:	fc 81       	ldd	r31, Y+4	; 0x04
    19ec:	82 81       	ldd	r24, Z+2	; 0x02
    19ee:	89 87       	std	Y+9, r24	; 0x09
    19f0:	02 c0       	rjmp	.+4      	; 0x19f6 <_ZN10SmartMotor12set_positionEai+0x3c>
    19f2:	8d 81       	ldd	r24, Y+5	; 0x05
    19f4:	89 87       	std	Y+9, r24	; 0x09
    19f6:	89 85       	ldd	r24, Y+9	; 0x09
    19f8:	8d 83       	std	Y+5, r24	; 0x05
	position = (position > _limit_max)? _limit_max : position;
    19fa:	eb 81       	ldd	r30, Y+3	; 0x03
    19fc:	fc 81       	ldd	r31, Y+4	; 0x04
    19fe:	93 81       	ldd	r25, Z+3	; 0x03
    1a00:	8d 81       	ldd	r24, Y+5	; 0x05
    1a02:	98 17       	cp	r25, r24
    1a04:	2c f4       	brge	.+10     	; 0x1a10 <_ZN10SmartMotor12set_positionEai+0x56>
    1a06:	eb 81       	ldd	r30, Y+3	; 0x03
    1a08:	fc 81       	ldd	r31, Y+4	; 0x04
    1a0a:	83 81       	ldd	r24, Z+3	; 0x03
    1a0c:	88 87       	std	Y+8, r24	; 0x08
    1a0e:	02 c0       	rjmp	.+4      	; 0x1a14 <_ZN10SmartMotor12set_positionEai+0x5a>
    1a10:	8d 81       	ldd	r24, Y+5	; 0x05
    1a12:	88 87       	std	Y+8, r24	; 0x08
    1a14:	88 85       	ldd	r24, Y+8	; 0x08
    1a16:	8d 83       	std	Y+5, r24	; 0x05

	int16_t pos = interpolate(position, DRIVE_SPEED_MIN, DRIVE_SPEED_MAX, -SMART_SPEED, SMART_SPEED);
    1a18:	8d 81       	ldd	r24, Y+5	; 0x05
    1a1a:	99 27       	eor	r25, r25
    1a1c:	87 fd       	sbrc	r24, 7
    1a1e:	90 95       	com	r25
    1a20:	61 e8       	ldi	r22, 0x81	; 129
    1a22:	7f ef       	ldi	r23, 0xFF	; 255
    1a24:	4f e7       	ldi	r20, 0x7F	; 127
    1a26:	50 e0       	ldi	r21, 0x00	; 0
    1a28:	24 e0       	ldi	r18, 0x04	; 4
    1a2a:	30 ec       	ldi	r19, 0xC0	; 192
    1a2c:	0c ef       	ldi	r16, 0xFC	; 252
    1a2e:	1f e3       	ldi	r17, 0x3F	; 63
    1a30:	0e 94 0d 13 	call	0x261a	; 0x261a <interpolate>
    1a34:	9a 83       	std	Y+2, r25	; 0x02
    1a36:	89 83       	std	Y+1, r24	; 0x01
	
	if(t < HEXAPOD_LOOP_DURATION/1000)
    1a38:	8e 81       	ldd	r24, Y+6	; 0x06
    1a3a:	9f 81       	ldd	r25, Y+7	; 0x07
    1a3c:	84 31       	cpi	r24, 0x14	; 20
    1a3e:	91 05       	cpc	r25, r1
    1a40:	9c f4       	brge	.+38     	; 0x1a68 <_ZN10SmartMotor12set_positionEai+0xae>
	{
		_step_size = (pos - _position);
    1a42:	eb 81       	ldd	r30, Y+3	; 0x03
    1a44:	fc 81       	ldd	r31, Y+4	; 0x04
    1a46:	24 81       	ldd	r18, Z+4	; 0x04
    1a48:	35 81       	ldd	r19, Z+5	; 0x05
    1a4a:	89 81       	ldd	r24, Y+1	; 0x01
    1a4c:	9a 81       	ldd	r25, Y+2	; 0x02
    1a4e:	82 1b       	sub	r24, r18
    1a50:	93 0b       	sbc	r25, r19
    1a52:	eb 81       	ldd	r30, Y+3	; 0x03
    1a54:	fc 81       	ldd	r31, Y+4	; 0x04
    1a56:	97 83       	std	Z+7, r25	; 0x07
    1a58:	86 83       	std	Z+6, r24	; 0x06
		_step_count = 1;
    1a5a:	eb 81       	ldd	r30, Y+3	; 0x03
    1a5c:	fc 81       	ldd	r31, Y+4	; 0x04
    1a5e:	81 e0       	ldi	r24, 0x01	; 1
    1a60:	90 e0       	ldi	r25, 0x00	; 0
    1a62:	91 87       	std	Z+9, r25	; 0x09
    1a64:	80 87       	std	Z+8, r24	; 0x08
    1a66:	32 c0       	rjmp	.+100    	; 0x1acc <_ZN10SmartMotor12set_positionEai+0x112>
	}
	else
	{
		_step_size = ((pos - _position) / t) * (HEXAPOD_LOOP_DURATION / 1000);
    1a68:	eb 81       	ldd	r30, Y+3	; 0x03
    1a6a:	fc 81       	ldd	r31, Y+4	; 0x04
    1a6c:	24 81       	ldd	r18, Z+4	; 0x04
    1a6e:	35 81       	ldd	r19, Z+5	; 0x05
    1a70:	89 81       	ldd	r24, Y+1	; 0x01
    1a72:	9a 81       	ldd	r25, Y+2	; 0x02
    1a74:	82 1b       	sub	r24, r18
    1a76:	93 0b       	sbc	r25, r19
    1a78:	2e 81       	ldd	r18, Y+6	; 0x06
    1a7a:	3f 81       	ldd	r19, Y+7	; 0x07
    1a7c:	b9 01       	movw	r22, r18
    1a7e:	0e 94 b5 1f 	call	0x3f6a	; 0x3f6a <__divmodhi4>
    1a82:	cb 01       	movw	r24, r22
    1a84:	9c 01       	movw	r18, r24
    1a86:	22 0f       	add	r18, r18
    1a88:	33 1f       	adc	r19, r19
    1a8a:	22 0f       	add	r18, r18
    1a8c:	33 1f       	adc	r19, r19
    1a8e:	c9 01       	movw	r24, r18
    1a90:	88 0f       	add	r24, r24
    1a92:	99 1f       	adc	r25, r25
    1a94:	88 0f       	add	r24, r24
    1a96:	99 1f       	adc	r25, r25
    1a98:	82 0f       	add	r24, r18
    1a9a:	93 1f       	adc	r25, r19
    1a9c:	eb 81       	ldd	r30, Y+3	; 0x03
    1a9e:	fc 81       	ldd	r31, Y+4	; 0x04
    1aa0:	97 83       	std	Z+7, r25	; 0x07
    1aa2:	86 83       	std	Z+6, r24	; 0x06
		_step_count = (pos - _position) / _step_size;	
    1aa4:	eb 81       	ldd	r30, Y+3	; 0x03
    1aa6:	fc 81       	ldd	r31, Y+4	; 0x04
    1aa8:	24 81       	ldd	r18, Z+4	; 0x04
    1aaa:	35 81       	ldd	r19, Z+5	; 0x05
    1aac:	89 81       	ldd	r24, Y+1	; 0x01
    1aae:	9a 81       	ldd	r25, Y+2	; 0x02
    1ab0:	82 1b       	sub	r24, r18
    1ab2:	93 0b       	sbc	r25, r19
    1ab4:	eb 81       	ldd	r30, Y+3	; 0x03
    1ab6:	fc 81       	ldd	r31, Y+4	; 0x04
    1ab8:	26 81       	ldd	r18, Z+6	; 0x06
    1aba:	37 81       	ldd	r19, Z+7	; 0x07
    1abc:	b9 01       	movw	r22, r18
    1abe:	0e 94 b5 1f 	call	0x3f6a	; 0x3f6a <__divmodhi4>
    1ac2:	cb 01       	movw	r24, r22
    1ac4:	eb 81       	ldd	r30, Y+3	; 0x03
    1ac6:	fc 81       	ldd	r31, Y+4	; 0x04
    1ac8:	91 87       	std	Z+9, r25	; 0x09
    1aca:	80 87       	std	Z+8, r24	; 0x08
	}
}
    1acc:	29 96       	adiw	r28, 0x09	; 9
    1ace:	0f b6       	in	r0, 0x3f	; 63
    1ad0:	f8 94       	cli
    1ad2:	de bf       	out	0x3e, r29	; 62
    1ad4:	0f be       	out	0x3f, r0	; 63
    1ad6:	cd bf       	out	0x3d, r28	; 61
    1ad8:	cf 91       	pop	r28
    1ada:	df 91       	pop	r29
    1adc:	1f 91       	pop	r17
    1ade:	0f 91       	pop	r16
    1ae0:	08 95       	ret

00001ae2 <_ZN8Actuator8setSpeedEa>:
class Actuator{
public:
	Actuator(__ACTUATOR* cstr){
		m_cstr = cstr;
	}
	void setSpeed(DRIVE_SPEED speed){
    1ae2:	df 93       	push	r29
    1ae4:	cf 93       	push	r28
    1ae6:	00 d0       	rcall	.+0      	; 0x1ae8 <_ZN8Actuator8setSpeedEa+0x6>
    1ae8:	0f 92       	push	r0
    1aea:	cd b7       	in	r28, 0x3d	; 61
    1aec:	de b7       	in	r29, 0x3e	; 62
    1aee:	9a 83       	std	Y+2, r25	; 0x02
    1af0:	89 83       	std	Y+1, r24	; 0x01
    1af2:	6b 83       	std	Y+3, r22	; 0x03
		__act_setSpeed(m_cstr,speed);
    1af4:	e9 81       	ldd	r30, Y+1	; 0x01
    1af6:	fa 81       	ldd	r31, Y+2	; 0x02
    1af8:	80 81       	ld	r24, Z
    1afa:	91 81       	ldd	r25, Z+1	; 0x01
    1afc:	6b 81       	ldd	r22, Y+3	; 0x03
    1afe:	0e 94 d2 12 	call	0x25a4	; 0x25a4 <__act_setSpeed>
	}
    1b02:	0f 90       	pop	r0
    1b04:	0f 90       	pop	r0
    1b06:	0f 90       	pop	r0
    1b08:	cf 91       	pop	r28
    1b0a:	df 91       	pop	r29
    1b0c:	08 95       	ret

00001b0e <_ZN10SmartMotor7computeEv>:
		} 
			uart1.write('\r');
			uart1.write('\n');
}

void SmartMotor::compute()
    1b0e:	0f 93       	push	r16
    1b10:	1f 93       	push	r17
    1b12:	df 93       	push	r29
    1b14:	cf 93       	push	r28
    1b16:	00 d0       	rcall	.+0      	; 0x1b18 <_ZN10SmartMotor7computeEv+0xa>
    1b18:	00 d0       	rcall	.+0      	; 0x1b1a <_ZN10SmartMotor7computeEv+0xc>
    1b1a:	cd b7       	in	r28, 0x3d	; 61
    1b1c:	de b7       	in	r29, 0x3e	; 62
    1b1e:	9c 83       	std	Y+4, r25	; 0x04
    1b20:	8b 83       	std	Y+3, r24	; 0x03
{
	if(_firsttime == true)
    1b22:	eb 81       	ldd	r30, Y+3	; 0x03
    1b24:	fc 81       	ldd	r31, Y+4	; 0x04
    1b26:	82 85       	ldd	r24, Z+10	; 0x0a
    1b28:	88 2f       	mov	r24, r24
    1b2a:	90 e0       	ldi	r25, 0x00	; 0
    1b2c:	2f ef       	ldi	r18, 0xFF	; 255
    1b2e:	8f 3f       	cpi	r24, 0xFF	; 255
    1b30:	92 07       	cpc	r25, r18
    1b32:	51 f4       	brne	.+20     	; 0x1b48 <_ZN10SmartMotor7computeEv+0x3a>
	{
		_servo->setSpeed(0);
    1b34:	eb 81       	ldd	r30, Y+3	; 0x03
    1b36:	fc 81       	ldd	r31, Y+4	; 0x04
    1b38:	80 81       	ld	r24, Z
    1b3a:	91 81       	ldd	r25, Z+1	; 0x01
    1b3c:	60 e0       	ldi	r22, 0x00	; 0
    1b3e:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <_ZN8Actuator8setSpeedEa>
		_firsttime = false;
    1b42:	eb 81       	ldd	r30, Y+3	; 0x03
    1b44:	fc 81       	ldd	r31, Y+4	; 0x04
    1b46:	12 86       	std	Z+10, r1	; 0x0a
	}
	if(_step_count > 0)
    1b48:	eb 81       	ldd	r30, Y+3	; 0x03
    1b4a:	fc 81       	ldd	r31, Y+4	; 0x04
    1b4c:	80 85       	ldd	r24, Z+8	; 0x08
    1b4e:	91 85       	ldd	r25, Z+9	; 0x09
    1b50:	00 97       	sbiw	r24, 0x00	; 0
    1b52:	79 f1       	breq	.+94     	; 0x1bb2 <_ZN10SmartMotor7computeEv+0xa4>
	{
		_position = _position + _step_size;
    1b54:	eb 81       	ldd	r30, Y+3	; 0x03
    1b56:	fc 81       	ldd	r31, Y+4	; 0x04
    1b58:	24 81       	ldd	r18, Z+4	; 0x04
    1b5a:	35 81       	ldd	r19, Z+5	; 0x05
    1b5c:	eb 81       	ldd	r30, Y+3	; 0x03
    1b5e:	fc 81       	ldd	r31, Y+4	; 0x04
    1b60:	86 81       	ldd	r24, Z+6	; 0x06
    1b62:	97 81       	ldd	r25, Z+7	; 0x07
    1b64:	82 0f       	add	r24, r18
    1b66:	93 1f       	adc	r25, r19
    1b68:	eb 81       	ldd	r30, Y+3	; 0x03
    1b6a:	fc 81       	ldd	r31, Y+4	; 0x04
    1b6c:	95 83       	std	Z+5, r25	; 0x05
    1b6e:	84 83       	std	Z+4, r24	; 0x04
		int16_t i = interpolate(_position, -SMART_SPEED, SMART_SPEED, DRIVE_SPEED_MIN, DRIVE_SPEED_MAX);
    1b70:	eb 81       	ldd	r30, Y+3	; 0x03
    1b72:	fc 81       	ldd	r31, Y+4	; 0x04
    1b74:	84 81       	ldd	r24, Z+4	; 0x04
    1b76:	95 81       	ldd	r25, Z+5	; 0x05
    1b78:	64 e0       	ldi	r22, 0x04	; 4
    1b7a:	70 ec       	ldi	r23, 0xC0	; 192
    1b7c:	4c ef       	ldi	r20, 0xFC	; 252
    1b7e:	5f e3       	ldi	r21, 0x3F	; 63
    1b80:	21 e8       	ldi	r18, 0x81	; 129
    1b82:	3f ef       	ldi	r19, 0xFF	; 255
    1b84:	0f e7       	ldi	r16, 0x7F	; 127
    1b86:	10 e0       	ldi	r17, 0x00	; 0
    1b88:	0e 94 0d 13 	call	0x261a	; 0x261a <interpolate>
    1b8c:	9a 83       	std	Y+2, r25	; 0x02
    1b8e:	89 83       	std	Y+1, r24	; 0x01
		_servo->setSpeed(i);
    1b90:	eb 81       	ldd	r30, Y+3	; 0x03
    1b92:	fc 81       	ldd	r31, Y+4	; 0x04
    1b94:	80 81       	ld	r24, Z
    1b96:	91 81       	ldd	r25, Z+1	; 0x01
    1b98:	29 81       	ldd	r18, Y+1	; 0x01
    1b9a:	62 2f       	mov	r22, r18
    1b9c:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <_ZN8Actuator8setSpeedEa>
		//print(i);
		_step_count--;
    1ba0:	eb 81       	ldd	r30, Y+3	; 0x03
    1ba2:	fc 81       	ldd	r31, Y+4	; 0x04
    1ba4:	80 85       	ldd	r24, Z+8	; 0x08
    1ba6:	91 85       	ldd	r25, Z+9	; 0x09
    1ba8:	01 97       	sbiw	r24, 0x01	; 1
    1baa:	eb 81       	ldd	r30, Y+3	; 0x03
    1bac:	fc 81       	ldd	r31, Y+4	; 0x04
    1bae:	91 87       	std	Z+9, r25	; 0x09
    1bb0:	80 87       	std	Z+8, r24	; 0x08
	}

}
    1bb2:	0f 90       	pop	r0
    1bb4:	0f 90       	pop	r0
    1bb6:	0f 90       	pop	r0
    1bb8:	0f 90       	pop	r0
    1bba:	cf 91       	pop	r28
    1bbc:	df 91       	pop	r29
    1bbe:	1f 91       	pop	r17
    1bc0:	0f 91       	pop	r16
    1bc2:	08 95       	ret

00001bc4 <_ZN4Uart5writeEh>:
	operator UART*() const{
		return m_cstr;
	}

	/* Implement the raw methods from Stream */
	virtual int write(uint8_t data){
    1bc4:	df 93       	push	r29
    1bc6:	cf 93       	push	r28
    1bc8:	00 d0       	rcall	.+0      	; 0x1bca <_ZN4Uart5writeEh+0x6>
    1bca:	0f 92       	push	r0
    1bcc:	cd b7       	in	r28, 0x3d	; 61
    1bce:	de b7       	in	r29, 0x3e	; 62
    1bd0:	9a 83       	std	Y+2, r25	; 0x02
    1bd2:	89 83       	std	Y+1, r24	; 0x01
    1bd4:	6b 83       	std	Y+3, r22	; 0x03
		return _uartSendByte(m_cstr, data);
    1bd6:	e9 81       	ldd	r30, Y+1	; 0x01
    1bd8:	fa 81       	ldd	r31, Y+2	; 0x02
    1bda:	80 89       	ldd	r24, Z+16	; 0x10
    1bdc:	91 89       	ldd	r25, Z+17	; 0x11
    1bde:	6b 81       	ldd	r22, Y+3	; 0x03
    1be0:	0e 94 8f 19 	call	0x331e	; 0x331e <_uartSendByte>
    1be4:	88 2f       	mov	r24, r24
    1be6:	90 e0       	ldi	r25, 0x00	; 0
	}
    1be8:	0f 90       	pop	r0
    1bea:	0f 90       	pop	r0
    1bec:	0f 90       	pop	r0
    1bee:	cf 91       	pop	r28
    1bf0:	df 91       	pop	r29
    1bf2:	08 95       	ret

00001bf4 <_ZN10SmartMotor5printEi>:
void SmartMotor::stop_motion()
{
	_step_count = 0;
}

void SmartMotor::print(int16_t i)
    1bf4:	df 93       	push	r29
    1bf6:	cf 93       	push	r28
    1bf8:	cd b7       	in	r28, 0x3d	; 61
    1bfa:	de b7       	in	r29, 0x3e	; 62
    1bfc:	64 97       	sbiw	r28, 0x14	; 20
    1bfe:	0f b6       	in	r0, 0x3f	; 63
    1c00:	f8 94       	cli
    1c02:	de bf       	out	0x3e, r29	; 62
    1c04:	0f be       	out	0x3f, r0	; 63
    1c06:	cd bf       	out	0x3d, r28	; 61
    1c08:	9a 8b       	std	Y+18, r25	; 0x12
    1c0a:	89 8b       	std	Y+17, r24	; 0x11
    1c0c:	7c 8b       	std	Y+20, r23	; 0x14
    1c0e:	6b 8b       	std	Y+19, r22	; 0x13
{
		char str[10];
		for(int j=0;j<10;j++)
    1c10:	1c 82       	std	Y+4, r1	; 0x04
    1c12:	1b 82       	std	Y+3, r1	; 0x03
    1c14:	0d c0       	rjmp	.+26     	; 0x1c30 <_ZN10SmartMotor5printEi+0x3c>
			str[j] = 0;
    1c16:	2b 81       	ldd	r18, Y+3	; 0x03
    1c18:	3c 81       	ldd	r19, Y+4	; 0x04
    1c1a:	ce 01       	movw	r24, r28
    1c1c:	07 96       	adiw	r24, 0x07	; 7
    1c1e:	fc 01       	movw	r30, r24
    1c20:	e2 0f       	add	r30, r18
    1c22:	f3 1f       	adc	r31, r19
    1c24:	10 82       	st	Z, r1
}

void SmartMotor::print(int16_t i)
{
		char str[10];
		for(int j=0;j<10;j++)
    1c26:	8b 81       	ldd	r24, Y+3	; 0x03
    1c28:	9c 81       	ldd	r25, Y+4	; 0x04
    1c2a:	01 96       	adiw	r24, 0x01	; 1
    1c2c:	9c 83       	std	Y+4, r25	; 0x04
    1c2e:	8b 83       	std	Y+3, r24	; 0x03
    1c30:	8b 81       	ldd	r24, Y+3	; 0x03
    1c32:	9c 81       	ldd	r25, Y+4	; 0x04
    1c34:	8a 30       	cpi	r24, 0x0A	; 10
    1c36:	91 05       	cpc	r25, r1
    1c38:	74 f3       	brlt	.-36     	; 0x1c16 <_ZN10SmartMotor5printEi+0x22>
			str[j] = 0;
		char *p = str;
    1c3a:	ce 01       	movw	r24, r28
    1c3c:	07 96       	adiw	r24, 0x07	; 7
    1c3e:	9e 83       	std	Y+6, r25	; 0x06
    1c40:	8d 83       	std	Y+5, r24	; 0x05
		p=itoa(i, (char*)str, 10);
    1c42:	8b 89       	ldd	r24, Y+19	; 0x13
    1c44:	9c 89       	ldd	r25, Y+20	; 0x14
    1c46:	9e 01       	movw	r18, r28
    1c48:	29 5f       	subi	r18, 0xF9	; 249
    1c4a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c4c:	b9 01       	movw	r22, r18
    1c4e:	4a e0       	ldi	r20, 0x0A	; 10
    1c50:	50 e0       	ldi	r21, 0x00	; 0
    1c52:	0e 94 51 1e 	call	0x3ca2	; 0x3ca2 <itoa>
    1c56:	9e 83       	std	Y+6, r25	; 0x06
    1c58:	8d 83       	std	Y+5, r24	; 0x05
		for(int j=0;j<10;j++)
    1c5a:	1a 82       	std	Y+2, r1	; 0x02
    1c5c:	19 82       	std	Y+1, r1	; 0x01
    1c5e:	12 c0       	rjmp	.+36     	; 0x1c84 <_ZN10SmartMotor5printEi+0x90>
		{
			uart1.write(p[j]);
    1c60:	29 81       	ldd	r18, Y+1	; 0x01
    1c62:	3a 81       	ldd	r19, Y+2	; 0x02
    1c64:	8d 81       	ldd	r24, Y+5	; 0x05
    1c66:	9e 81       	ldd	r25, Y+6	; 0x06
    1c68:	fc 01       	movw	r30, r24
    1c6a:	e2 0f       	add	r30, r18
    1c6c:	f3 1f       	adc	r31, r19
    1c6e:	20 81       	ld	r18, Z
    1c70:	8c e0       	ldi	r24, 0x0C	; 12
    1c72:	94 e0       	ldi	r25, 0x04	; 4
    1c74:	62 2f       	mov	r22, r18
    1c76:	0e 94 e2 0d 	call	0x1bc4	; 0x1bc4 <_ZN4Uart5writeEh>
		char str[10];
		for(int j=0;j<10;j++)
			str[j] = 0;
		char *p = str;
		p=itoa(i, (char*)str, 10);
		for(int j=0;j<10;j++)
    1c7a:	89 81       	ldd	r24, Y+1	; 0x01
    1c7c:	9a 81       	ldd	r25, Y+2	; 0x02
    1c7e:	01 96       	adiw	r24, 0x01	; 1
    1c80:	9a 83       	std	Y+2, r25	; 0x02
    1c82:	89 83       	std	Y+1, r24	; 0x01
    1c84:	89 81       	ldd	r24, Y+1	; 0x01
    1c86:	9a 81       	ldd	r25, Y+2	; 0x02
    1c88:	8a 30       	cpi	r24, 0x0A	; 10
    1c8a:	91 05       	cpc	r25, r1
    1c8c:	4c f3       	brlt	.-46     	; 0x1c60 <_ZN10SmartMotor5printEi+0x6c>
		{
			uart1.write(p[j]);
		} 
			uart1.write('\r');
    1c8e:	8c e0       	ldi	r24, 0x0C	; 12
    1c90:	94 e0       	ldi	r25, 0x04	; 4
    1c92:	6d e0       	ldi	r22, 0x0D	; 13
    1c94:	0e 94 e2 0d 	call	0x1bc4	; 0x1bc4 <_ZN4Uart5writeEh>
			uart1.write('\n');
    1c98:	8c e0       	ldi	r24, 0x0C	; 12
    1c9a:	94 e0       	ldi	r25, 0x04	; 4
    1c9c:	6a e0       	ldi	r22, 0x0A	; 10
    1c9e:	0e 94 e2 0d 	call	0x1bc4	; 0x1bc4 <_ZN4Uart5writeEh>
}
    1ca2:	64 96       	adiw	r28, 0x14	; 20
    1ca4:	0f b6       	in	r0, 0x3f	; 63
    1ca6:	f8 94       	cli
    1ca8:	de bf       	out	0x3e, r29	; 62
    1caa:	0f be       	out	0x3f, r0	; 63
    1cac:	cd bf       	out	0x3d, r28	; 61
    1cae:	cf 91       	pop	r28
    1cb0:	df 91       	pop	r29
    1cb2:	08 95       	ret

00001cb4 <marquee_put_char>:
    1cb4:	68 2f       	mov	r22, r24
    1cb6:	8a e7       	ldi	r24, 0x7A	; 122
    1cb8:	92 e0       	ldi	r25, 0x02	; 2
    1cba:	0e 94 ed 14 	call	0x29da	; 0x29da <marqueeSendByte>
    1cbe:	90 e0       	ldi	r25, 0x00	; 0
    1cc0:	08 95       	ret

00001cc2 <registerLED>:
    1cc2:	8b e0       	ldi	r24, 0x0B	; 11
    1cc4:	93 e0       	ldi	r25, 0x03	; 3
    1cc6:	90 93 58 04 	sts	0x0458, r25
    1cca:	80 93 57 04 	sts	0x0457, r24
    1cce:	80 91 59 04 	lds	r24, 0x0459
    1cd2:	8c 7f       	andi	r24, 0xFC	; 252
    1cd4:	80 93 59 04 	sts	0x0459, r24
    1cd8:	87 e5       	ldi	r24, 0x57	; 87
    1cda:	94 e0       	ldi	r25, 0x04	; 4
    1cdc:	6f ef       	ldi	r22, 0xFF	; 255
    1cde:	0e 94 63 14 	call	0x28c6	; 0x28c6 <LED_set>
    1ce2:	08 95       	ret

00001ce4 <initHardware>:
    1ce4:	83 ed       	ldi	r24, 0xD3	; 211
    1ce6:	92 e0       	ldi	r25, 0x02	; 2
    1ce8:	0e 94 f3 10 	call	0x21e6	; 0x21e6 <servoPWMInit>
    1cec:	08 95       	ret

00001cee <sysInitHardware>:
    1cee:	80 91 67 02 	lds	r24, 0x0267
    1cf2:	90 91 68 02 	lds	r25, 0x0268
    1cf6:	6f ef       	ldi	r22, 0xFF	; 255
    1cf8:	0e 94 15 14 	call	0x282a	; 0x282a <pin_make_input>
    1cfc:	85 e3       	ldi	r24, 0x35	; 53
    1cfe:	92 e0       	ldi	r25, 0x02	; 2
    1d00:	40 e0       	ldi	r20, 0x00	; 0
    1d02:	52 ec       	ldi	r21, 0xC2	; 194
    1d04:	61 e0       	ldi	r22, 0x01	; 1
    1d06:	70 e0       	ldi	r23, 0x00	; 0
    1d08:	0e 94 ba 17 	call	0x2f74	; 0x2f74 <_uartInit>
    1d0c:	08 95       	ret

00001d0e <__vector_36>:
    1d0e:	1f 92       	push	r1
    1d10:	0f 92       	push	r0
    1d12:	0f b6       	in	r0, 0x3f	; 63
    1d14:	0f 92       	push	r0
    1d16:	11 24       	eor	r1, r1
    1d18:	2f 93       	push	r18
    1d1a:	3f 93       	push	r19
    1d1c:	4f 93       	push	r20
    1d1e:	5f 93       	push	r21
    1d20:	6f 93       	push	r22
    1d22:	7f 93       	push	r23
    1d24:	8f 93       	push	r24
    1d26:	9f 93       	push	r25
    1d28:	af 93       	push	r26
    1d2a:	bf 93       	push	r27
    1d2c:	ef 93       	push	r30
    1d2e:	ff 93       	push	r31
    1d30:	e0 91 61 02 	lds	r30, 0x0261
    1d34:	f0 91 62 02 	lds	r31, 0x0262
    1d38:	60 81       	ld	r22, Z
    1d3a:	85 e3       	ldi	r24, 0x35	; 53
    1d3c:	92 e0       	ldi	r25, 0x02	; 2
    1d3e:	0e 94 ee 18 	call	0x31dc	; 0x31dc <__uartReceiveService>
    1d42:	ff 91       	pop	r31
    1d44:	ef 91       	pop	r30
    1d46:	bf 91       	pop	r27
    1d48:	af 91       	pop	r26
    1d4a:	9f 91       	pop	r25
    1d4c:	8f 91       	pop	r24
    1d4e:	7f 91       	pop	r23
    1d50:	6f 91       	pop	r22
    1d52:	5f 91       	pop	r21
    1d54:	4f 91       	pop	r20
    1d56:	3f 91       	pop	r19
    1d58:	2f 91       	pop	r18
    1d5a:	0f 90       	pop	r0
    1d5c:	0f be       	out	0x3f, r0	; 63
    1d5e:	0f 90       	pop	r0
    1d60:	1f 90       	pop	r1
    1d62:	18 95       	reti

00001d64 <__vector_38>:
    1d64:	1f 92       	push	r1
    1d66:	0f 92       	push	r0
    1d68:	0f b6       	in	r0, 0x3f	; 63
    1d6a:	0f 92       	push	r0
    1d6c:	11 24       	eor	r1, r1
    1d6e:	2f 93       	push	r18
    1d70:	3f 93       	push	r19
    1d72:	4f 93       	push	r20
    1d74:	5f 93       	push	r21
    1d76:	6f 93       	push	r22
    1d78:	7f 93       	push	r23
    1d7a:	8f 93       	push	r24
    1d7c:	9f 93       	push	r25
    1d7e:	af 93       	push	r26
    1d80:	bf 93       	push	r27
    1d82:	ef 93       	push	r30
    1d84:	ff 93       	push	r31
    1d86:	85 e3       	ldi	r24, 0x35	; 53
    1d88:	92 e0       	ldi	r25, 0x02	; 2
    1d8a:	0e 94 99 19 	call	0x3332	; 0x3332 <__uartTransmitService>
    1d8e:	ff 91       	pop	r31
    1d90:	ef 91       	pop	r30
    1d92:	bf 91       	pop	r27
    1d94:	af 91       	pop	r26
    1d96:	9f 91       	pop	r25
    1d98:	8f 91       	pop	r24
    1d9a:	7f 91       	pop	r23
    1d9c:	6f 91       	pop	r22
    1d9e:	5f 91       	pop	r21
    1da0:	4f 91       	pop	r20
    1da2:	3f 91       	pop	r19
    1da4:	2f 91       	pop	r18
    1da6:	0f 90       	pop	r0
    1da8:	0f be       	out	0x3f, r0	; 63
    1daa:	0f 90       	pop	r0
    1dac:	1f 90       	pop	r1
    1dae:	18 95       	reti

00001db0 <uart1GetByte>:
    1db0:	85 e3       	ldi	r24, 0x35	; 53
    1db2:	92 e0       	ldi	r25, 0x02	; 2
    1db4:	0e 94 08 19 	call	0x3210	; 0x3210 <__uartGetByte>
    1db8:	08 95       	ret

00001dba <uart1SendByte>:
    1dba:	68 2f       	mov	r22, r24
    1dbc:	85 e3       	ldi	r24, 0x35	; 53
    1dbe:	92 e0       	ldi	r25, 0x02	; 2
    1dc0:	0e 94 8f 19 	call	0x331e	; 0x331e <_uartSendByte>
    1dc4:	90 e0       	ldi	r25, 0x00	; 0
    1dc6:	08 95       	ret

00001dc8 <clockGetSnapshot>:
    1dc8:	fc 01       	movw	r30, r24
    1dca:	6f b7       	in	r22, 0x3f	; 63
    1dcc:	f8 94       	cli
    1dce:	80 91 24 01 	lds	r24, 0x0124
    1dd2:	90 91 25 01 	lds	r25, 0x0125
    1dd6:	20 91 e1 03 	lds	r18, 0x03E1
    1dda:	30 91 e2 03 	lds	r19, 0x03E2
    1dde:	40 91 e3 03 	lds	r20, 0x03E3
    1de2:	50 91 e4 03 	lds	r21, 0x03E4
    1de6:	20 83       	st	Z, r18
    1de8:	31 83       	std	Z+1, r19	; 0x01
    1dea:	42 83       	std	Z+2, r20	; 0x02
    1dec:	53 83       	std	Z+3, r21	; 0x03
    1dee:	20 91 24 01 	lds	r18, 0x0124
    1df2:	30 91 25 01 	lds	r19, 0x0125
    1df6:	35 83       	std	Z+5, r19	; 0x05
    1df8:	24 83       	std	Z+4, r18	; 0x04
    1dfa:	28 17       	cp	r18, r24
    1dfc:	39 07       	cpc	r19, r25
    1dfe:	10 f0       	brcs	.+4      	; 0x1e04 <clockGetSnapshot+0x3c>
    1e00:	d1 9b       	sbis	0x1a, 1	; 26
    1e02:	12 c0       	rjmp	.+36     	; 0x1e28 <clockGetSnapshot+0x60>
    1e04:	80 81       	ld	r24, Z
    1e06:	91 81       	ldd	r25, Z+1	; 0x01
    1e08:	a2 81       	ldd	r26, Z+2	; 0x02
    1e0a:	b3 81       	ldd	r27, Z+3	; 0x03
    1e0c:	80 50       	subi	r24, 0x00	; 0
    1e0e:	93 48       	sbci	r25, 0x83	; 131
    1e10:	af 4f       	sbci	r26, 0xFF	; 255
    1e12:	bf 4f       	sbci	r27, 0xFF	; 255
    1e14:	80 83       	st	Z, r24
    1e16:	91 83       	std	Z+1, r25	; 0x01
    1e18:	a2 83       	std	Z+2, r26	; 0x02
    1e1a:	b3 83       	std	Z+3, r27	; 0x03
    1e1c:	80 91 24 01 	lds	r24, 0x0124
    1e20:	90 91 25 01 	lds	r25, 0x0125
    1e24:	95 83       	std	Z+5, r25	; 0x05
    1e26:	84 83       	std	Z+4, r24	; 0x04
    1e28:	6f bf       	out	0x3f, r22	; 63
    1e2a:	08 95       	ret

00001e2c <clockSnapshotToTicks>:
    1e2c:	ef 92       	push	r14
    1e2e:	ff 92       	push	r15
    1e30:	0f 93       	push	r16
    1e32:	1f 93       	push	r17
    1e34:	fc 01       	movw	r30, r24
    1e36:	e0 80       	ld	r14, Z
    1e38:	f1 80       	ldd	r15, Z+1	; 0x01
    1e3a:	02 81       	ldd	r16, Z+2	; 0x02
    1e3c:	13 81       	ldd	r17, Z+3	; 0x03
    1e3e:	64 81       	ldd	r22, Z+4	; 0x04
    1e40:	75 81       	ldd	r23, Z+5	; 0x05
    1e42:	80 e0       	ldi	r24, 0x00	; 0
    1e44:	90 e0       	ldi	r25, 0x00	; 0
    1e46:	20 e0       	ldi	r18, 0x00	; 0
    1e48:	3d e7       	ldi	r19, 0x7D	; 125
    1e4a:	40 e0       	ldi	r20, 0x00	; 0
    1e4c:	50 e0       	ldi	r21, 0x00	; 0
    1e4e:	0e 94 82 1f 	call	0x3f04	; 0x3f04 <__mulsi3>
    1e52:	20 e0       	ldi	r18, 0x00	; 0
    1e54:	3a ef       	ldi	r19, 0xFA	; 250
    1e56:	40 e0       	ldi	r20, 0x00	; 0
    1e58:	50 e0       	ldi	r21, 0x00	; 0
    1e5a:	0e 94 c8 1f 	call	0x3f90	; 0x3f90 <__udivmodsi4>
    1e5e:	2e 0d       	add	r18, r14
    1e60:	3f 1d       	adc	r19, r15
    1e62:	40 1f       	adc	r20, r16
    1e64:	51 1f       	adc	r21, r17
    1e66:	b9 01       	movw	r22, r18
    1e68:	ca 01       	movw	r24, r20
    1e6a:	1f 91       	pop	r17
    1e6c:	0f 91       	pop	r16
    1e6e:	ff 90       	pop	r15
    1e70:	ef 90       	pop	r14
    1e72:	08 95       	ret

00001e74 <clockGetus>:
    1e74:	0f 93       	push	r16
    1e76:	1f 93       	push	r17
    1e78:	df 93       	push	r29
    1e7a:	cf 93       	push	r28
    1e7c:	00 d0       	rcall	.+0      	; 0x1e7e <clockGetus+0xa>
    1e7e:	00 d0       	rcall	.+0      	; 0x1e80 <clockGetus+0xc>
    1e80:	00 d0       	rcall	.+0      	; 0x1e82 <clockGetus+0xe>
    1e82:	cd b7       	in	r28, 0x3d	; 61
    1e84:	de b7       	in	r29, 0x3e	; 62
    1e86:	8e 01       	movw	r16, r28
    1e88:	0f 5f       	subi	r16, 0xFF	; 255
    1e8a:	1f 4f       	sbci	r17, 0xFF	; 255
    1e8c:	c8 01       	movw	r24, r16
    1e8e:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <clockGetSnapshot>
    1e92:	c8 01       	movw	r24, r16
    1e94:	0e 94 16 0f 	call	0x1e2c	; 0x1e2c <clockSnapshotToTicks>
    1e98:	26 96       	adiw	r28, 0x06	; 6
    1e9a:	0f b6       	in	r0, 0x3f	; 63
    1e9c:	f8 94       	cli
    1e9e:	de bf       	out	0x3e, r29	; 62
    1ea0:	0f be       	out	0x3f, r0	; 63
    1ea2:	cd bf       	out	0x3d, r28	; 61
    1ea4:	cf 91       	pop	r28
    1ea6:	df 91       	pop	r29
    1ea8:	1f 91       	pop	r17
    1eaa:	0f 91       	pop	r16
    1eac:	08 95       	ret

00001eae <__clockInit>:
    1eae:	d1 9a       	sbi	0x1a, 1	; 26
    1eb0:	e3 e7       	ldi	r30, 0x73	; 115
    1eb2:	f0 e0       	ldi	r31, 0x00	; 0
    1eb4:	80 81       	ld	r24, Z
    1eb6:	82 60       	ori	r24, 0x02	; 2
    1eb8:	80 83       	st	Z, r24
    1eba:	08 95       	ret

00001ebc <__vector_47>:
    1ebc:	1f 92       	push	r1
    1ebe:	0f 92       	push	r0
    1ec0:	0f b6       	in	r0, 0x3f	; 63
    1ec2:	0f 92       	push	r0
    1ec4:	11 24       	eor	r1, r1
    1ec6:	2f 93       	push	r18
    1ec8:	8f 93       	push	r24
    1eca:	9f 93       	push	r25
    1ecc:	af 93       	push	r26
    1ece:	bf 93       	push	r27
    1ed0:	80 91 e1 03 	lds	r24, 0x03E1
    1ed4:	90 91 e2 03 	lds	r25, 0x03E2
    1ed8:	a0 91 e3 03 	lds	r26, 0x03E3
    1edc:	b0 91 e4 03 	lds	r27, 0x03E4
    1ee0:	80 50       	subi	r24, 0x00	; 0
    1ee2:	93 48       	sbci	r25, 0x83	; 131
    1ee4:	af 4f       	sbci	r26, 0xFF	; 255
    1ee6:	bf 4f       	sbci	r27, 0xFF	; 255
    1ee8:	80 93 e1 03 	sts	0x03E1, r24
    1eec:	90 93 e2 03 	sts	0x03E2, r25
    1ef0:	a0 93 e3 03 	sts	0x03E3, r26
    1ef4:	b0 93 e4 03 	sts	0x03E4, r27
    1ef8:	20 91 52 04 	lds	r18, 0x0452
    1efc:	22 23       	and	r18, r18
    1efe:	b9 f1       	breq	.+110    	; 0x1f6e <__vector_47+0xb2>
    1f00:	39 9b       	sbis	0x07, 1	; 7
    1f02:	35 c0       	rjmp	.+106    	; 0x1f6e <__vector_47+0xb2>
    1f04:	80 91 e5 03 	lds	r24, 0x03E5
    1f08:	88 23       	and	r24, r24
    1f0a:	19 f0       	breq	.+6      	; 0x1f12 <__vector_47+0x56>
    1f0c:	81 50       	subi	r24, 0x01	; 1
    1f0e:	80 93 e5 03 	sts	0x03E5, r24
    1f12:	80 91 e5 03 	lds	r24, 0x03E5
    1f16:	88 23       	and	r24, r24
    1f18:	51 f5       	brne	.+84     	; 0x1f6e <__vector_47+0xb2>
    1f1a:	80 91 53 04 	lds	r24, 0x0453
    1f1e:	88 23       	and	r24, r24
    1f20:	59 f4       	brne	.+22     	; 0x1f38 <__vector_47+0x7c>
    1f22:	82 2f       	mov	r24, r18
    1f24:	99 27       	eor	r25, r25
    1f26:	87 fd       	sbrc	r24, 7
    1f28:	90 95       	com	r25
    1f2a:	97 ff       	sbrs	r25, 7
    1f2c:	03 c0       	rjmp	.+6      	; 0x1f34 <__vector_47+0x78>
    1f2e:	90 95       	com	r25
    1f30:	81 95       	neg	r24
    1f32:	9f 4f       	sbci	r25, 0xFF	; 255
    1f34:	80 93 53 04 	sts	0x0453, r24
    1f38:	27 fd       	sbrc	r18, 7
    1f3a:	02 c0       	rjmp	.+4      	; 0x1f40 <__vector_47+0x84>
    1f3c:	9f e0       	ldi	r25, 0x0F	; 15
    1f3e:	01 c0       	rjmp	.+2      	; 0x1f42 <__vector_47+0x86>
    1f40:	97 e0       	ldi	r25, 0x07	; 7
    1f42:	20 91 54 04 	lds	r18, 0x0454
    1f46:	22 23       	and	r18, r18
    1f48:	41 f0       	breq	.+16     	; 0x1f5a <__vector_47+0x9e>
    1f4a:	80 91 53 04 	lds	r24, 0x0453
    1f4e:	81 50       	subi	r24, 0x01	; 1
    1f50:	80 93 53 04 	sts	0x0453, r24
    1f54:	88 23       	and	r24, r24
    1f56:	09 f4       	brne	.+2      	; 0x1f5a <__vector_47+0x9e>
    1f58:	9e e3       	ldi	r25, 0x3E	; 62
    1f5a:	10 92 54 04 	sts	0x0454, r1
    1f5e:	22 23       	and	r18, r18
    1f60:	19 f4       	brne	.+6      	; 0x1f68 <__vector_47+0xac>
    1f62:	81 e0       	ldi	r24, 0x01	; 1
    1f64:	80 93 54 04 	sts	0x0454, r24
    1f68:	90 93 e5 03 	sts	0x03E5, r25
    1f6c:	31 9a       	sbi	0x06, 1	; 6
    1f6e:	bf 91       	pop	r27
    1f70:	af 91       	pop	r26
    1f72:	9f 91       	pop	r25
    1f74:	8f 91       	pop	r24
    1f76:	2f 91       	pop	r18
    1f78:	0f 90       	pop	r0
    1f7a:	0f be       	out	0x3f, r0	; 63
    1f7c:	0f 90       	pop	r0
    1f7e:	1f 90       	pop	r1
    1f80:	18 95       	reti

00001f82 <_ZN6Stream4_putEcP6__file>:
    1f82:	28 2f       	mov	r18, r24
    1f84:	61 15       	cp	r22, r1
    1f86:	71 05       	cpc	r23, r1
    1f88:	19 f4       	brne	.+6      	; 0x1f90 <_ZN6Stream4_putEcP6__file+0xe>
    1f8a:	a0 e0       	ldi	r26, 0x00	; 0
    1f8c:	b0 e0       	ldi	r27, 0x00	; 0
    1f8e:	02 c0       	rjmp	.+4      	; 0x1f94 <_ZN6Stream4_putEcP6__file+0x12>
    1f90:	db 01       	movw	r26, r22
    1f92:	12 97       	sbiw	r26, 0x02	; 2
    1f94:	ed 91       	ld	r30, X+
    1f96:	fc 91       	ld	r31, X
    1f98:	11 97       	sbiw	r26, 0x01	; 1
    1f9a:	01 90       	ld	r0, Z+
    1f9c:	f0 81       	ld	r31, Z
    1f9e:	e0 2d       	mov	r30, r0
    1fa0:	cd 01       	movw	r24, r26
    1fa2:	62 2f       	mov	r22, r18
    1fa4:	09 95       	icall
    1fa6:	08 95       	ret

00001fa8 <_ZN6Stream4_getEP6__file>:
    1fa8:	00 97       	sbiw	r24, 0x00	; 0
    1faa:	19 f4       	brne	.+6      	; 0x1fb2 <_ZN6Stream4_getEP6__file+0xa>
    1fac:	a0 e0       	ldi	r26, 0x00	; 0
    1fae:	b0 e0       	ldi	r27, 0x00	; 0
    1fb0:	02 c0       	rjmp	.+4      	; 0x1fb6 <_ZN6Stream4_getEP6__file+0xe>
    1fb2:	dc 01       	movw	r26, r24
    1fb4:	12 97       	sbiw	r26, 0x02	; 2
    1fb6:	ed 91       	ld	r30, X+
    1fb8:	fc 91       	ld	r31, X
    1fba:	11 97       	sbiw	r26, 0x01	; 1
    1fbc:	02 80       	ldd	r0, Z+2	; 0x02
    1fbe:	f3 81       	ldd	r31, Z+3	; 0x03
    1fc0:	e0 2d       	mov	r30, r0
    1fc2:	cd 01       	movw	r24, r26
    1fc4:	09 95       	icall
    1fc6:	08 95       	ret

00001fc8 <_ZN10NullStream5writeEh>:
    1fc8:	86 2f       	mov	r24, r22
    1fca:	90 e0       	ldi	r25, 0x00	; 0
    1fcc:	08 95       	ret

00001fce <_ZN10NullStream4readEv>:
    1fce:	8f ef       	ldi	r24, 0xFF	; 255
    1fd0:	9f ef       	ldi	r25, 0xFF	; 255
    1fd2:	08 95       	ret

00001fd4 <_ZN7Marquee4readEv>:
    1fd4:	8f ef       	ldi	r24, 0xFF	; 255
    1fd6:	9f ef       	ldi	r25, 0xFF	; 255
    1fd8:	08 95       	ret

00001fda <_Z10_cpp_Init_v>:
    1fda:	08 95       	ret

00001fdc <__cxa_pure_virtual>:
    1fdc:	ff cf       	rjmp	.-2      	; 0x1fdc <__cxa_pure_virtual>

00001fde <_GLOBAL__I_statusLed>:
    1fde:	87 e5       	ldi	r24, 0x57	; 87
    1fe0:	94 e0       	ldi	r25, 0x04	; 4
    1fe2:	90 93 e9 03 	sts	0x03E9, r25
    1fe6:	80 93 e8 03 	sts	0x03E8, r24
    1fea:	84 ee       	ldi	r24, 0xE4	; 228
    1fec:	92 e0       	ldi	r25, 0x02	; 2
    1fee:	90 93 e7 03 	sts	0x03E7, r25
    1ff2:	80 93 e6 03 	sts	0x03E6, r24
    1ff6:	87 e6       	ldi	r24, 0x67	; 103
    1ff8:	92 e0       	ldi	r25, 0x02	; 2
    1ffa:	90 93 eb 03 	sts	0x03EB, r25
    1ffe:	80 93 ea 03 	sts	0x03EA, r24
    2002:	61 ec       	ldi	r22, 0xC1	; 193
    2004:	7f e0       	ldi	r23, 0x0F	; 15
    2006:	70 93 f7 03 	sts	0x03F7, r23
    200a:	60 93 f6 03 	sts	0x03F6, r22
    200e:	44 ed       	ldi	r20, 0xD4	; 212
    2010:	5f e0       	ldi	r21, 0x0F	; 15
    2012:	50 93 f9 03 	sts	0x03F9, r21
    2016:	40 93 f8 03 	sts	0x03F8, r20
    201a:	a3 e0       	ldi	r26, 0x03	; 3
    201c:	a0 93 f1 03 	sts	0x03F1, r26
    2020:	10 92 fb 03 	sts	0x03FB, r1
    2024:	10 92 fa 03 	sts	0x03FA, r1
    2028:	80 ef       	ldi	r24, 0xF0	; 240
    202a:	92 e0       	ldi	r25, 0x02	; 2
    202c:	90 93 ed 03 	sts	0x03ED, r25
    2030:	80 93 ec 03 	sts	0x03EC, r24
    2034:	8a e7       	ldi	r24, 0x7A	; 122
    2036:	92 e0       	ldi	r25, 0x02	; 2
    2038:	90 93 fd 03 	sts	0x03FD, r25
    203c:	80 93 fc 03 	sts	0x03FC, r24
    2040:	81 e9       	ldi	r24, 0x91	; 145
    2042:	92 e0       	ldi	r25, 0x02	; 2
    2044:	90 93 ff 03 	sts	0x03FF, r25
    2048:	80 93 fe 03 	sts	0x03FE, r24
    204c:	90 93 01 04 	sts	0x0401, r25
    2050:	80 93 00 04 	sts	0x0400, r24
    2054:	87 ea       	ldi	r24, 0xA7	; 167
    2056:	92 e0       	ldi	r25, 0x02	; 2
    2058:	90 93 03 04 	sts	0x0403, r25
    205c:	80 93 02 04 	sts	0x0402, r24
    2060:	90 93 05 04 	sts	0x0405, r25
    2064:	80 93 04 04 	sts	0x0404, r24
    2068:	8d eb       	ldi	r24, 0xBD	; 189
    206a:	92 e0       	ldi	r25, 0x02	; 2
    206c:	90 93 07 04 	sts	0x0407, r25
    2070:	80 93 06 04 	sts	0x0406, r24
    2074:	90 93 09 04 	sts	0x0409, r25
    2078:	80 93 08 04 	sts	0x0408, r24
    207c:	83 ed       	ldi	r24, 0xD3	; 211
    207e:	92 e0       	ldi	r25, 0x02	; 2
    2080:	90 93 0b 04 	sts	0x040B, r25
    2084:	80 93 0a 04 	sts	0x040A, r24
    2088:	70 93 17 04 	sts	0x0417, r23
    208c:	60 93 16 04 	sts	0x0416, r22
    2090:	50 93 19 04 	sts	0x0419, r21
    2094:	40 93 18 04 	sts	0x0418, r20
    2098:	a0 93 11 04 	sts	0x0411, r26
    209c:	10 92 1b 04 	sts	0x041B, r1
    20a0:	10 92 1a 04 	sts	0x041A, r1
    20a4:	25 e3       	ldi	r18, 0x35	; 53
    20a6:	32 e0       	ldi	r19, 0x02	; 2
    20a8:	30 93 1d 04 	sts	0x041D, r19
    20ac:	20 93 1c 04 	sts	0x041C, r18
    20b0:	ec e0       	ldi	r30, 0x0C	; 12
    20b2:	f4 e0       	ldi	r31, 0x04	; 4
    20b4:	f0 93 4b 02 	sts	0x024B, r31
    20b8:	e0 93 4a 02 	sts	0x024A, r30
    20bc:	80 e0       	ldi	r24, 0x00	; 0
    20be:	93 e0       	ldi	r25, 0x03	; 3
    20c0:	91 83       	std	Z+1, r25	; 0x01
    20c2:	80 83       	st	Z, r24
    20c4:	30 93 23 04 	sts	0x0423, r19
    20c8:	20 93 22 04 	sts	0x0422, r18
    20cc:	10 92 24 04 	sts	0x0424, r1
    20d0:	70 93 30 04 	sts	0x0430, r23
    20d4:	60 93 2f 04 	sts	0x042F, r22
    20d8:	50 93 32 04 	sts	0x0432, r21
    20dc:	40 93 31 04 	sts	0x0431, r20
    20e0:	a0 93 2a 04 	sts	0x042A, r26
    20e4:	10 92 34 04 	sts	0x0434, r1
    20e8:	10 92 33 04 	sts	0x0433, r1
    20ec:	80 e1       	ldi	r24, 0x10	; 16
    20ee:	93 e0       	ldi	r25, 0x03	; 3
    20f0:	90 93 26 04 	sts	0x0426, r25
    20f4:	80 93 25 04 	sts	0x0425, r24
    20f8:	08 95       	ret

000020fa <_ZNK9StatusLed3setEa>:
    20fa:	1f 93       	push	r17
    20fc:	16 2f       	mov	r17, r22
    20fe:	80 91 57 04 	lds	r24, 0x0457
    2102:	90 91 58 04 	lds	r25, 0x0458
    2106:	0e 94 00 14 	call	0x2800	; 0x2800 <pin_is_output>
    210a:	88 23       	and	r24, r24
    210c:	29 f0       	breq	.+10     	; 0x2118 <_ZNK9StatusLed3setEa+0x1e>
    210e:	87 e5       	ldi	r24, 0x57	; 87
    2110:	94 e0       	ldi	r25, 0x04	; 4
    2112:	61 2f       	mov	r22, r17
    2114:	0e 94 63 14 	call	0x28c6	; 0x28c6 <LED_set>
    2118:	1f 91       	pop	r17
    211a:	08 95       	ret

0000211c <_ZNK3Led3setEa>:
    211c:	fc 01       	movw	r30, r24
    211e:	82 81       	ldd	r24, Z+2	; 0x02
    2120:	93 81       	ldd	r25, Z+3	; 0x03
    2122:	0e 94 63 14 	call	0x28c6	; 0x28c6 <LED_set>
    2126:	08 95       	ret

00002128 <_ZN7Marquee5writeEh>:
    2128:	fc 01       	movw	r30, r24
    212a:	80 89       	ldd	r24, Z+16	; 0x10
    212c:	91 89       	ldd	r25, Z+17	; 0x11
    212e:	0e 94 ed 14 	call	0x29da	; 0x29da <marqueeSendByte>
    2132:	90 e0       	ldi	r25, 0x00	; 0
    2134:	08 95       	ret

00002136 <_ZN6UartHW4readEv>:
    2136:	fc 01       	movw	r30, r24
    2138:	80 8d       	ldd	r24, Z+24	; 0x18
    213a:	88 23       	and	r24, r24
    213c:	29 f0       	breq	.+10     	; 0x2148 <_ZN6UartHW4readEv+0x12>
    213e:	86 89       	ldd	r24, Z+22	; 0x16
    2140:	97 89       	ldd	r25, Z+23	; 0x17
    2142:	0e 94 d0 19 	call	0x33a0	; 0x33a0 <uartPollByte>
    2146:	08 95       	ret
    2148:	80 89       	ldd	r24, Z+16	; 0x10
    214a:	91 89       	ldd	r25, Z+17	; 0x11
    214c:	0e 94 08 19 	call	0x3210	; 0x3210 <__uartGetByte>
    2150:	08 95       	ret

00002152 <_ZN4Uart4readEv>:
    2152:	fc 01       	movw	r30, r24
    2154:	80 89       	ldd	r24, Z+16	; 0x10
    2156:	91 89       	ldd	r25, Z+17	; 0x11
    2158:	0e 94 08 19 	call	0x3210	; 0x3210 <__uartGetByte>
    215c:	08 95       	ret
    215e:	fc 01       	movw	r30, r24
    2160:	80 89       	ldd	r24, Z+16	; 0x10
    2162:	91 89       	ldd	r25, Z+17	; 0x11
    2164:	0e 94 8f 19 	call	0x331e	; 0x331e <_uartSendByte>
    2168:	90 e0       	ldi	r25, 0x00	; 0
    216a:	08 95       	ret

0000216c <__initTimers>:
    216c:	24 ea       	ldi	r18, 0xA4	; 164
    216e:	32 e0       	ldi	r19, 0x02	; 2
    2170:	f9 01       	movw	r30, r18
    2172:	a5 91       	lpm	r26, Z+
    2174:	b4 91       	lpm	r27, Z+
    2176:	8e e0       	ldi	r24, 0x0E	; 14
    2178:	1a 96       	adiw	r26, 0x0a	; 10
    217a:	8c 93       	st	X, r24
    217c:	1a 97       	sbiw	r26, 0x0a	; 10
    217e:	e0 ea       	ldi	r30, 0xA0	; 160
    2180:	f0 e0       	ldi	r31, 0x00	; 0
    2182:	80 81       	ld	r24, Z
    2184:	82 60       	ori	r24, 0x02	; 2
    2186:	80 83       	st	Z, r24
    2188:	e1 ea       	ldi	r30, 0xA1	; 161
    218a:	f0 e0       	ldi	r31, 0x00	; 0
    218c:	80 81       	ld	r24, Z
    218e:	88 60       	ori	r24, 0x08	; 8
    2190:	80 83       	st	Z, r24
    2192:	80 81       	ld	r24, Z
    2194:	80 61       	ori	r24, 0x10	; 16
    2196:	80 83       	st	Z, r24
    2198:	80 e4       	ldi	r24, 0x40	; 64
    219a:	9c e9       	ldi	r25, 0x9C	; 156
    219c:	90 93 a7 00 	sts	0x00A7, r25
    21a0:	80 93 a6 00 	sts	0x00A6, r24
    21a4:	48 e0       	ldi	r20, 0x08	; 8
    21a6:	50 e0       	ldi	r21, 0x00	; 0
    21a8:	4d 93       	st	X+, r20
    21aa:	5c 93       	st	X, r21
    21ac:	80 81       	ld	r24, Z
    21ae:	82 60       	ori	r24, 0x02	; 2
    21b0:	80 83       	st	Z, r24
    21b2:	24 5d       	subi	r18, 0xD4	; 212
    21b4:	3f 4f       	sbci	r19, 0xFF	; 255
    21b6:	f9 01       	movw	r30, r18
    21b8:	a5 91       	lpm	r26, Z+
    21ba:	b4 91       	lpm	r27, Z+
    21bc:	84 e0       	ldi	r24, 0x04	; 4
    21be:	1a 96       	adiw	r26, 0x0a	; 10
    21c0:	8c 93       	st	X, r24
    21c2:	1a 97       	sbiw	r26, 0x0a	; 10
    21c4:	e1 e2       	ldi	r30, 0x21	; 33
    21c6:	f1 e0       	ldi	r31, 0x01	; 1
    21c8:	80 81       	ld	r24, Z
    21ca:	88 60       	ori	r24, 0x08	; 8
    21cc:	80 83       	st	Z, r24
    21ce:	80 e0       	ldi	r24, 0x00	; 0
    21d0:	9a ef       	ldi	r25, 0xFA	; 250
    21d2:	90 93 29 01 	sts	0x0129, r25
    21d6:	80 93 28 01 	sts	0x0128, r24
    21da:	4d 93       	st	X+, r20
    21dc:	5c 93       	st	X, r21
    21de:	80 81       	ld	r24, Z
    21e0:	82 60       	ori	r24, 0x02	; 2
    21e2:	80 83       	st	Z, r24
    21e4:	08 95       	ret

000021e6 <servoPWMInit>:
    21e6:	8f 92       	push	r8
    21e8:	9f 92       	push	r9
    21ea:	af 92       	push	r10
    21ec:	bf 92       	push	r11
    21ee:	cf 92       	push	r12
    21f0:	df 92       	push	r13
    21f2:	ef 92       	push	r14
    21f4:	ff 92       	push	r15
    21f6:	0f 93       	push	r16
    21f8:	1f 93       	push	r17
    21fa:	cf 93       	push	r28
    21fc:	df 93       	push	r29
    21fe:	6c 01       	movw	r12, r24
    2200:	dc 01       	movw	r26, r24
    2202:	12 96       	adiw	r26, 0x02	; 2
    2204:	8c 91       	ld	r24, X
    2206:	c8 2f       	mov	r28, r24
    2208:	d0 e0       	ldi	r29, 0x00	; 0
    220a:	21 97       	sbiw	r28, 0x01	; 1
    220c:	7e 01       	movw	r14, r28
    220e:	ee 0c       	add	r14, r14
    2210:	ff 1c       	adc	r15, r15
    2212:	9f e7       	ldi	r25, 0x7F	; 127
    2214:	89 2e       	mov	r8, r25
    2216:	93 e0       	ldi	r25, 0x03	; 3
    2218:	99 2e       	mov	r9, r25
    221a:	8c e2       	ldi	r24, 0x2C	; 44
    221c:	a8 2e       	mov	r10, r24
    221e:	47 c0       	rjmp	.+142    	; 0x22ae <__stack+0xaf>
    2220:	d6 01       	movw	r26, r12
    2222:	ed 91       	ld	r30, X+
    2224:	fc 91       	ld	r31, X
    2226:	ee 0d       	add	r30, r14
    2228:	ff 1d       	adc	r31, r15
    222a:	05 91       	lpm	r16, Z+
    222c:	14 91       	lpm	r17, Z+
    222e:	f8 01       	movw	r30, r16
    2230:	d5 82       	std	Z+5, r13	; 0x05
    2232:	c4 82       	std	Z+4, r12	; 0x04
    2234:	86 81       	ldd	r24, Z+6	; 0x06
    2236:	97 81       	ldd	r25, Z+7	; 0x07
    2238:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <compareFromIOPin>
    223c:	fc 01       	movw	r30, r24
    223e:	d8 01       	movw	r26, r16
    2240:	55 96       	adiw	r26, 0x15	; 21
    2242:	9c 93       	st	X, r25
    2244:	8e 93       	st	-X, r24
    2246:	54 97       	sbiw	r26, 0x14	; 20
    2248:	32 96       	adiw	r30, 0x02	; 2
    224a:	b4 90       	lpm	r11, Z+
    224c:	11 96       	adiw	r26, 0x01	; 1
    224e:	9c 92       	st	X, r9
    2250:	8e 92       	st	-X, r8
    2252:	16 96       	adiw	r26, 0x06	; 6
    2254:	8d 91       	ld	r24, X+
    2256:	9c 91       	ld	r25, X
    2258:	17 97       	sbiw	r26, 0x07	; 7
    225a:	60 e0       	ldi	r22, 0x00	; 0
    225c:	0e 94 3c 14 	call	0x2878	; 0x2878 <pin_make_output>
    2260:	ba 9c       	mul	r11, r10
    2262:	c0 01       	movw	r24, r0
    2264:	11 24       	eor	r1, r1
    2266:	8d 5e       	subi	r24, 0xED	; 237
    2268:	9d 4f       	sbci	r25, 0xFD	; 253
    226a:	fc 01       	movw	r30, r24
    226c:	a5 91       	lpm	r26, Z+
    226e:	b4 91       	lpm	r27, Z+
    2270:	8d 91       	ld	r24, X+
    2272:	9c 91       	ld	r25, X
    2274:	d8 01       	movw	r26, r16
    2276:	53 96       	adiw	r26, 0x13	; 19
    2278:	9c 93       	st	X, r25
    227a:	8e 93       	st	-X, r24
    227c:	52 97       	sbiw	r26, 0x12	; 18
    227e:	18 96       	adiw	r26, 0x08	; 8
    2280:	6d 91       	ld	r22, X+
    2282:	7c 91       	ld	r23, X
    2284:	19 97       	sbiw	r26, 0x09	; 9
    2286:	1a 96       	adiw	r26, 0x0a	; 10
    2288:	4d 91       	ld	r20, X+
    228a:	5c 91       	ld	r21, X
    228c:	1b 97       	sbiw	r26, 0x0b	; 11
    228e:	c8 01       	movw	r24, r16
    2290:	0e 94 8f 11 	call	0x231e	; 0x231e <servoSetConfig>
    2294:	c8 01       	movw	r24, r16
    2296:	60 e0       	ldi	r22, 0x00	; 0
    2298:	0e 94 d2 12 	call	0x25a4	; 0x25a4 <__act_setSpeed>
    229c:	c8 01       	movw	r24, r16
    229e:	6f ef       	ldi	r22, 0xFF	; 255
    22a0:	0e 94 f2 12 	call	0x25e4	; 0x25e4 <__act_setConnected>
    22a4:	21 97       	sbiw	r28, 0x01	; 1
    22a6:	ee ef       	ldi	r30, 0xFE	; 254
    22a8:	ff ef       	ldi	r31, 0xFF	; 255
    22aa:	ee 0e       	add	r14, r30
    22ac:	ff 1e       	adc	r15, r31
    22ae:	ff ef       	ldi	r31, 0xFF	; 255
    22b0:	cf 3f       	cpi	r28, 0xFF	; 255
    22b2:	df 07       	cpc	r29, r31
    22b4:	09 f0       	breq	.+2      	; 0x22b8 <__stack+0xb9>
    22b6:	b4 cf       	rjmp	.-152    	; 0x2220 <__stack+0x21>
    22b8:	df 91       	pop	r29
    22ba:	cf 91       	pop	r28
    22bc:	1f 91       	pop	r17
    22be:	0f 91       	pop	r16
    22c0:	ff 90       	pop	r15
    22c2:	ef 90       	pop	r14
    22c4:	df 90       	pop	r13
    22c6:	cf 90       	pop	r12
    22c8:	bf 90       	pop	r11
    22ca:	af 90       	pop	r10
    22cc:	9f 90       	pop	r9
    22ce:	8f 90       	pop	r8
    22d0:	08 95       	ret

000022d2 <setConnected>:
    22d2:	fc 01       	movw	r30, r24
    22d4:	84 89       	ldd	r24, Z+20	; 0x14
    22d6:	95 89       	ldd	r25, Z+21	; 0x15
    22d8:	61 11       	cpse	r22, r1
    22da:	62 e0       	ldi	r22, 0x02	; 2
    22dc:	0e 94 57 17 	call	0x2eae	; 0x2eae <compareSetOutputMode>
    22e0:	08 95       	ret

000022e2 <setSpeed>:
    22e2:	ef 92       	push	r14
    22e4:	ff 92       	push	r15
    22e6:	0f 93       	push	r16
    22e8:	1f 93       	push	r17
    22ea:	fc 01       	movw	r30, r24
    22ec:	e4 88       	ldd	r14, Z+20	; 0x14
    22ee:	f5 88       	ldd	r15, Z+21	; 0x15
    22f0:	24 85       	ldd	r18, Z+12	; 0x0c
    22f2:	35 85       	ldd	r19, Z+13	; 0x0d
    22f4:	06 85       	ldd	r16, Z+14	; 0x0e
    22f6:	17 85       	ldd	r17, Z+15	; 0x0f
    22f8:	86 2f       	mov	r24, r22
    22fa:	99 27       	eor	r25, r25
    22fc:	87 fd       	sbrc	r24, 7
    22fe:	90 95       	com	r25
    2300:	61 e8       	ldi	r22, 0x81	; 129
    2302:	7f ef       	ldi	r23, 0xFF	; 255
    2304:	4f e7       	ldi	r20, 0x7F	; 127
    2306:	50 e0       	ldi	r21, 0x00	; 0
    2308:	0e 94 54 13 	call	0x26a8	; 0x26a8 <interpolateU>
    230c:	bc 01       	movw	r22, r24
    230e:	c7 01       	movw	r24, r14
    2310:	0e 94 79 17 	call	0x2ef2	; 0x2ef2 <compareSetThreshold>
    2314:	1f 91       	pop	r17
    2316:	0f 91       	pop	r16
    2318:	ff 90       	pop	r15
    231a:	ef 90       	pop	r14
    231c:	08 95       	ret

0000231e <servoSetConfig>:
    231e:	9f 92       	push	r9
    2320:	af 92       	push	r10
    2322:	bf 92       	push	r11
    2324:	cf 92       	push	r12
    2326:	df 92       	push	r13
    2328:	ef 92       	push	r14
    232a:	ff 92       	push	r15
    232c:	0f 93       	push	r16
    232e:	1f 93       	push	r17
    2330:	cf 93       	push	r28
    2332:	df 93       	push	r29
    2334:	ec 01       	movw	r28, r24
    2336:	7b 01       	movw	r14, r22
    2338:	8a 01       	movw	r16, r20
    233a:	79 87       	std	Y+9, r23	; 0x09
    233c:	68 87       	std	Y+8, r22	; 0x08
    233e:	5b 87       	std	Y+11, r21	; 0x0b
    2340:	4a 87       	std	Y+10, r20	; 0x0a
    2342:	8c 81       	ldd	r24, Y+4	; 0x04
    2344:	9d 81       	ldd	r25, Y+5	; 0x05
    2346:	89 2b       	or	r24, r25
    2348:	09 f4       	brne	.+2      	; 0x234c <servoSetConfig+0x2e>
    234a:	5e c0       	rjmp	.+188    	; 0x2408 <servoSetConfig+0xea>
    234c:	9f b6       	in	r9, 0x3f	; 63
    234e:	f8 94       	cli
    2350:	8a 89       	ldd	r24, Y+18	; 0x12
    2352:	9b 89       	ldd	r25, Y+19	; 0x13
    2354:	68 ee       	ldi	r22, 0xE8	; 232
    2356:	73 e0       	ldi	r23, 0x03	; 3
    2358:	0e 94 a1 1f 	call	0x3f42	; 0x3f42 <__udivmodhi4>
    235c:	5b 01       	movw	r10, r22
    235e:	cc 24       	eor	r12, r12
    2360:	dd 24       	eor	r13, r13
    2362:	b7 01       	movw	r22, r14
    2364:	60 1b       	sub	r22, r16
    2366:	71 0b       	sbc	r23, r17
    2368:	80 e0       	ldi	r24, 0x00	; 0
    236a:	90 e0       	ldi	r25, 0x00	; 0
    236c:	a6 01       	movw	r20, r12
    236e:	95 01       	movw	r18, r10
    2370:	0e 94 82 1f 	call	0x3f04	; 0x3f04 <__mulsi3>
    2374:	24 e1       	ldi	r18, 0x14	; 20
    2376:	30 e0       	ldi	r19, 0x00	; 0
    2378:	40 e0       	ldi	r20, 0x00	; 0
    237a:	50 e0       	ldi	r21, 0x00	; 0
    237c:	0e 94 c8 1f 	call	0x3f90	; 0x3f90 <__udivmodsi4>
    2380:	c9 01       	movw	r24, r18
    2382:	da 01       	movw	r26, r20
    2384:	9c 01       	movw	r18, r24
    2386:	ad 01       	movw	r20, r26
    2388:	da 01       	movw	r26, r20
    238a:	c9 01       	movw	r24, r18
    238c:	80 70       	andi	r24, 0x00	; 0
    238e:	90 70       	andi	r25, 0x00	; 0
    2390:	00 97       	sbiw	r24, 0x00	; 0
    2392:	a1 05       	cpc	r26, r1
    2394:	b1 05       	cpc	r27, r1
    2396:	39 f0       	breq	.+14     	; 0x23a6 <servoSetConfig+0x88>
    2398:	86 ee       	ldi	r24, 0xE6	; 230
    239a:	0e 94 9d 13 	call	0x273a	; 0x273a <setError>
    239e:	2f ef       	ldi	r18, 0xFF	; 255
    23a0:	3f ef       	ldi	r19, 0xFF	; 255
    23a2:	40 e0       	ldi	r20, 0x00	; 0
    23a4:	50 e0       	ldi	r21, 0x00	; 0
    23a6:	3d 87       	std	Y+13, r19	; 0x0d
    23a8:	2c 87       	std	Y+12, r18	; 0x0c
    23aa:	0e 0d       	add	r16, r14
    23ac:	1f 1d       	adc	r17, r15
    23ae:	b8 01       	movw	r22, r16
    23b0:	80 e0       	ldi	r24, 0x00	; 0
    23b2:	90 e0       	ldi	r25, 0x00	; 0
    23b4:	a6 01       	movw	r20, r12
    23b6:	95 01       	movw	r18, r10
    23b8:	0e 94 82 1f 	call	0x3f04	; 0x3f04 <__mulsi3>
    23bc:	24 e1       	ldi	r18, 0x14	; 20
    23be:	30 e0       	ldi	r19, 0x00	; 0
    23c0:	40 e0       	ldi	r20, 0x00	; 0
    23c2:	50 e0       	ldi	r21, 0x00	; 0
    23c4:	0e 94 c8 1f 	call	0x3f90	; 0x3f90 <__udivmodsi4>
    23c8:	c9 01       	movw	r24, r18
    23ca:	da 01       	movw	r26, r20
    23cc:	9c 01       	movw	r18, r24
    23ce:	ad 01       	movw	r20, r26
    23d0:	da 01       	movw	r26, r20
    23d2:	c9 01       	movw	r24, r18
    23d4:	80 70       	andi	r24, 0x00	; 0
    23d6:	90 70       	andi	r25, 0x00	; 0
    23d8:	00 97       	sbiw	r24, 0x00	; 0
    23da:	a1 05       	cpc	r26, r1
    23dc:	b1 05       	cpc	r27, r1
    23de:	39 f0       	breq	.+14     	; 0x23ee <servoSetConfig+0xd0>
    23e0:	86 ee       	ldi	r24, 0xE6	; 230
    23e2:	0e 94 9d 13 	call	0x273a	; 0x273a <setError>
    23e6:	2f ef       	ldi	r18, 0xFF	; 255
    23e8:	3f ef       	ldi	r19, 0xFF	; 255
    23ea:	40 e0       	ldi	r20, 0x00	; 0
    23ec:	50 e0       	ldi	r21, 0x00	; 0
    23ee:	3f 87       	std	Y+15, r19	; 0x0f
    23f0:	2e 87       	std	Y+14, r18	; 0x0e
    23f2:	8b 81       	ldd	r24, Y+3	; 0x03
    23f4:	80 ff       	sbrs	r24, 0
    23f6:	07 c0       	rjmp	.+14     	; 0x2406 <servoSetConfig+0xe8>
    23f8:	6a 81       	ldd	r22, Y+2	; 0x02
    23fa:	61 50       	subi	r22, 0x01	; 1
    23fc:	6a 83       	std	Y+2, r22	; 0x02
    23fe:	6f 5f       	subi	r22, 0xFF	; 255
    2400:	ce 01       	movw	r24, r28
    2402:	0e 94 d2 12 	call	0x25a4	; 0x25a4 <__act_setSpeed>
    2406:	9f be       	out	0x3f, r9	; 63
    2408:	df 91       	pop	r29
    240a:	cf 91       	pop	r28
    240c:	1f 91       	pop	r17
    240e:	0f 91       	pop	r16
    2410:	ff 90       	pop	r15
    2412:	ef 90       	pop	r14
    2414:	df 90       	pop	r13
    2416:	cf 90       	pop	r12
    2418:	bf 90       	pop	r11
    241a:	af 90       	pop	r10
    241c:	9f 90       	pop	r9
    241e:	08 95       	ret

00002420 <_ZN6Stream5printElh>:
    2420:	0f 93       	push	r16
    2422:	1f 93       	push	r17
    2424:	df 93       	push	r29
    2426:	cf 93       	push	r28
    2428:	cd b7       	in	r28, 0x3d	; 61
    242a:	de b7       	in	r29, 0x3e	; 62
    242c:	a1 97       	sbiw	r28, 0x21	; 33
    242e:	0f b6       	in	r0, 0x3f	; 63
    2430:	f8 94       	cli
    2432:	de bf       	out	0x3e, r29	; 62
    2434:	0f be       	out	0x3f, r0	; 63
    2436:	cd bf       	out	0x3d, r28	; 61
    2438:	8c 01       	movw	r16, r24
    243a:	22 30       	cpi	r18, 0x02	; 2
    243c:	08 f4       	brcc	.+2      	; 0x2440 <_ZN6Stream5printElh+0x20>
    243e:	22 e0       	ldi	r18, 0x02	; 2
    2440:	cb 01       	movw	r24, r22
    2442:	ba 01       	movw	r22, r20
    2444:	ae 01       	movw	r20, r28
    2446:	4f 5f       	subi	r20, 0xFF	; 255
    2448:	5f 4f       	sbci	r21, 0xFF	; 255
    244a:	30 e0       	ldi	r19, 0x00	; 0
    244c:	0e 94 72 1e 	call	0x3ce4	; 0x3ce4 <ltoa>
    2450:	bc 01       	movw	r22, r24
    2452:	c8 01       	movw	r24, r16
    2454:	0e 94 6a 12 	call	0x24d4	; 0x24d4 <_ZN6Stream5printEPKc>
    2458:	a1 96       	adiw	r28, 0x21	; 33
    245a:	0f b6       	in	r0, 0x3f	; 63
    245c:	f8 94       	cli
    245e:	de bf       	out	0x3e, r29	; 62
    2460:	0f be       	out	0x3f, r0	; 63
    2462:	cd bf       	out	0x3d, r28	; 61
    2464:	cf 91       	pop	r28
    2466:	df 91       	pop	r29
    2468:	1f 91       	pop	r17
    246a:	0f 91       	pop	r16
    246c:	08 95       	ret

0000246e <_ZN6Stream5printEl>:
    246e:	2a e0       	ldi	r18, 0x0A	; 10
    2470:	0e 94 10 12 	call	0x2420	; 0x2420 <_ZN6Stream5printElh>
    2474:	08 95       	ret

00002476 <_ZN6Stream5printEih>:
    2476:	ab 01       	movw	r20, r22
    2478:	66 27       	eor	r22, r22
    247a:	57 fd       	sbrc	r21, 7
    247c:	60 95       	com	r22
    247e:	76 2f       	mov	r23, r22
    2480:	0e 94 37 12 	call	0x246e	; 0x246e <_ZN6Stream5printEl>
    2484:	08 95       	ret

00002486 <_ZN6Stream5printEi>:
    2486:	ab 01       	movw	r20, r22
    2488:	66 27       	eor	r22, r22
    248a:	57 fd       	sbrc	r21, 7
    248c:	60 95       	com	r22
    248e:	76 2f       	mov	r23, r22
    2490:	2a e0       	ldi	r18, 0x0A	; 10
    2492:	0e 94 10 12 	call	0x2420	; 0x2420 <_ZN6Stream5printElh>
    2496:	08 95       	ret

00002498 <_ZN6Stream5printEa>:
    2498:	46 2f       	mov	r20, r22
    249a:	55 27       	eor	r21, r21
    249c:	47 fd       	sbrc	r20, 7
    249e:	50 95       	com	r21
    24a0:	65 2f       	mov	r22, r21
    24a2:	75 2f       	mov	r23, r21
    24a4:	2a e0       	ldi	r18, 0x0A	; 10
    24a6:	0e 94 10 12 	call	0x2420	; 0x2420 <_ZN6Stream5printElh>
    24aa:	08 95       	ret

000024ac <_ZN6Stream5printEah>:
    24ac:	ef 92       	push	r14
    24ae:	ff 92       	push	r15
    24b0:	0f 93       	push	r16
    24b2:	1f 93       	push	r17
    24b4:	e6 2e       	mov	r14, r22
    24b6:	24 2f       	mov	r18, r20
    24b8:	ff 24       	eor	r15, r15
    24ba:	e7 fc       	sbrc	r14, 7
    24bc:	f0 94       	com	r15
    24be:	0f 2d       	mov	r16, r15
    24c0:	1f 2d       	mov	r17, r15
    24c2:	b8 01       	movw	r22, r16
    24c4:	a7 01       	movw	r20, r14
    24c6:	0e 94 10 12 	call	0x2420	; 0x2420 <_ZN6Stream5printElh>
    24ca:	1f 91       	pop	r17
    24cc:	0f 91       	pop	r16
    24ce:	ff 90       	pop	r15
    24d0:	ef 90       	pop	r14
    24d2:	08 95       	ret

000024d4 <_ZN6Stream5printEPKc>:
    24d4:	0f 93       	push	r16
    24d6:	1f 93       	push	r17
    24d8:	cf 93       	push	r28
    24da:	df 93       	push	r29
    24dc:	18 2f       	mov	r17, r24
    24de:	09 2f       	mov	r16, r25
    24e0:	eb 01       	movw	r28, r22
    24e2:	04 c0       	rjmp	.+8      	; 0x24ec <_ZN6Stream5printEPKc+0x18>
    24e4:	81 2f       	mov	r24, r17
    24e6:	90 2f       	mov	r25, r16
    24e8:	0e 94 e4 19 	call	0x33c8	; 0x33c8 <_ZN6Stream5printEc>
    24ec:	69 91       	ld	r22, Y+
    24ee:	66 23       	and	r22, r22
    24f0:	c9 f7       	brne	.-14     	; 0x24e4 <_ZN6Stream5printEPKc+0x10>
    24f2:	81 2f       	mov	r24, r17
    24f4:	90 2f       	mov	r25, r16
    24f6:	df 91       	pop	r29
    24f8:	cf 91       	pop	r28
    24fa:	1f 91       	pop	r17
    24fc:	0f 91       	pop	r16
    24fe:	08 95       	ret

00002500 <_ZN6Stream5printEmh>:
    2500:	0f 93       	push	r16
    2502:	1f 93       	push	r17
    2504:	df 93       	push	r29
    2506:	cf 93       	push	r28
    2508:	cd b7       	in	r28, 0x3d	; 61
    250a:	de b7       	in	r29, 0x3e	; 62
    250c:	a1 97       	sbiw	r28, 0x21	; 33
    250e:	0f b6       	in	r0, 0x3f	; 63
    2510:	f8 94       	cli
    2512:	de bf       	out	0x3e, r29	; 62
    2514:	0f be       	out	0x3f, r0	; 63
    2516:	cd bf       	out	0x3d, r28	; 61
    2518:	8c 01       	movw	r16, r24
    251a:	22 30       	cpi	r18, 0x02	; 2
    251c:	08 f4       	brcc	.+2      	; 0x2520 <_ZN6Stream5printEmh+0x20>
    251e:	22 e0       	ldi	r18, 0x02	; 2
    2520:	cb 01       	movw	r24, r22
    2522:	ba 01       	movw	r22, r20
    2524:	ae 01       	movw	r20, r28
    2526:	4f 5f       	subi	r20, 0xFF	; 255
    2528:	5f 4f       	sbci	r21, 0xFF	; 255
    252a:	30 e0       	ldi	r19, 0x00	; 0
    252c:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <ultoa>
    2530:	bc 01       	movw	r22, r24
    2532:	c8 01       	movw	r24, r16
    2534:	0e 94 6a 12 	call	0x24d4	; 0x24d4 <_ZN6Stream5printEPKc>
    2538:	a1 96       	adiw	r28, 0x21	; 33
    253a:	0f b6       	in	r0, 0x3f	; 63
    253c:	f8 94       	cli
    253e:	de bf       	out	0x3e, r29	; 62
    2540:	0f be       	out	0x3f, r0	; 63
    2542:	cd bf       	out	0x3d, r28	; 61
    2544:	cf 91       	pop	r28
    2546:	df 91       	pop	r29
    2548:	1f 91       	pop	r17
    254a:	0f 91       	pop	r16
    254c:	08 95       	ret

0000254e <_ZN6Stream5printEm>:
    254e:	2a e0       	ldi	r18, 0x0A	; 10
    2550:	0e 94 80 12 	call	0x2500	; 0x2500 <_ZN6Stream5printEmh>
    2554:	08 95       	ret

00002556 <_ZN6Stream5printEjh>:
    2556:	ab 01       	movw	r20, r22
    2558:	60 e0       	ldi	r22, 0x00	; 0
    255a:	70 e0       	ldi	r23, 0x00	; 0
    255c:	0e 94 a7 12 	call	0x254e	; 0x254e <_ZN6Stream5printEm>
    2560:	08 95       	ret

00002562 <_ZN6Stream5printEj>:
    2562:	ab 01       	movw	r20, r22
    2564:	60 e0       	ldi	r22, 0x00	; 0
    2566:	70 e0       	ldi	r23, 0x00	; 0
    2568:	2a e0       	ldi	r18, 0x0A	; 10
    256a:	0e 94 80 12 	call	0x2500	; 0x2500 <_ZN6Stream5printEmh>
    256e:	08 95       	ret

00002570 <_ZN6Stream5printEh>:
    2570:	46 2f       	mov	r20, r22
    2572:	50 e0       	ldi	r21, 0x00	; 0
    2574:	60 e0       	ldi	r22, 0x00	; 0
    2576:	70 e0       	ldi	r23, 0x00	; 0
    2578:	2a e0       	ldi	r18, 0x0A	; 10
    257a:	0e 94 80 12 	call	0x2500	; 0x2500 <_ZN6Stream5printEmh>
    257e:	08 95       	ret

00002580 <_ZN6Stream5printEhh>:
    2580:	ef 92       	push	r14
    2582:	ff 92       	push	r15
    2584:	0f 93       	push	r16
    2586:	1f 93       	push	r17
    2588:	24 2f       	mov	r18, r20
    258a:	e6 2e       	mov	r14, r22
    258c:	ff 24       	eor	r15, r15
    258e:	00 e0       	ldi	r16, 0x00	; 0
    2590:	10 e0       	ldi	r17, 0x00	; 0
    2592:	b8 01       	movw	r22, r16
    2594:	a7 01       	movw	r20, r14
    2596:	0e 94 80 12 	call	0x2500	; 0x2500 <_ZN6Stream5printEmh>
    259a:	1f 91       	pop	r17
    259c:	0f 91       	pop	r16
    259e:	ff 90       	pop	r15
    25a0:	ef 90       	pop	r14
    25a2:	08 95       	ret

000025a4 <__act_setSpeed>:
    25a4:	1f 93       	push	r17
    25a6:	cf 93       	push	r28
    25a8:	df 93       	push	r29
    25aa:	ec 01       	movw	r28, r24
    25ac:	16 2f       	mov	r17, r22
    25ae:	61 38       	cpi	r22, 0x81	; 129
    25b0:	0c f4       	brge	.+2      	; 0x25b4 <__act_setSpeed+0x10>
    25b2:	11 e8       	ldi	r17, 0x81	; 129
    25b4:	e8 81       	ld	r30, Y
    25b6:	f9 81       	ldd	r31, Y+1	; 0x01
    25b8:	30 97       	sbiw	r30, 0x00	; 0
    25ba:	79 f0       	breq	.+30     	; 0x25da <__act_setSpeed+0x36>
    25bc:	25 91       	lpm	r18, Z+
    25be:	34 91       	lpm	r19, Z+
    25c0:	21 15       	cp	r18, r1
    25c2:	31 05       	cpc	r19, r1
    25c4:	51 f0       	breq	.+20     	; 0x25da <__act_setSpeed+0x36>
    25c6:	8b 81       	ldd	r24, Y+3	; 0x03
    25c8:	81 fd       	sbrc	r24, 1
    25ca:	02 c0       	rjmp	.+4      	; 0x25d0 <__act_setSpeed+0x2c>
    25cc:	61 2f       	mov	r22, r17
    25ce:	02 c0       	rjmp	.+4      	; 0x25d4 <__act_setSpeed+0x30>
    25d0:	61 2f       	mov	r22, r17
    25d2:	61 95       	neg	r22
    25d4:	ce 01       	movw	r24, r28
    25d6:	f9 01       	movw	r30, r18
    25d8:	09 95       	icall
    25da:	1a 83       	std	Y+2, r17	; 0x02
    25dc:	df 91       	pop	r29
    25de:	cf 91       	pop	r28
    25e0:	1f 91       	pop	r17
    25e2:	08 95       	ret

000025e4 <__act_setConnected>:
    25e4:	dc 01       	movw	r26, r24
    25e6:	96 2f       	mov	r25, r22
    25e8:	91 70       	andi	r25, 0x01	; 1
    25ea:	13 96       	adiw	r26, 0x03	; 3
    25ec:	8c 91       	ld	r24, X
    25ee:	13 97       	sbiw	r26, 0x03	; 3
    25f0:	8e 7f       	andi	r24, 0xFE	; 254
    25f2:	89 2b       	or	r24, r25
    25f4:	13 96       	adiw	r26, 0x03	; 3
    25f6:	8c 93       	st	X, r24
    25f8:	13 97       	sbiw	r26, 0x03	; 3
    25fa:	8d 91       	ld	r24, X+
    25fc:	9c 91       	ld	r25, X
    25fe:	11 97       	sbiw	r26, 0x01	; 1
    2600:	00 97       	sbiw	r24, 0x00	; 0
    2602:	51 f0       	breq	.+20     	; 0x2618 <__act_setConnected+0x34>
    2604:	fc 01       	movw	r30, r24
    2606:	32 96       	adiw	r30, 0x02	; 2
    2608:	25 91       	lpm	r18, Z+
    260a:	34 91       	lpm	r19, Z+
    260c:	21 15       	cp	r18, r1
    260e:	31 05       	cpc	r19, r1
    2610:	19 f0       	breq	.+6      	; 0x2618 <__act_setConnected+0x34>
    2612:	cd 01       	movw	r24, r26
    2614:	f9 01       	movw	r30, r18
    2616:	09 95       	icall
    2618:	08 95       	ret

0000261a <interpolate>:
    261a:	4f 92       	push	r4
    261c:	5f 92       	push	r5
    261e:	6f 92       	push	r6
    2620:	7f 92       	push	r7
    2622:	8f 92       	push	r8
    2624:	9f 92       	push	r9
    2626:	af 92       	push	r10
    2628:	bf 92       	push	r11
    262a:	cf 92       	push	r12
    262c:	df 92       	push	r13
    262e:	ef 92       	push	r14
    2630:	ff 92       	push	r15
    2632:	0f 93       	push	r16
    2634:	1f 93       	push	r17
    2636:	2b 01       	movw	r4, r22
    2638:	3a 01       	movw	r6, r20
    263a:	59 01       	movw	r10, r18
    263c:	78 01       	movw	r14, r16
    263e:	e2 1a       	sub	r14, r18
    2640:	f3 0a       	sbc	r15, r19
    2642:	00 27       	eor	r16, r16
    2644:	f7 fc       	sbrc	r15, 7
    2646:	00 95       	com	r16
    2648:	10 2f       	mov	r17, r16
    264a:	9c 01       	movw	r18, r24
    264c:	26 1b       	sub	r18, r22
    264e:	37 0b       	sbc	r19, r23
    2650:	44 27       	eor	r20, r20
    2652:	37 fd       	sbrc	r19, 7
    2654:	40 95       	com	r20
    2656:	54 2f       	mov	r21, r20
    2658:	c8 01       	movw	r24, r16
    265a:	b7 01       	movw	r22, r14
    265c:	0e 94 82 1f 	call	0x3f04	; 0x3f04 <__mulsi3>
    2660:	64 18       	sub	r6, r4
    2662:	75 08       	sbc	r7, r5
    2664:	88 24       	eor	r8, r8
    2666:	77 fc       	sbrc	r7, 7
    2668:	80 94       	com	r8
    266a:	98 2c       	mov	r9, r8
    266c:	a4 01       	movw	r20, r8
    266e:	93 01       	movw	r18, r6
    2670:	0e 94 ea 1f 	call	0x3fd4	; 0x3fd4 <__divmodsi4>
    2674:	c9 01       	movw	r24, r18
    2676:	da 01       	movw	r26, r20
    2678:	cc 24       	eor	r12, r12
    267a:	b7 fc       	sbrc	r11, 7
    267c:	c0 94       	com	r12
    267e:	dc 2c       	mov	r13, r12
    2680:	a8 0e       	add	r10, r24
    2682:	b9 1e       	adc	r11, r25
    2684:	ca 1e       	adc	r12, r26
    2686:	db 1e       	adc	r13, r27
    2688:	c5 01       	movw	r24, r10
    268a:	1f 91       	pop	r17
    268c:	0f 91       	pop	r16
    268e:	ff 90       	pop	r15
    2690:	ef 90       	pop	r14
    2692:	df 90       	pop	r13
    2694:	cf 90       	pop	r12
    2696:	bf 90       	pop	r11
    2698:	af 90       	pop	r10
    269a:	9f 90       	pop	r9
    269c:	8f 90       	pop	r8
    269e:	7f 90       	pop	r7
    26a0:	6f 90       	pop	r6
    26a2:	5f 90       	pop	r5
    26a4:	4f 90       	pop	r4
    26a6:	08 95       	ret

000026a8 <interpolateU>:
    26a8:	4f 92       	push	r4
    26aa:	5f 92       	push	r5
    26ac:	6f 92       	push	r6
    26ae:	7f 92       	push	r7
    26b0:	8f 92       	push	r8
    26b2:	9f 92       	push	r9
    26b4:	af 92       	push	r10
    26b6:	bf 92       	push	r11
    26b8:	cf 92       	push	r12
    26ba:	df 92       	push	r13
    26bc:	ef 92       	push	r14
    26be:	ff 92       	push	r15
    26c0:	0f 93       	push	r16
    26c2:	1f 93       	push	r17
    26c4:	2b 01       	movw	r4, r22
    26c6:	5a 01       	movw	r10, r20
    26c8:	39 01       	movw	r6, r18
    26ca:	78 01       	movw	r14, r16
    26cc:	e2 1a       	sub	r14, r18
    26ce:	f3 0a       	sbc	r15, r19
    26d0:	00 e0       	ldi	r16, 0x00	; 0
    26d2:	10 e0       	ldi	r17, 0x00	; 0
    26d4:	9c 01       	movw	r18, r24
    26d6:	26 1b       	sub	r18, r22
    26d8:	37 0b       	sbc	r19, r23
    26da:	44 27       	eor	r20, r20
    26dc:	37 fd       	sbrc	r19, 7
    26de:	40 95       	com	r20
    26e0:	54 2f       	mov	r21, r20
    26e2:	c8 01       	movw	r24, r16
    26e4:	b7 01       	movw	r22, r14
    26e6:	0e 94 82 1f 	call	0x3f04	; 0x3f04 <__mulsi3>
    26ea:	a4 18       	sub	r10, r4
    26ec:	b5 08       	sbc	r11, r5
    26ee:	cc 24       	eor	r12, r12
    26f0:	b7 fc       	sbrc	r11, 7
    26f2:	c0 94       	com	r12
    26f4:	dc 2c       	mov	r13, r12
    26f6:	a6 01       	movw	r20, r12
    26f8:	95 01       	movw	r18, r10
    26fa:	0e 94 ea 1f 	call	0x3fd4	; 0x3fd4 <__divmodsi4>
    26fe:	88 24       	eor	r8, r8
    2700:	99 24       	eor	r9, r9
    2702:	26 0d       	add	r18, r6
    2704:	37 1d       	adc	r19, r7
    2706:	48 1d       	adc	r20, r8
    2708:	59 1d       	adc	r21, r9
    270a:	c9 01       	movw	r24, r18
    270c:	1f 91       	pop	r17
    270e:	0f 91       	pop	r16
    2710:	ff 90       	pop	r15
    2712:	ef 90       	pop	r14
    2714:	df 90       	pop	r13
    2716:	cf 90       	pop	r12
    2718:	bf 90       	pop	r11
    271a:	af 90       	pop	r10
    271c:	9f 90       	pop	r9
    271e:	8f 90       	pop	r8
    2720:	7f 90       	pop	r7
    2722:	6f 90       	pop	r6
    2724:	5f 90       	pop	r5
    2726:	4f 90       	pop	r4
    2728:	08 95       	ret

0000272a <getError>:
    272a:	80 91 52 04 	lds	r24, 0x0452
    272e:	08 95       	ret

00002730 <setErrorLog>:
    2730:	90 93 56 04 	sts	0x0456, r25
    2734:	80 93 55 04 	sts	0x0455, r24
    2738:	08 95       	ret

0000273a <setError>:
    273a:	1f 93       	push	r17
    273c:	18 2f       	mov	r17, r24
    273e:	80 91 52 04 	lds	r24, 0x0452
    2742:	88 23       	and	r24, r24
    2744:	09 f0       	breq	.+2      	; 0x2748 <setError+0xe>
    2746:	5a c0       	rjmp	.+180    	; 0x27fc <setError+0xc2>
    2748:	10 93 52 04 	sts	0x0452, r17
    274c:	80 91 57 04 	lds	r24, 0x0457
    2750:	90 91 58 04 	lds	r25, 0x0458
    2754:	00 97       	sbiw	r24, 0x00	; 0
    2756:	49 f0       	breq	.+18     	; 0x276a <setError+0x30>
    2758:	0e 94 00 14 	call	0x2800	; 0x2800 <pin_is_output>
    275c:	88 23       	and	r24, r24
    275e:	29 f0       	breq	.+10     	; 0x276a <setError+0x30>
    2760:	87 e5       	ldi	r24, 0x57	; 87
    2762:	94 e0       	ldi	r25, 0x04	; 4
    2764:	60 e0       	ldi	r22, 0x00	; 0
    2766:	0e 94 63 14 	call	0x28c6	; 0x28c6 <LED_set>
    276a:	80 91 62 04 	lds	r24, 0x0462
    276e:	90 91 63 04 	lds	r25, 0x0463
    2772:	00 97       	sbiw	r24, 0x00	; 0
    2774:	09 f4       	brne	.+2      	; 0x2778 <setError+0x3e>
    2776:	42 c0       	rjmp	.+132    	; 0x27fc <setError+0xc2>
    2778:	17 ff       	sbrs	r17, 7
    277a:	12 c0       	rjmp	.+36     	; 0x27a0 <setError+0x66>
    277c:	00 d0       	rcall	.+0      	; 0x277e <setError+0x44>
    277e:	00 d0       	rcall	.+0      	; 0x2780 <setError+0x46>
    2780:	ad b7       	in	r26, 0x3d	; 61
    2782:	be b7       	in	r27, 0x3e	; 62
    2784:	12 96       	adiw	r26, 0x02	; 2
    2786:	9c 93       	st	X, r25
    2788:	8e 93       	st	-X, r24
    278a:	11 97       	sbiw	r26, 0x01	; 1
    278c:	84 e9       	ldi	r24, 0x94	; 148
    278e:	93 e0       	ldi	r25, 0x03	; 3
    2790:	14 96       	adiw	r26, 0x04	; 4
    2792:	9c 93       	st	X, r25
    2794:	8e 93       	st	-X, r24
    2796:	13 97       	sbiw	r26, 0x03	; 3
    2798:	0e 94 cb 1e 	call	0x3d96	; 0x3d96 <fprintf_P>
    279c:	11 95       	neg	r17
    279e:	0c c0       	rjmp	.+24     	; 0x27b8 <setError+0x7e>
    27a0:	00 d0       	rcall	.+0      	; 0x27a2 <setError+0x68>
    27a2:	00 d0       	rcall	.+0      	; 0x27a4 <setError+0x6a>
    27a4:	ed b7       	in	r30, 0x3d	; 61
    27a6:	fe b7       	in	r31, 0x3e	; 62
    27a8:	92 83       	std	Z+2, r25	; 0x02
    27aa:	81 83       	std	Z+1, r24	; 0x01
    27ac:	8f e8       	ldi	r24, 0x8F	; 143
    27ae:	93 e0       	ldi	r25, 0x03	; 3
    27b0:	94 83       	std	Z+4, r25	; 0x04
    27b2:	83 83       	std	Z+3, r24	; 0x03
    27b4:	0e 94 cb 1e 	call	0x3d96	; 0x3d96 <fprintf_P>
    27b8:	00 d0       	rcall	.+0      	; 0x27ba <setError+0x80>
    27ba:	ed b7       	in	r30, 0x3d	; 61
    27bc:	fe b7       	in	r31, 0x3e	; 62
    27be:	31 96       	adiw	r30, 0x01	; 1
    27c0:	80 91 62 04 	lds	r24, 0x0462
    27c4:	90 91 63 04 	lds	r25, 0x0463
    27c8:	ad b7       	in	r26, 0x3d	; 61
    27ca:	be b7       	in	r27, 0x3e	; 62
    27cc:	12 96       	adiw	r26, 0x02	; 2
    27ce:	9c 93       	st	X, r25
    27d0:	8e 93       	st	-X, r24
    27d2:	11 97       	sbiw	r26, 0x01	; 1
    27d4:	83 e8       	ldi	r24, 0x83	; 131
    27d6:	93 e0       	ldi	r25, 0x03	; 3
    27d8:	93 83       	std	Z+3, r25	; 0x03
    27da:	82 83       	std	Z+2, r24	; 0x02
    27dc:	81 2f       	mov	r24, r17
    27de:	99 27       	eor	r25, r25
    27e0:	87 fd       	sbrc	r24, 7
    27e2:	90 95       	com	r25
    27e4:	95 83       	std	Z+5, r25	; 0x05
    27e6:	84 83       	std	Z+4, r24	; 0x04
    27e8:	0e 94 cb 1e 	call	0x3d96	; 0x3d96 <fprintf_P>
    27ec:	ed b7       	in	r30, 0x3d	; 61
    27ee:	fe b7       	in	r31, 0x3e	; 62
    27f0:	36 96       	adiw	r30, 0x06	; 6
    27f2:	0f b6       	in	r0, 0x3f	; 63
    27f4:	f8 94       	cli
    27f6:	fe bf       	out	0x3e, r31	; 62
    27f8:	0f be       	out	0x3f, r0	; 63
    27fa:	ed bf       	out	0x3d, r30	; 61
    27fc:	1f 91       	pop	r17
    27fe:	08 95       	ret

00002800 <pin_is_output>:
    2800:	9c 01       	movw	r18, r24
    2802:	00 97       	sbiw	r24, 0x00	; 0
    2804:	81 f0       	breq	.+32     	; 0x2826 <pin_is_output+0x26>
    2806:	fc 01       	movw	r30, r24
    2808:	85 91       	lpm	r24, Z+
    280a:	94 91       	lpm	r25, Z+
    280c:	02 96       	adiw	r24, 0x02	; 2
    280e:	fc 01       	movw	r30, r24
    2810:	a5 91       	lpm	r26, Z+
    2812:	b4 91       	lpm	r27, Z+
    2814:	2e 5f       	subi	r18, 0xFE	; 254
    2816:	3f 4f       	sbci	r19, 0xFF	; 255
    2818:	f9 01       	movw	r30, r18
    281a:	94 91       	lpm	r25, Z+
    281c:	8c 91       	ld	r24, X
    281e:	89 23       	and	r24, r25
    2820:	11 f0       	breq	.+4      	; 0x2826 <pin_is_output+0x26>
    2822:	8f ef       	ldi	r24, 0xFF	; 255
    2824:	08 95       	ret
    2826:	80 e0       	ldi	r24, 0x00	; 0
    2828:	08 95       	ret

0000282a <pin_make_input>:
    282a:	cf 93       	push	r28
    282c:	df 93       	push	r29
    282e:	9c 01       	movw	r18, r24
    2830:	00 97       	sbiw	r24, 0x00	; 0
    2832:	f9 f0       	breq	.+62     	; 0x2872 <pin_make_input+0x48>
    2834:	fc 01       	movw	r30, r24
    2836:	45 91       	lpm	r20, Z+
    2838:	54 91       	lpm	r21, Z+
    283a:	ca 01       	movw	r24, r20
    283c:	02 96       	adiw	r24, 0x02	; 2
    283e:	fc 01       	movw	r30, r24
    2840:	a5 91       	lpm	r26, Z+
    2842:	b4 91       	lpm	r27, Z+
    2844:	fa 01       	movw	r30, r20
    2846:	c5 91       	lpm	r28, Z+
    2848:	d4 91       	lpm	r29, Z+
    284a:	2e 5f       	subi	r18, 0xFE	; 254
    284c:	3f 4f       	sbci	r19, 0xFF	; 255
    284e:	f9 01       	movw	r30, r18
    2850:	94 91       	lpm	r25, Z+
    2852:	3f b7       	in	r19, 0x3f	; 63
    2854:	f8 94       	cli
    2856:	8c 91       	ld	r24, X
    2858:	29 2f       	mov	r18, r25
    285a:	20 95       	com	r18
    285c:	82 23       	and	r24, r18
    285e:	8c 93       	st	X, r24
    2860:	66 23       	and	r22, r22
    2862:	19 f0       	breq	.+6      	; 0x286a <pin_make_input+0x40>
    2864:	88 81       	ld	r24, Y
    2866:	89 2b       	or	r24, r25
    2868:	02 c0       	rjmp	.+4      	; 0x286e <pin_make_input+0x44>
    286a:	88 81       	ld	r24, Y
    286c:	82 23       	and	r24, r18
    286e:	88 83       	st	Y, r24
    2870:	3f bf       	out	0x3f, r19	; 63
    2872:	df 91       	pop	r29
    2874:	cf 91       	pop	r28
    2876:	08 95       	ret

00002878 <pin_make_output>:
    2878:	cf 93       	push	r28
    287a:	df 93       	push	r29
    287c:	9c 01       	movw	r18, r24
    287e:	00 97       	sbiw	r24, 0x00	; 0
    2880:	f9 f0       	breq	.+62     	; 0x28c0 <pin_make_output+0x48>
    2882:	fc 01       	movw	r30, r24
    2884:	45 91       	lpm	r20, Z+
    2886:	54 91       	lpm	r21, Z+
    2888:	ca 01       	movw	r24, r20
    288a:	02 96       	adiw	r24, 0x02	; 2
    288c:	fc 01       	movw	r30, r24
    288e:	c5 91       	lpm	r28, Z+
    2890:	d4 91       	lpm	r29, Z+
    2892:	fa 01       	movw	r30, r20
    2894:	a5 91       	lpm	r26, Z+
    2896:	b4 91       	lpm	r27, Z+
    2898:	2e 5f       	subi	r18, 0xFE	; 254
    289a:	3f 4f       	sbci	r19, 0xFF	; 255
    289c:	f9 01       	movw	r30, r18
    289e:	24 91       	lpm	r18, Z+
    28a0:	3f b7       	in	r19, 0x3f	; 63
    28a2:	f8 94       	cli
    28a4:	66 23       	and	r22, r22
    28a6:	19 f0       	breq	.+6      	; 0x28ae <pin_make_output+0x36>
    28a8:	8c 91       	ld	r24, X
    28aa:	82 2b       	or	r24, r18
    28ac:	04 c0       	rjmp	.+8      	; 0x28b6 <pin_make_output+0x3e>
    28ae:	8c 91       	ld	r24, X
    28b0:	92 2f       	mov	r25, r18
    28b2:	90 95       	com	r25
    28b4:	89 23       	and	r24, r25
    28b6:	8c 93       	st	X, r24
    28b8:	88 81       	ld	r24, Y
    28ba:	82 2b       	or	r24, r18
    28bc:	88 83       	st	Y, r24
    28be:	3f bf       	out	0x3f, r19	; 63
    28c0:	df 91       	pop	r29
    28c2:	cf 91       	pop	r28
    28c4:	08 95       	ret

000028c6 <LED_set>:
    28c6:	1f 93       	push	r17
    28c8:	cf 93       	push	r28
    28ca:	df 93       	push	r29
    28cc:	ec 01       	movw	r28, r24
    28ce:	16 2f       	mov	r17, r22
    28d0:	88 81       	ld	r24, Y
    28d2:	99 81       	ldd	r25, Y+1	; 0x01
    28d4:	00 97       	sbiw	r24, 0x00	; 0
    28d6:	a9 f0       	breq	.+42     	; 0x2902 <LED_set+0x3c>
    28d8:	3a 81       	ldd	r19, Y+2	; 0x02
    28da:	30 fd       	sbrc	r19, 0
    28dc:	05 c0       	rjmp	.+10     	; 0x28e8 <LED_set+0x22>
    28de:	20 e0       	ldi	r18, 0x00	; 0
    28e0:	66 23       	and	r22, r22
    28e2:	09 f4       	brne	.+2      	; 0x28e6 <LED_set+0x20>
    28e4:	21 e0       	ldi	r18, 0x01	; 1
    28e6:	12 2f       	mov	r17, r18
    28e8:	31 fd       	sbrc	r19, 1
    28ea:	06 c0       	rjmp	.+12     	; 0x28f8 <LED_set+0x32>
    28ec:	61 2f       	mov	r22, r17
    28ee:	0e 94 3c 14 	call	0x2878	; 0x2878 <pin_make_output>
    28f2:	8a 81       	ldd	r24, Y+2	; 0x02
    28f4:	82 60       	ori	r24, 0x02	; 2
    28f6:	8a 83       	std	Y+2, r24	; 0x02
    28f8:	88 81       	ld	r24, Y
    28fa:	99 81       	ldd	r25, Y+1	; 0x01
    28fc:	61 2f       	mov	r22, r17
    28fe:	0e 94 9e 1a 	call	0x353c	; 0x353c <pin_set>
    2902:	df 91       	pop	r29
    2904:	cf 91       	pop	r28
    2906:	1f 91       	pop	r17
    2908:	08 95       	ret

0000290a <main>:
    290a:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <registerLED>
    290e:	0e 94 b6 10 	call	0x216c	; 0x216c <__initTimers>
    2912:	0e 94 57 0f 	call	0x1eae	; 0x1eae <__clockInit>
    2916:	78 94       	sei
    2918:	0e 94 77 0e 	call	0x1cee	; 0x1cee <sysInitHardware>
    291c:	0e 94 03 08 	call	0x1006	; 0x1006 <appInitHardware>
    2920:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <clockGetus>
    2924:	60 93 39 04 	sts	0x0439, r22
    2928:	70 93 3a 04 	sts	0x043A, r23
    292c:	80 93 3b 04 	sts	0x043B, r24
    2930:	90 93 3c 04 	sts	0x043C, r25
    2934:	0e 94 d7 07 	call	0xfae	; 0xfae <appInitSoftware>
    2938:	60 93 3d 04 	sts	0x043D, r22
    293c:	70 93 3e 04 	sts	0x043E, r23
    2940:	80 93 3f 04 	sts	0x043F, r24
    2944:	90 93 40 04 	sts	0x0440, r25
    2948:	78 94       	sei
    294a:	0e 94 4a 1a 	call	0x3494	; 0x3494 <breathe>
    294e:	80 91 3d 04 	lds	r24, 0x043D
    2952:	90 91 3e 04 	lds	r25, 0x043E
    2956:	a0 91 3f 04 	lds	r26, 0x043F
    295a:	b0 91 40 04 	lds	r27, 0x0440
    295e:	00 97       	sbiw	r24, 0x00	; 0
    2960:	a1 05       	cpc	r26, r1
    2962:	b1 05       	cpc	r27, r1
    2964:	19 f4       	brne	.+6      	; 0x296c <main+0x62>
    2966:	16 c0       	rjmp	.+44     	; 0x2994 <main+0x8a>
    2968:	0e 94 4a 1a 	call	0x3494	; 0x3494 <breathe>
    296c:	60 91 39 04 	lds	r22, 0x0439
    2970:	70 91 3a 04 	lds	r23, 0x043A
    2974:	80 91 3b 04 	lds	r24, 0x043B
    2978:	90 91 3c 04 	lds	r25, 0x043C
    297c:	20 91 3d 04 	lds	r18, 0x043D
    2980:	30 91 3e 04 	lds	r19, 0x043E
    2984:	40 91 3f 04 	lds	r20, 0x043F
    2988:	50 91 40 04 	lds	r21, 0x0440
    298c:	0e 94 ff 19 	call	0x33fe	; 0x33fe <clockHasElapsed>
    2990:	88 23       	and	r24, r24
    2992:	51 f3       	breq	.-44     	; 0x2968 <main+0x5e>
    2994:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <clockGetus>
    2998:	9b 01       	movw	r18, r22
    299a:	ac 01       	movw	r20, r24
    299c:	60 93 39 04 	sts	0x0439, r22
    29a0:	70 93 3a 04 	sts	0x043A, r23
    29a4:	80 93 3b 04 	sts	0x043B, r24
    29a8:	90 93 3c 04 	sts	0x043C, r25
    29ac:	60 91 35 04 	lds	r22, 0x0435
    29b0:	70 91 36 04 	lds	r23, 0x0436
    29b4:	80 91 37 04 	lds	r24, 0x0437
    29b8:	90 91 38 04 	lds	r25, 0x0438
    29bc:	6f 5f       	subi	r22, 0xFF	; 255
    29be:	7f 4f       	sbci	r23, 0xFF	; 255
    29c0:	8f 4f       	sbci	r24, 0xFF	; 255
    29c2:	9f 4f       	sbci	r25, 0xFF	; 255
    29c4:	60 93 35 04 	sts	0x0435, r22
    29c8:	70 93 36 04 	sts	0x0436, r23
    29cc:	80 93 37 04 	sts	0x0437, r24
    29d0:	90 93 38 04 	sts	0x0438, r25
    29d4:	0e 94 7d 07 	call	0xefa	; 0xefa <appControl>
    29d8:	af cf       	rjmp	.-162    	; 0x2938 <main+0x2e>

000029da <marqueeSendByte>:
    29da:	cf 92       	push	r12
    29dc:	df 92       	push	r13
    29de:	ef 92       	push	r14
    29e0:	ff 92       	push	r15
    29e2:	0f 93       	push	r16
    29e4:	1f 93       	push	r17
    29e6:	cf 93       	push	r28
    29e8:	df 93       	push	r29
    29ea:	ec 01       	movw	r28, r24
    29ec:	d6 2e       	mov	r13, r22
    29ee:	8c 81       	ldd	r24, Y+4	; 0x04
    29f0:	9d 81       	ldd	r25, Y+5	; 0x05
    29f2:	89 2b       	or	r24, r25
    29f4:	a9 f5       	brne	.+106    	; 0x2a60 <marqueeSendByte+0x86>
    29f6:	8a 85       	ldd	r24, Y+10	; 0x0a
    29f8:	9b 85       	ldd	r25, Y+11	; 0x0b
    29fa:	01 96       	adiw	r24, 0x01	; 1
    29fc:	0e 94 54 1c 	call	0x38a8	; 0x38a8 <malloc>
    2a00:	9d 83       	std	Y+5, r25	; 0x05
    2a02:	8c 83       	std	Y+4, r24	; 0x04
    2a04:	00 97       	sbiw	r24, 0x00	; 0
    2a06:	61 f1       	breq	.+88     	; 0x2a60 <marqueeSendByte+0x86>
    2a08:	20 e0       	ldi	r18, 0x00	; 0
    2a0a:	30 e0       	ldi	r19, 0x00	; 0
    2a0c:	07 c0       	rjmp	.+14     	; 0x2a1c <marqueeSendByte+0x42>
    2a0e:	ec 81       	ldd	r30, Y+4	; 0x04
    2a10:	fd 81       	ldd	r31, Y+5	; 0x05
    2a12:	e2 0f       	add	r30, r18
    2a14:	f3 1f       	adc	r31, r19
    2a16:	10 82       	st	Z, r1
    2a18:	2f 5f       	subi	r18, 0xFF	; 255
    2a1a:	3f 4f       	sbci	r19, 0xFF	; 255
    2a1c:	8a 85       	ldd	r24, Y+10	; 0x0a
    2a1e:	9b 85       	ldd	r25, Y+11	; 0x0b
    2a20:	82 17       	cp	r24, r18
    2a22:	93 07       	cpc	r25, r19
    2a24:	a0 f7       	brcc	.-24     	; 0x2a0e <marqueeSendByte+0x34>
    2a26:	19 86       	std	Y+9, r1	; 0x09
    2a28:	18 86       	std	Y+8, r1	; 0x08
    2a2a:	1f 82       	std	Y+7, r1	; 0x07
    2a2c:	1e 82       	std	Y+6, r1	; 0x06
    2a2e:	8c 89       	ldd	r24, Y+20	; 0x14
    2a30:	8e 7f       	andi	r24, 0xFE	; 254
    2a32:	8c 8b       	std	Y+20, r24	; 0x14
    2a34:	00 e0       	ldi	r16, 0x00	; 0
    2a36:	10 e0       	ldi	r17, 0x00	; 0
    2a38:	0e c0       	rjmp	.+28     	; 0x2a56 <marqueeSendByte+0x7c>
    2a3a:	c8 01       	movw	r24, r16
    2a3c:	88 0f       	add	r24, r24
    2a3e:	99 1f       	adc	r25, r25
    2a40:	e8 81       	ld	r30, Y
    2a42:	f9 81       	ldd	r31, Y+1	; 0x01
    2a44:	e8 0f       	add	r30, r24
    2a46:	f9 1f       	adc	r31, r25
    2a48:	85 91       	lpm	r24, Z+
    2a4a:	94 91       	lpm	r25, Z+
    2a4c:	60 e2       	ldi	r22, 0x20	; 32
    2a4e:	0e 94 4a 16 	call	0x2c94	; 0x2c94 <segled_put_char>
    2a52:	0f 5f       	subi	r16, 0xFF	; 255
    2a54:	1f 4f       	sbci	r17, 0xFF	; 255
    2a56:	8a 81       	ldd	r24, Y+2	; 0x02
    2a58:	9b 81       	ldd	r25, Y+3	; 0x03
    2a5a:	08 17       	cp	r16, r24
    2a5c:	19 07       	cpc	r17, r25
    2a5e:	68 f3       	brcs	.-38     	; 0x2a3a <marqueeSendByte+0x60>
    2a60:	ec 81       	ldd	r30, Y+4	; 0x04
    2a62:	fd 81       	ldd	r31, Y+5	; 0x05
    2a64:	30 97       	sbiw	r30, 0x00	; 0
    2a66:	09 f4       	brne	.+2      	; 0x2a6a <marqueeSendByte+0x90>
    2a68:	3e c0       	rjmp	.+124    	; 0x2ae6 <marqueeSendByte+0x10c>
    2a6a:	8a e0       	ldi	r24, 0x0A	; 10
    2a6c:	d8 16       	cp	r13, r24
    2a6e:	19 f5       	brne	.+70     	; 0x2ab6 <marqueeSendByte+0xdc>
    2a70:	88 85       	ldd	r24, Y+8	; 0x08
    2a72:	99 85       	ldd	r25, Y+9	; 0x09
    2a74:	e8 0f       	add	r30, r24
    2a76:	f9 1f       	adc	r31, r25
    2a78:	10 82       	st	Z, r1
    2a7a:	19 86       	std	Y+9, r1	; 0x09
    2a7c:	18 86       	std	Y+8, r1	; 0x08
    2a7e:	cf b6       	in	r12, 0x3f	; 63
    2a80:	f8 94       	cli
    2a82:	8c 89       	ldd	r24, Y+20	; 0x14
    2a84:	80 fd       	sbrc	r24, 0
    2a86:	15 c0       	rjmp	.+42     	; 0x2ab2 <marqueeSendByte+0xd8>
    2a88:	8c 89       	ldd	r24, Y+20	; 0x14
    2a8a:	81 60       	ori	r24, 0x01	; 1
    2a8c:	8c 8b       	std	Y+20, r24	; 0x14
    2a8e:	8c 89       	ldd	r24, Y+20	; 0x14
    2a90:	8d 7f       	andi	r24, 0xFD	; 253
    2a92:	8c 8b       	std	Y+20, r24	; 0x14
    2a94:	1f 82       	std	Y+7, r1	; 0x07
    2a96:	1e 82       	std	Y+6, r1	; 0x06
    2a98:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <clockGetus>
    2a9c:	9b 01       	movw	r18, r22
    2a9e:	ac 01       	movw	r20, r24
    2aa0:	ec 84       	ldd	r14, Y+12	; 0x0c
    2aa2:	fd 84       	ldd	r15, Y+13	; 0x0d
    2aa4:	0e 85       	ldd	r16, Y+14	; 0x0e
    2aa6:	1f 85       	ldd	r17, Y+15	; 0x0f
    2aa8:	8d e7       	ldi	r24, 0x7D	; 125
    2aaa:	95 e1       	ldi	r25, 0x15	; 21
    2aac:	be 01       	movw	r22, r28
    2aae:	0e 94 bb 1b 	call	0x3776	; 0x3776 <scheduleJob>
    2ab2:	cf be       	out	0x3f, r12	; 63
    2ab4:	18 c0       	rjmp	.+48     	; 0x2ae6 <marqueeSendByte+0x10c>
    2ab6:	8d e0       	ldi	r24, 0x0D	; 13
    2ab8:	d8 16       	cp	r13, r24
    2aba:	a9 f0       	breq	.+42     	; 0x2ae6 <marqueeSendByte+0x10c>
    2abc:	28 85       	ldd	r18, Y+8	; 0x08
    2abe:	39 85       	ldd	r19, Y+9	; 0x09
    2ac0:	8a 85       	ldd	r24, Y+10	; 0x0a
    2ac2:	9b 85       	ldd	r25, Y+11	; 0x0b
    2ac4:	28 17       	cp	r18, r24
    2ac6:	39 07       	cpc	r19, r25
    2ac8:	70 f4       	brcc	.+28     	; 0x2ae6 <marqueeSendByte+0x10c>
    2aca:	e2 0f       	add	r30, r18
    2acc:	f3 1f       	adc	r31, r19
    2ace:	2f b7       	in	r18, 0x3f	; 63
    2ad0:	f8 94       	cli
    2ad2:	d0 82       	st	Z, r13
    2ad4:	11 82       	std	Z+1, r1	; 0x01
    2ad6:	88 85       	ldd	r24, Y+8	; 0x08
    2ad8:	99 85       	ldd	r25, Y+9	; 0x09
    2ada:	01 96       	adiw	r24, 0x01	; 1
    2adc:	99 87       	std	Y+9, r25	; 0x09
    2ade:	88 87       	std	Y+8, r24	; 0x08
    2ae0:	1f 82       	std	Y+7, r1	; 0x07
    2ae2:	1e 82       	std	Y+6, r1	; 0x06
    2ae4:	2f bf       	out	0x3f, r18	; 63
    2ae6:	8d 2d       	mov	r24, r13
    2ae8:	df 91       	pop	r29
    2aea:	cf 91       	pop	r28
    2aec:	1f 91       	pop	r17
    2aee:	0f 91       	pop	r16
    2af0:	ff 90       	pop	r15
    2af2:	ef 90       	pop	r14
    2af4:	df 90       	pop	r13
    2af6:	cf 90       	pop	r12
    2af8:	08 95       	ret

00002afa <marqueeUpdate>:
    2afa:	2f 92       	push	r2
    2afc:	3f 92       	push	r3
    2afe:	4f 92       	push	r4
    2b00:	5f 92       	push	r5
    2b02:	6f 92       	push	r6
    2b04:	7f 92       	push	r7
    2b06:	8f 92       	push	r8
    2b08:	9f 92       	push	r9
    2b0a:	af 92       	push	r10
    2b0c:	bf 92       	push	r11
    2b0e:	cf 92       	push	r12
    2b10:	df 92       	push	r13
    2b12:	ef 92       	push	r14
    2b14:	ff 92       	push	r15
    2b16:	0f 93       	push	r16
    2b18:	1f 93       	push	r17
    2b1a:	cf 93       	push	r28
    2b1c:	df 93       	push	r29
    2b1e:	38 2e       	mov	r3, r24
    2b20:	29 2e       	mov	r2, r25
    2b22:	2a 01       	movw	r4, r20
    2b24:	3b 01       	movw	r6, r22
    2b26:	c8 2f       	mov	r28, r24
    2b28:	d9 2f       	mov	r29, r25
    2b2a:	0c 81       	ldd	r16, Y+4	; 0x04
    2b2c:	1d 81       	ldd	r17, Y+5	; 0x05
    2b2e:	8e 81       	ldd	r24, Y+6	; 0x06
    2b30:	9f 81       	ldd	r25, Y+7	; 0x07
    2b32:	08 0f       	add	r16, r24
    2b34:	19 1f       	adc	r17, r25
    2b36:	f8 01       	movw	r30, r16
    2b38:	80 80       	ld	r8, Z
    2b3a:	8c 89       	ldd	r24, Y+20	; 0x14
    2b3c:	86 95       	lsr	r24
    2b3e:	81 70       	andi	r24, 0x01	; 1
    2b40:	88 20       	and	r8, r8
    2b42:	29 f4       	brne	.+10     	; 0x2b4e <marqueeUpdate+0x54>
    2b44:	a8 88       	ldd	r10, Y+16	; 0x10
    2b46:	b9 88       	ldd	r11, Y+17	; 0x11
    2b48:	ca 88       	ldd	r12, Y+18	; 0x12
    2b4a:	db 88       	ldd	r13, Y+19	; 0x13
    2b4c:	04 c0       	rjmp	.+8      	; 0x2b56 <marqueeUpdate+0x5c>
    2b4e:	ac 84       	ldd	r10, Y+12	; 0x0c
    2b50:	bd 84       	ldd	r11, Y+13	; 0x0d
    2b52:	ce 84       	ldd	r12, Y+14	; 0x0e
    2b54:	df 84       	ldd	r13, Y+15	; 0x0f
    2b56:	88 23       	and	r24, r24
    2b58:	d1 f4       	brne	.+52     	; 0x2b8e <marqueeUpdate+0x94>
    2b5a:	88 20       	and	r8, r8
    2b5c:	c1 f0       	breq	.+48     	; 0x2b8e <marqueeUpdate+0x94>
    2b5e:	f8 01       	movw	r30, r16
    2b60:	32 91       	ld	r19, -Z
    2b62:	8f 01       	movw	r16, r30
    2b64:	0f 5f       	subi	r16, 0xFF	; 255
    2b66:	1f 4f       	sbci	r17, 0xFF	; 255
    2b68:	4a 81       	ldd	r20, Y+2	; 0x02
    2b6a:	5b 81       	ldd	r21, Y+3	; 0x03
    2b6c:	f8 01       	movw	r30, r16
    2b6e:	80 e0       	ldi	r24, 0x00	; 0
    2b70:	90 e0       	ldi	r25, 0x00	; 0
    2b72:	07 c0       	rjmp	.+14     	; 0x2b82 <marqueeUpdate+0x88>
    2b74:	20 81       	ld	r18, Z
    2b76:	22 23       	and	r18, r18
    2b78:	51 f0       	breq	.+20     	; 0x2b8e <marqueeUpdate+0x94>
    2b7a:	23 17       	cp	r18, r19
    2b7c:	41 f4       	brne	.+16     	; 0x2b8e <marqueeUpdate+0x94>
    2b7e:	31 96       	adiw	r30, 0x01	; 1
    2b80:	01 96       	adiw	r24, 0x01	; 1
    2b82:	84 17       	cp	r24, r20
    2b84:	95 07       	cpc	r25, r21
    2b86:	b0 f3       	brcs	.-20     	; 0x2b74 <marqueeUpdate+0x7a>
    2b88:	99 24       	eor	r9, r9
    2b8a:	9a 94       	dec	r9
    2b8c:	01 c0       	rjmp	.+2      	; 0x2b90 <marqueeUpdate+0x96>
    2b8e:	99 24       	eor	r9, r9
    2b90:	8c 89       	ldd	r24, Y+20	; 0x14
    2b92:	86 95       	lsr	r24
    2b94:	81 70       	andi	r24, 0x01	; 1
    2b96:	29 2d       	mov	r18, r9
    2b98:	33 27       	eor	r19, r19
    2b9a:	27 fd       	sbrc	r18, 7
    2b9c:	30 95       	com	r19
    2b9e:	90 e0       	ldi	r25, 0x00	; 0
    2ba0:	28 17       	cp	r18, r24
    2ba2:	39 07       	cpc	r19, r25
    2ba4:	c1 f0       	breq	.+48     	; 0x2bd6 <marqueeUpdate+0xdc>
    2ba6:	a6 01       	movw	r20, r12
    2ba8:	95 01       	movw	r18, r10
    2baa:	62 e0       	ldi	r22, 0x02	; 2
    2bac:	56 95       	lsr	r21
    2bae:	47 95       	ror	r20
    2bb0:	37 95       	ror	r19
    2bb2:	27 95       	ror	r18
    2bb4:	6a 95       	dec	r22
    2bb6:	d1 f7       	brne	.-12     	; 0x2bac <marqueeUpdate+0xb2>
    2bb8:	99 2d       	mov	r25, r9
    2bba:	92 70       	andi	r25, 0x02	; 2
    2bbc:	8c 89       	ldd	r24, Y+20	; 0x14
    2bbe:	8d 7f       	andi	r24, 0xFD	; 253
    2bc0:	89 2b       	or	r24, r25
    2bc2:	8c 8b       	std	Y+20, r24	; 0x14
    2bc4:	99 20       	and	r9, r9
    2bc6:	19 f0       	breq	.+6      	; 0x2bce <marqueeUpdate+0xd4>
    2bc8:	59 01       	movw	r10, r18
    2bca:	6a 01       	movw	r12, r20
    2bcc:	04 c0       	rjmp	.+8      	; 0x2bd6 <marqueeUpdate+0xdc>
    2bce:	a2 1a       	sub	r10, r18
    2bd0:	b3 0a       	sbc	r11, r19
    2bd2:	c4 0a       	sbc	r12, r20
    2bd4:	d5 0a       	sbc	r13, r21
    2bd6:	ee 24       	eor	r14, r14
    2bd8:	ff 24       	eor	r15, r15
    2bda:	18 c0       	rjmp	.+48     	; 0x2c0c <marqueeUpdate+0x112>
    2bdc:	c7 01       	movw	r24, r14
    2bde:	88 0f       	add	r24, r24
    2be0:	99 1f       	adc	r25, r25
    2be2:	e8 81       	ld	r30, Y
    2be4:	f9 81       	ldd	r31, Y+1	; 0x01
    2be6:	e8 0f       	add	r30, r24
    2be8:	f9 1f       	adc	r31, r25
    2bea:	85 91       	lpm	r24, Z+
    2bec:	94 91       	lpm	r25, Z+
    2bee:	99 20       	and	r9, r9
    2bf0:	39 f4       	brne	.+14     	; 0x2c00 <marqueeUpdate+0x106>
    2bf2:	f8 01       	movw	r30, r16
    2bf4:	60 81       	ld	r22, Z
    2bf6:	66 23       	and	r22, r22
    2bf8:	19 f0       	breq	.+6      	; 0x2c00 <marqueeUpdate+0x106>
    2bfa:	0f 5f       	subi	r16, 0xFF	; 255
    2bfc:	1f 4f       	sbci	r17, 0xFF	; 255
    2bfe:	01 c0       	rjmp	.+2      	; 0x2c02 <marqueeUpdate+0x108>
    2c00:	60 e2       	ldi	r22, 0x20	; 32
    2c02:	0e 94 4a 16 	call	0x2c94	; 0x2c94 <segled_put_char>
    2c06:	08 94       	sec
    2c08:	e1 1c       	adc	r14, r1
    2c0a:	f1 1c       	adc	r15, r1
    2c0c:	8a 81       	ldd	r24, Y+2	; 0x02
    2c0e:	9b 81       	ldd	r25, Y+3	; 0x03
    2c10:	e8 16       	cp	r14, r24
    2c12:	f9 06       	cpc	r15, r25
    2c14:	18 f3       	brcs	.-58     	; 0x2bdc <marqueeUpdate+0xe2>
    2c16:	88 20       	and	r8, r8
    2c18:	b1 f4       	brne	.+44     	; 0x2c46 <marqueeUpdate+0x14c>
    2c1a:	1f 82       	std	Y+7, r1	; 0x07
    2c1c:	1e 82       	std	Y+6, r1	; 0x06
    2c1e:	88 89       	ldd	r24, Y+16	; 0x10
    2c20:	99 89       	ldd	r25, Y+17	; 0x11
    2c22:	aa 89       	ldd	r26, Y+18	; 0x12
    2c24:	bb 89       	ldd	r27, Y+19	; 0x13
    2c26:	00 97       	sbiw	r24, 0x00	; 0
    2c28:	a1 05       	cpc	r26, r1
    2c2a:	b1 05       	cpc	r27, r1
    2c2c:	29 f0       	breq	.+10     	; 0x2c38 <marqueeUpdate+0x13e>
    2c2e:	ec 81       	ldd	r30, Y+4	; 0x04
    2c30:	fd 81       	ldd	r31, Y+5	; 0x05
    2c32:	80 81       	ld	r24, Z
    2c34:	88 23       	and	r24, r24
    2c36:	19 f4       	brne	.+6      	; 0x2c3e <marqueeUpdate+0x144>
    2c38:	8c 89       	ldd	r24, Y+20	; 0x14
    2c3a:	8e 7f       	andi	r24, 0xFE	; 254
    2c3c:	02 c0       	rjmp	.+4      	; 0x2c42 <marqueeUpdate+0x148>
    2c3e:	8c 89       	ldd	r24, Y+20	; 0x14
    2c40:	8d 7f       	andi	r24, 0xFD	; 253
    2c42:	8c 8b       	std	Y+20, r24	; 0x14
    2c44:	07 c0       	rjmp	.+14     	; 0x2c54 <marqueeUpdate+0x15a>
    2c46:	99 20       	and	r9, r9
    2c48:	29 f4       	brne	.+10     	; 0x2c54 <marqueeUpdate+0x15a>
    2c4a:	8e 81       	ldd	r24, Y+6	; 0x06
    2c4c:	9f 81       	ldd	r25, Y+7	; 0x07
    2c4e:	01 96       	adiw	r24, 0x01	; 1
    2c50:	9f 83       	std	Y+7, r25	; 0x07
    2c52:	8e 83       	std	Y+6, r24	; 0x06
    2c54:	8c 89       	ldd	r24, Y+20	; 0x14
    2c56:	80 ff       	sbrs	r24, 0
    2c58:	0a c0       	rjmp	.+20     	; 0x2c6e <marqueeUpdate+0x174>
    2c5a:	8d e7       	ldi	r24, 0x7D	; 125
    2c5c:	95 e1       	ldi	r25, 0x15	; 21
    2c5e:	63 2d       	mov	r22, r3
    2c60:	72 2d       	mov	r23, r2
    2c62:	a3 01       	movw	r20, r6
    2c64:	92 01       	movw	r18, r4
    2c66:	86 01       	movw	r16, r12
    2c68:	75 01       	movw	r14, r10
    2c6a:	0e 94 bb 1b 	call	0x3776	; 0x3776 <scheduleJob>
    2c6e:	df 91       	pop	r29
    2c70:	cf 91       	pop	r28
    2c72:	1f 91       	pop	r17
    2c74:	0f 91       	pop	r16
    2c76:	ff 90       	pop	r15
    2c78:	ef 90       	pop	r14
    2c7a:	df 90       	pop	r13
    2c7c:	cf 90       	pop	r12
    2c7e:	bf 90       	pop	r11
    2c80:	af 90       	pop	r10
    2c82:	9f 90       	pop	r9
    2c84:	8f 90       	pop	r8
    2c86:	7f 90       	pop	r7
    2c88:	6f 90       	pop	r6
    2c8a:	5f 90       	pop	r5
    2c8c:	4f 90       	pop	r4
    2c8e:	3f 90       	pop	r3
    2c90:	2f 90       	pop	r2
    2c92:	08 95       	ret

00002c94 <segled_put_char>:
    2c94:	ef 92       	push	r14
    2c96:	ff 92       	push	r15
    2c98:	0f 93       	push	r16
    2c9a:	1f 93       	push	r17
    2c9c:	cf 93       	push	r28
    2c9e:	df 93       	push	r29
    2ca0:	8c 01       	movw	r16, r24
    2ca2:	e6 2e       	mov	r14, r22
    2ca4:	fc 01       	movw	r30, r24
    2ca6:	80 89       	ldd	r24, Z+16	; 0x10
    2ca8:	81 fd       	sbrc	r24, 1
    2caa:	12 c0       	rjmp	.+36     	; 0x2cd0 <segled_put_char+0x3c>
    2cac:	c0 e0       	ldi	r28, 0x00	; 0
    2cae:	d0 e0       	ldi	r29, 0x00	; 0
    2cb0:	f8 01       	movw	r30, r16
    2cb2:	ec 0f       	add	r30, r28
    2cb4:	fd 1f       	adc	r31, r29
    2cb6:	80 81       	ld	r24, Z
    2cb8:	91 81       	ldd	r25, Z+1	; 0x01
    2cba:	60 e0       	ldi	r22, 0x00	; 0
    2cbc:	0e 94 3c 14 	call	0x2878	; 0x2878 <pin_make_output>
    2cc0:	22 96       	adiw	r28, 0x02	; 2
    2cc2:	c0 31       	cpi	r28, 0x10	; 16
    2cc4:	d1 05       	cpc	r29, r1
    2cc6:	a1 f7       	brne	.-24     	; 0x2cb0 <segled_put_char+0x1c>
    2cc8:	f8 01       	movw	r30, r16
    2cca:	80 89       	ldd	r24, Z+16	; 0x10
    2ccc:	82 60       	ori	r24, 0x02	; 2
    2cce:	80 8b       	std	Z+16, r24	; 0x10
    2cd0:	8e 2d       	mov	r24, r14
    2cd2:	0e 94 d0 16 	call	0x2da0	; 0x2da0 <segled8_get_mask>
    2cd6:	f8 2e       	mov	r15, r24
    2cd8:	80 ff       	sbrs	r24, 0
    2cda:	07 c0       	rjmp	.+14     	; 0x2cea <segled_put_char+0x56>
    2cdc:	f8 01       	movw	r30, r16
    2cde:	86 85       	ldd	r24, Z+14	; 0x0e
    2ce0:	97 85       	ldd	r25, Z+15	; 0x0f
    2ce2:	89 2b       	or	r24, r25
    2ce4:	11 f4       	brne	.+4      	; 0x2cea <segled_put_char+0x56>
    2ce6:	80 e1       	ldi	r24, 0x10	; 16
    2ce8:	f8 2e       	mov	r15, r24
    2cea:	f8 01       	movw	r30, r16
    2cec:	80 89       	ldd	r24, Z+16	; 0x10
    2cee:	80 ff       	sbrs	r24, 0
    2cf0:	f0 94       	com	r15
    2cf2:	c0 e0       	ldi	r28, 0x00	; 0
    2cf4:	d0 e0       	ldi	r29, 0x00	; 0
    2cf6:	f8 01       	movw	r30, r16
    2cf8:	ec 0f       	add	r30, r28
    2cfa:	fd 1f       	adc	r31, r29
    2cfc:	80 81       	ld	r24, Z
    2cfe:	91 81       	ldd	r25, Z+1	; 0x01
    2d00:	f7 fe       	sbrs	r15, 7
    2d02:	03 c0       	rjmp	.+6      	; 0x2d0a <segled_put_char+0x76>
    2d04:	0e 94 7a 1a 	call	0x34f4	; 0x34f4 <pin_high>
    2d08:	02 c0       	rjmp	.+4      	; 0x2d0e <segled_put_char+0x7a>
    2d0a:	0e 94 55 1a 	call	0x34aa	; 0x34aa <pin_low>
    2d0e:	22 96       	adiw	r28, 0x02	; 2
    2d10:	c0 31       	cpi	r28, 0x10	; 16
    2d12:	d1 05       	cpc	r29, r1
    2d14:	11 f0       	breq	.+4      	; 0x2d1a <segled_put_char+0x86>
    2d16:	ff 0c       	add	r15, r15
    2d18:	ee cf       	rjmp	.-36     	; 0x2cf6 <segled_put_char+0x62>
    2d1a:	8e 2d       	mov	r24, r14
    2d1c:	df 91       	pop	r29
    2d1e:	cf 91       	pop	r28
    2d20:	1f 91       	pop	r17
    2d22:	0f 91       	pop	r16
    2d24:	ff 90       	pop	r15
    2d26:	ef 90       	pop	r14
    2d28:	08 95       	ret

00002d2a <segled_set>:
    2d2a:	ef 92       	push	r14
    2d2c:	ff 92       	push	r15
    2d2e:	0f 93       	push	r16
    2d30:	1f 93       	push	r17
    2d32:	cf 93       	push	r28
    2d34:	df 93       	push	r29
    2d36:	8c 01       	movw	r16, r24
    2d38:	e6 2e       	mov	r14, r22
    2d3a:	f4 2e       	mov	r15, r20
    2d3c:	fc 01       	movw	r30, r24
    2d3e:	80 89       	ldd	r24, Z+16	; 0x10
    2d40:	81 fd       	sbrc	r24, 1
    2d42:	12 c0       	rjmp	.+36     	; 0x2d68 <segled_set+0x3e>
    2d44:	c0 e0       	ldi	r28, 0x00	; 0
    2d46:	d0 e0       	ldi	r29, 0x00	; 0
    2d48:	f8 01       	movw	r30, r16
    2d4a:	ec 0f       	add	r30, r28
    2d4c:	fd 1f       	adc	r31, r29
    2d4e:	80 81       	ld	r24, Z
    2d50:	91 81       	ldd	r25, Z+1	; 0x01
    2d52:	60 e0       	ldi	r22, 0x00	; 0
    2d54:	0e 94 3c 14 	call	0x2878	; 0x2878 <pin_make_output>
    2d58:	22 96       	adiw	r28, 0x02	; 2
    2d5a:	c0 31       	cpi	r28, 0x10	; 16
    2d5c:	d1 05       	cpc	r29, r1
    2d5e:	a1 f7       	brne	.-24     	; 0x2d48 <segled_set+0x1e>
    2d60:	f8 01       	movw	r30, r16
    2d62:	80 89       	ldd	r24, Z+16	; 0x10
    2d64:	82 60       	ori	r24, 0x02	; 2
    2d66:	80 8b       	std	Z+16, r24	; 0x10
    2d68:	f8 01       	movw	r30, r16
    2d6a:	80 89       	ldd	r24, Z+16	; 0x10
    2d6c:	80 fd       	sbrc	r24, 0
    2d6e:	06 c0       	rjmp	.+12     	; 0x2d7c <segled_set+0x52>
    2d70:	ff 20       	and	r15, r15
    2d72:	19 f4       	brne	.+6      	; 0x2d7a <segled_set+0x50>
    2d74:	ff 24       	eor	r15, r15
    2d76:	fa 94       	dec	r15
    2d78:	01 c0       	rjmp	.+2      	; 0x2d7c <segled_set+0x52>
    2d7a:	ff 24       	eor	r15, r15
    2d7c:	ee 2d       	mov	r30, r14
    2d7e:	f0 e0       	ldi	r31, 0x00	; 0
    2d80:	ee 0f       	add	r30, r30
    2d82:	ff 1f       	adc	r31, r31
    2d84:	e0 0f       	add	r30, r16
    2d86:	f1 1f       	adc	r31, r17
    2d88:	80 81       	ld	r24, Z
    2d8a:	91 81       	ldd	r25, Z+1	; 0x01
    2d8c:	6f 2d       	mov	r22, r15
    2d8e:	0e 94 9e 1a 	call	0x353c	; 0x353c <pin_set>
    2d92:	df 91       	pop	r29
    2d94:	cf 91       	pop	r28
    2d96:	1f 91       	pop	r17
    2d98:	0f 91       	pop	r16
    2d9a:	ff 90       	pop	r15
    2d9c:	ef 90       	pop	r14
    2d9e:	08 95       	ret

00002da0 <segled8_get_mask>:
    2da0:	e8 2f       	mov	r30, r24
    2da2:	81 54       	subi	r24, 0x41	; 65
    2da4:	8a 31       	cpi	r24, 0x1A	; 26
    2da6:	28 f4       	brcc	.+10     	; 0x2db2 <segled8_get_mask+0x12>
    2da8:	f0 e0       	ldi	r31, 0x00	; 0
    2daa:	e3 5a       	subi	r30, 0xA3	; 163
    2dac:	fc 4f       	sbci	r31, 0xFC	; 252
    2dae:	84 91       	lpm	r24, Z+
    2db0:	08 95       	ret
    2db2:	8e 2f       	mov	r24, r30
    2db4:	81 56       	subi	r24, 0x61	; 97
    2db6:	8a 31       	cpi	r24, 0x1A	; 26
    2db8:	28 f4       	brcc	.+10     	; 0x2dc4 <segled8_get_mask+0x24>
    2dba:	f0 e0       	ldi	r31, 0x00	; 0
    2dbc:	e3 5c       	subi	r30, 0xC3	; 195
    2dbe:	fc 4f       	sbci	r31, 0xFC	; 252
    2dc0:	84 91       	lpm	r24, Z+
    2dc2:	08 95       	ret
    2dc4:	8e 2f       	mov	r24, r30
    2dc6:	80 53       	subi	r24, 0x30	; 48
    2dc8:	8a 30       	cpi	r24, 0x0A	; 10
    2dca:	28 f4       	brcc	.+10     	; 0x2dd6 <segled8_get_mask+0x36>
    2dcc:	f0 e0       	ldi	r31, 0x00	; 0
    2dce:	e8 57       	subi	r30, 0x78	; 120
    2dd0:	fc 4f       	sbci	r31, 0xFC	; 252
    2dd2:	84 91       	lpm	r24, Z+
    2dd4:	08 95       	ret
    2dd6:	ea 30       	cpi	r30, 0x0A	; 10
    2dd8:	28 f4       	brcc	.+10     	; 0x2de4 <segled8_get_mask+0x44>
    2dda:	f0 e0       	ldi	r31, 0x00	; 0
    2ddc:	e8 54       	subi	r30, 0x48	; 72
    2dde:	fc 4f       	sbci	r31, 0xFC	; 252
    2de0:	84 91       	lpm	r24, Z+
    2de2:	08 95       	ret
    2de4:	ed 32       	cpi	r30, 0x2D	; 45
    2de6:	11 f4       	brne	.+4      	; 0x2dec <segled8_get_mask+0x4c>
    2de8:	82 e0       	ldi	r24, 0x02	; 2
    2dea:	08 95       	ret
    2dec:	eb 35       	cpi	r30, 0x5B	; 91
    2dee:	79 f0       	breq	.+30     	; 0x2e0e <segled8_get_mask+0x6e>
    2df0:	eb 37       	cpi	r30, 0x7B	; 123
    2df2:	69 f0       	breq	.+26     	; 0x2e0e <segled8_get_mask+0x6e>
    2df4:	e8 32       	cpi	r30, 0x28	; 40
    2df6:	59 f0       	breq	.+22     	; 0x2e0e <segled8_get_mask+0x6e>
    2df8:	ed 35       	cpi	r30, 0x5D	; 93
    2dfa:	59 f0       	breq	.+22     	; 0x2e12 <segled8_get_mask+0x72>
    2dfc:	ed 37       	cpi	r30, 0x7D	; 125
    2dfe:	49 f0       	breq	.+18     	; 0x2e12 <segled8_get_mask+0x72>
    2e00:	e9 32       	cpi	r30, 0x29	; 41
    2e02:	39 f0       	breq	.+14     	; 0x2e12 <segled8_get_mask+0x72>
    2e04:	80 e0       	ldi	r24, 0x00	; 0
    2e06:	ee 32       	cpi	r30, 0x2E	; 46
    2e08:	29 f4       	brne	.+10     	; 0x2e14 <segled8_get_mask+0x74>
    2e0a:	81 e0       	ldi	r24, 0x01	; 1
    2e0c:	08 95       	ret
    2e0e:	8c e9       	ldi	r24, 0x9C	; 156
    2e10:	08 95       	ret
    2e12:	80 ef       	ldi	r24, 0xF0	; 240
    2e14:	08 95       	ret

00002e16 <compareFromIOPin>:
    2e16:	bf 92       	push	r11
    2e18:	cf 92       	push	r12
    2e1a:	df 92       	push	r13
    2e1c:	ef 92       	push	r14
    2e1e:	ff 92       	push	r15
    2e20:	0f 93       	push	r16
    2e22:	1f 93       	push	r17
    2e24:	cf 93       	push	r28
    2e26:	df 93       	push	r29
    2e28:	6c 01       	movw	r12, r24
    2e2a:	b0 90 df 02 	lds	r11, 0x02DF
    2e2e:	24 ef       	ldi	r18, 0xF4	; 244
    2e30:	31 e0       	ldi	r19, 0x01	; 1
    2e32:	90 e0       	ldi	r25, 0x00	; 0
    2e34:	c0 e0       	ldi	r28, 0x00	; 0
    2e36:	d0 e0       	ldi	r29, 0x00	; 0
    2e38:	2d c0       	rjmp	.+90     	; 0x2e94 <compareFromIOPin+0x7e>
    2e3a:	28 5f       	subi	r18, 0xF8	; 248
    2e3c:	3f 4f       	sbci	r19, 0xFF	; 255
    2e3e:	f9 01       	movw	r30, r18
    2e40:	e4 90       	lpm	r14, Z+
    2e42:	28 50       	subi	r18, 0x08	; 8
    2e44:	30 40       	sbci	r19, 0x00	; 0
    2e46:	f9 01       	movw	r30, r18
    2e48:	77 96       	adiw	r30, 0x17	; 23
    2e4a:	2a 5f       	subi	r18, 0xFA	; 250
    2e4c:	3f 4f       	sbci	r19, 0xFF	; 255
    2e4e:	80 e0       	ldi	r24, 0x00	; 0
    2e50:	a0 e0       	ldi	r26, 0x00	; 0
    2e52:	b0 e0       	ldi	r27, 0x00	; 0
    2e54:	05 91       	lpm	r16, Z+
    2e56:	14 91       	lpm	r17, Z+
    2e58:	f9 01       	movw	r30, r18
    2e5a:	f4 90       	lpm	r15, Z+
    2e5c:	26 50       	subi	r18, 0x06	; 6
    2e5e:	30 40       	sbci	r19, 0x00	; 0
    2e60:	14 c0       	rjmp	.+40     	; 0x2e8a <compareFromIOPin+0x74>
    2e62:	b8 01       	movw	r22, r16
    2e64:	6a 0f       	add	r22, r26
    2e66:	7b 1f       	adc	r23, r27
    2e68:	fb 01       	movw	r30, r22
    2e6a:	3e 96       	adiw	r30, 0x0e	; 14
    2e6c:	45 91       	lpm	r20, Z+
    2e6e:	54 91       	lpm	r21, Z+
    2e70:	41 15       	cp	r20, r1
    2e72:	51 05       	cpc	r21, r1
    2e74:	41 f0       	breq	.+16     	; 0x2e86 <compareFromIOPin+0x70>
    2e76:	4c 15       	cp	r20, r12
    2e78:	5d 05       	cpc	r21, r13
    2e7a:	29 f4       	brne	.+10     	; 0x2e86 <compareFromIOPin+0x70>
    2e7c:	ff 20       	and	r15, r15
    2e7e:	11 f0       	breq	.+4      	; 0x2e84 <compareFromIOPin+0x6e>
    2e80:	eb 01       	movw	r28, r22
    2e82:	0a c0       	rjmp	.+20     	; 0x2e98 <compareFromIOPin+0x82>
    2e84:	eb 01       	movw	r28, r22
    2e86:	8f 5f       	subi	r24, 0xFF	; 255
    2e88:	50 96       	adiw	r26, 0x10	; 16
    2e8a:	8e 15       	cp	r24, r14
    2e8c:	50 f3       	brcs	.-44     	; 0x2e62 <compareFromIOPin+0x4c>
    2e8e:	9f 5f       	subi	r25, 0xFF	; 255
    2e90:	24 5d       	subi	r18, 0xD4	; 212
    2e92:	3f 4f       	sbci	r19, 0xFF	; 255
    2e94:	9b 15       	cp	r25, r11
    2e96:	88 f2       	brcs	.-94     	; 0x2e3a <compareFromIOPin+0x24>
    2e98:	ce 01       	movw	r24, r28
    2e9a:	df 91       	pop	r29
    2e9c:	cf 91       	pop	r28
    2e9e:	1f 91       	pop	r17
    2ea0:	0f 91       	pop	r16
    2ea2:	ff 90       	pop	r15
    2ea4:	ef 90       	pop	r14
    2ea6:	df 90       	pop	r13
    2ea8:	cf 90       	pop	r12
    2eaa:	bf 90       	pop	r11
    2eac:	08 95       	ret

00002eae <compareSetOutputMode>:
    2eae:	9c 01       	movw	r18, r24
    2eb0:	0b 96       	adiw	r24, 0x0b	; 11
    2eb2:	fc 01       	movw	r30, r24
    2eb4:	a5 91       	lpm	r26, Z+
    2eb6:	b4 91       	lpm	r27, Z+
    2eb8:	23 5f       	subi	r18, 0xF3	; 243
    2eba:	3f 4f       	sbci	r19, 0xFF	; 255
    2ebc:	f9 01       	movw	r30, r18
    2ebe:	24 91       	lpm	r18, Z+
    2ec0:	70 e0       	ldi	r23, 0x00	; 0
    2ec2:	02 2e       	mov	r0, r18
    2ec4:	02 c0       	rjmp	.+4      	; 0x2eca <compareSetOutputMode+0x1c>
    2ec6:	66 0f       	add	r22, r22
    2ec8:	77 1f       	adc	r23, r23
    2eca:	0a 94       	dec	r0
    2ecc:	e2 f7       	brpl	.-8      	; 0x2ec6 <compareSetOutputMode+0x18>
    2ece:	81 e0       	ldi	r24, 0x01	; 1
    2ed0:	90 e0       	ldi	r25, 0x00	; 0
    2ed2:	02 c0       	rjmp	.+4      	; 0x2ed8 <compareSetOutputMode+0x2a>
    2ed4:	88 0f       	add	r24, r24
    2ed6:	99 1f       	adc	r25, r25
    2ed8:	2a 95       	dec	r18
    2eda:	e2 f7       	brpl	.-8      	; 0x2ed4 <compareSetOutputMode+0x26>
    2edc:	28 2f       	mov	r18, r24
    2ede:	22 0f       	add	r18, r18
    2ee0:	28 2b       	or	r18, r24
    2ee2:	9c 91       	ld	r25, X
    2ee4:	82 2f       	mov	r24, r18
    2ee6:	86 23       	and	r24, r22
    2ee8:	20 95       	com	r18
    2eea:	29 23       	and	r18, r25
    2eec:	82 2b       	or	r24, r18
    2eee:	8c 93       	st	X, r24
    2ef0:	08 95       	ret

00002ef2 <compareSetThreshold>:
    2ef2:	cf 93       	push	r28
    2ef4:	df 93       	push	r29
    2ef6:	9c 01       	movw	r18, r24
    2ef8:	2e 5f       	subi	r18, 0xFE	; 254
    2efa:	3f 4f       	sbci	r19, 0xFF	; 255
    2efc:	f9 01       	movw	r30, r18
    2efe:	84 91       	lpm	r24, Z+
    2f00:	22 50       	subi	r18, 0x02	; 2
    2f02:	30 40       	sbci	r19, 0x00	; 0
    2f04:	9c e2       	ldi	r25, 0x2C	; 44
    2f06:	89 9f       	mul	r24, r25
    2f08:	a0 01       	movw	r20, r0
    2f0a:	11 24       	eor	r1, r1
    2f0c:	4c 50       	subi	r20, 0x0C	; 12
    2f0e:	5e 4f       	sbci	r21, 0xFE	; 254
    2f10:	48 5f       	subi	r20, 0xF8	; 248
    2f12:	5f 4f       	sbci	r21, 0xFF	; 255
    2f14:	fa 01       	movw	r30, r20
    2f16:	84 91       	lpm	r24, Z+
    2f18:	48 50       	subi	r20, 0x08	; 8
    2f1a:	50 40       	sbci	r21, 0x00	; 0
    2f1c:	88 23       	and	r24, r24
    2f1e:	c1 f0       	breq	.+48     	; 0x2f50 <compareSetThreshold+0x5e>
    2f20:	c9 01       	movw	r24, r18
    2f22:	06 96       	adiw	r24, 0x06	; 6
    2f24:	fc 01       	movw	r30, r24
    2f26:	c5 91       	lpm	r28, Z+
    2f28:	d4 91       	lpm	r29, Z+
    2f2a:	fa 01       	movw	r30, r20
    2f2c:	36 96       	adiw	r30, 0x06	; 6
    2f2e:	e4 91       	lpm	r30, Z+
    2f30:	ee 23       	and	r30, r30
    2f32:	19 f0       	breq	.+6      	; 0x2f3a <compareSetThreshold+0x48>
    2f34:	79 83       	std	Y+1, r23	; 0x01
    2f36:	68 83       	st	Y, r22
    2f38:	0e c0       	rjmp	.+28     	; 0x2f56 <compareSetThreshold+0x64>
    2f3a:	6f 3f       	cpi	r22, 0xFF	; 255
    2f3c:	71 05       	cpc	r23, r1
    2f3e:	31 f0       	breq	.+12     	; 0x2f4c <compareSetThreshold+0x5a>
    2f40:	28 f0       	brcs	.+10     	; 0x2f4c <compareSetThreshold+0x5a>
    2f42:	8e ef       	ldi	r24, 0xFE	; 254
    2f44:	0e 94 9d 13 	call	0x273a	; 0x273a <setError>
    2f48:	6f ef       	ldi	r22, 0xFF	; 255
    2f4a:	70 e0       	ldi	r23, 0x00	; 0
    2f4c:	68 83       	st	Y, r22
    2f4e:	03 c0       	rjmp	.+6      	; 0x2f56 <compareSetThreshold+0x64>
    2f50:	8d ef       	ldi	r24, 0xFD	; 253
    2f52:	0e 94 9d 13 	call	0x273a	; 0x273a <setError>
    2f56:	df 91       	pop	r29
    2f58:	cf 91       	pop	r28
    2f5a:	08 95       	ret

00002f5c <_uartSetBaudRate>:
    2f5c:	dc 01       	movw	r26, r24
    2f5e:	19 96       	adiw	r26, 0x09	; 9
    2f60:	8d 91       	ld	r24, X+
    2f62:	9c 91       	ld	r25, X
    2f64:	1a 97       	sbiw	r26, 0x0a	; 10
    2f66:	fc 01       	movw	r30, r24
    2f68:	25 91       	lpm	r18, Z+
    2f6a:	34 91       	lpm	r19, Z+
    2f6c:	cd 01       	movw	r24, r26
    2f6e:	f9 01       	movw	r30, r18
    2f70:	09 95       	icall
    2f72:	08 95       	ret

00002f74 <_uartInit>:
    2f74:	df 92       	push	r13
    2f76:	ef 92       	push	r14
    2f78:	ff 92       	push	r15
    2f7a:	0f 93       	push	r16
    2f7c:	1f 93       	push	r17
    2f7e:	cf 93       	push	r28
    2f80:	df 93       	push	r29
    2f82:	ec 01       	movw	r28, r24
    2f84:	7a 01       	movw	r14, r20
    2f86:	8b 01       	movw	r16, r22
    2f88:	df b6       	in	r13, 0x3f	; 63
    2f8a:	f8 94       	cli
    2f8c:	2d 85       	ldd	r18, Y+13	; 0x0d
    2f8e:	3e 85       	ldd	r19, Y+14	; 0x0e
    2f90:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f92:	98 89       	ldd	r25, Y+16	; 0x10
    2f94:	28 17       	cp	r18, r24
    2f96:	39 07       	cpc	r19, r25
    2f98:	11 f0       	breq	.+4      	; 0x2f9e <_uartInit+0x2a>
    2f9a:	80 e0       	ldi	r24, 0x00	; 0
    2f9c:	01 c0       	rjmp	.+2      	; 0x2fa0 <_uartInit+0x2c>
    2f9e:	8f ef       	ldi	r24, 0xFF	; 255
    2fa0:	8f 8b       	std	Y+23, r24	; 0x17
    2fa2:	88 23       	and	r24, r24
    2fa4:	81 f0       	breq	.+32     	; 0x2fc6 <_uartInit+0x52>
    2fa6:	2d 85       	ldd	r18, Y+13	; 0x0d
    2fa8:	3e 85       	ldd	r19, Y+14	; 0x0e
    2faa:	8f 85       	ldd	r24, Y+15	; 0x0f
    2fac:	98 89       	ldd	r25, Y+16	; 0x10
    2fae:	28 17       	cp	r18, r24
    2fb0:	39 07       	cpc	r19, r25
    2fb2:	21 f0       	breq	.+8      	; 0x2fbc <_uartInit+0x48>
    2fb4:	c9 01       	movw	r24, r18
    2fb6:	60 e0       	ldi	r22, 0x00	; 0
    2fb8:	0e 94 15 14 	call	0x282a	; 0x282a <pin_make_input>
    2fbc:	8f 85       	ldd	r24, Y+15	; 0x0f
    2fbe:	98 89       	ldd	r25, Y+16	; 0x10
    2fc0:	6f ef       	ldi	r22, 0xFF	; 255
    2fc2:	0e 94 15 14 	call	0x282a	; 0x282a <pin_make_input>
    2fc6:	88 85       	ldd	r24, Y+8	; 0x08
    2fc8:	81 60       	ori	r24, 0x01	; 1
    2fca:	88 87       	std	Y+8, r24	; 0x08
    2fcc:	88 85       	ldd	r24, Y+8	; 0x08
    2fce:	8b 7f       	andi	r24, 0xFB	; 251
    2fd0:	88 87       	std	Y+8, r24	; 0x08
    2fd2:	88 85       	ldd	r24, Y+8	; 0x08
    2fd4:	8d 7f       	andi	r24, 0xFD	; 253
    2fd6:	88 87       	std	Y+8, r24	; 0x08
    2fd8:	89 85       	ldd	r24, Y+9	; 0x09
    2fda:	9a 85       	ldd	r25, Y+10	; 0x0a
    2fdc:	04 96       	adiw	r24, 0x04	; 4
    2fde:	fc 01       	movw	r30, r24
    2fe0:	25 91       	lpm	r18, Z+
    2fe2:	34 91       	lpm	r19, Z+
    2fe4:	ce 01       	movw	r24, r28
    2fe6:	b8 01       	movw	r22, r16
    2fe8:	a7 01       	movw	r20, r14
    2fea:	f9 01       	movw	r30, r18
    2fec:	09 95       	icall
    2fee:	df be       	out	0x3f, r13	; 63
    2ff0:	df 91       	pop	r29
    2ff2:	cf 91       	pop	r28
    2ff4:	1f 91       	pop	r17
    2ff6:	0f 91       	pop	r16
    2ff8:	ff 90       	pop	r15
    2ffa:	ef 90       	pop	r14
    2ffc:	df 90       	pop	r13
    2ffe:	08 95       	ret

00003000 <__uartHWSetBaudRate>:
    3000:	bf 92       	push	r11
    3002:	cf 92       	push	r12
    3004:	df 92       	push	r13
    3006:	ef 92       	push	r14
    3008:	ff 92       	push	r15
    300a:	0f 93       	push	r16
    300c:	1f 93       	push	r17
    300e:	cf 93       	push	r28
    3010:	df 93       	push	r29
    3012:	7a 01       	movw	r14, r20
    3014:	8b 01       	movw	r16, r22
    3016:	ec 01       	movw	r28, r24
    3018:	bf b6       	in	r11, 0x3f	; 63
    301a:	f8 94       	cli
    301c:	4f 3f       	cpi	r20, 0xFF	; 255
    301e:	8f ef       	ldi	r24, 0xFF	; 255
    3020:	58 07       	cpc	r21, r24
    3022:	8f ef       	ldi	r24, 0xFF	; 255
    3024:	68 07       	cpc	r22, r24
    3026:	8f ef       	ldi	r24, 0xFF	; 255
    3028:	78 07       	cpc	r23, r24
    302a:	21 f4       	brne	.+8      	; 0x3034 <__uartHWSetBaudRate+0x34>
    302c:	a1 e0       	ldi	r26, 0x01	; 1
    302e:	ca 2e       	mov	r12, r26
    3030:	d1 2c       	mov	r13, r1
    3032:	24 c0       	rjmp	.+72     	; 0x307c <__uartHWSetBaudRate+0x7c>
    3034:	cb 01       	movw	r24, r22
    3036:	ba 01       	movw	r22, r20
    3038:	f3 e0       	ldi	r31, 0x03	; 3
    303a:	66 0f       	add	r22, r22
    303c:	77 1f       	adc	r23, r23
    303e:	88 1f       	adc	r24, r24
    3040:	99 1f       	adc	r25, r25
    3042:	fa 95       	dec	r31
    3044:	d1 f7       	brne	.-12     	; 0x303a <__uartHWSetBaudRate+0x3a>
    3046:	20 91 2d 02 	lds	r18, 0x022D
    304a:	30 91 2e 02 	lds	r19, 0x022E
    304e:	40 91 2f 02 	lds	r20, 0x022F
    3052:	50 91 30 02 	lds	r21, 0x0230
    3056:	62 0f       	add	r22, r18
    3058:	73 1f       	adc	r23, r19
    305a:	84 1f       	adc	r24, r20
    305c:	95 1f       	adc	r25, r21
    305e:	a8 01       	movw	r20, r16
    3060:	97 01       	movw	r18, r14
    3062:	e4 e0       	ldi	r30, 0x04	; 4
    3064:	22 0f       	add	r18, r18
    3066:	33 1f       	adc	r19, r19
    3068:	44 1f       	adc	r20, r20
    306a:	55 1f       	adc	r21, r21
    306c:	ea 95       	dec	r30
    306e:	d1 f7       	brne	.-12     	; 0x3064 <__uartHWSetBaudRate+0x64>
    3070:	0e 94 c8 1f 	call	0x3f90	; 0x3f90 <__udivmodsi4>
    3074:	69 01       	movw	r12, r18
    3076:	08 94       	sec
    3078:	c1 08       	sbc	r12, r1
    307a:	d1 08       	sbc	r13, r1
    307c:	98 a9       	ldd	r25, Y+48	; 0x30
    307e:	99 23       	and	r25, r25
    3080:	c9 f1       	breq	.+114    	; 0x30f4 <__uartHWSetBaudRate+0xf4>
    3082:	ec a1       	ldd	r30, Y+36	; 0x24
    3084:	fd a1       	ldd	r31, Y+37	; 0x25
    3086:	80 81       	ld	r24, Z
    3088:	90 95       	com	r25
    308a:	89 23       	and	r24, r25
    308c:	80 83       	st	Z, r24
    308e:	8f ef       	ldi	r24, 0xFF	; 255
    3090:	e8 16       	cp	r14, r24
    3092:	8f ef       	ldi	r24, 0xFF	; 255
    3094:	f8 06       	cpc	r15, r24
    3096:	8f ef       	ldi	r24, 0xFF	; 255
    3098:	08 07       	cpc	r16, r24
    309a:	8f ef       	ldi	r24, 0xFF	; 255
    309c:	18 07       	cpc	r17, r24
    309e:	19 f4       	brne	.+6      	; 0x30a6 <__uartHWSetBaudRate+0xa6>
    30a0:	21 e0       	ldi	r18, 0x01	; 1
    30a2:	30 e0       	ldi	r19, 0x00	; 0
    30a4:	1d c0       	rjmp	.+58     	; 0x30e0 <__uartHWSetBaudRate+0xe0>
    30a6:	32 e0       	ldi	r19, 0x02	; 2
    30a8:	ee 0c       	add	r14, r14
    30aa:	ff 1c       	adc	r15, r15
    30ac:	00 1f       	adc	r16, r16
    30ae:	11 1f       	adc	r17, r17
    30b0:	3a 95       	dec	r19
    30b2:	d1 f7       	brne	.-12     	; 0x30a8 <__uartHWSetBaudRate+0xa8>
    30b4:	60 91 2d 02 	lds	r22, 0x022D
    30b8:	70 91 2e 02 	lds	r23, 0x022E
    30bc:	80 91 2f 02 	lds	r24, 0x022F
    30c0:	90 91 30 02 	lds	r25, 0x0230
    30c4:	6e 0d       	add	r22, r14
    30c6:	7f 1d       	adc	r23, r15
    30c8:	80 1f       	adc	r24, r16
    30ca:	91 1f       	adc	r25, r17
    30cc:	ee 0c       	add	r14, r14
    30ce:	ff 1c       	adc	r15, r15
    30d0:	00 1f       	adc	r16, r16
    30d2:	11 1f       	adc	r17, r17
    30d4:	a8 01       	movw	r20, r16
    30d6:	97 01       	movw	r18, r14
    30d8:	0e 94 c8 1f 	call	0x3f90	; 0x3f90 <__udivmodsi4>
    30dc:	21 50       	subi	r18, 0x01	; 1
    30de:	30 40       	sbci	r19, 0x00	; 0
    30e0:	2c 15       	cp	r18, r12
    30e2:	3d 05       	cpc	r19, r13
    30e4:	38 f0       	brcs	.+14     	; 0x30f4 <__uartHWSetBaudRate+0xf4>
    30e6:	ec a1       	ldd	r30, Y+36	; 0x24
    30e8:	fd a1       	ldd	r31, Y+37	; 0x25
    30ea:	80 81       	ld	r24, Z
    30ec:	98 a9       	ldd	r25, Y+48	; 0x30
    30ee:	89 2b       	or	r24, r25
    30f0:	80 83       	st	Z, r24
    30f2:	69 01       	movw	r12, r18
    30f4:	e8 a5       	ldd	r30, Y+40	; 0x28
    30f6:	f9 a5       	ldd	r31, Y+41	; 0x29
    30f8:	c0 82       	st	Z, r12
    30fa:	ea a5       	ldd	r30, Y+42	; 0x2a
    30fc:	fb a5       	ldd	r31, Y+43	; 0x2b
    30fe:	d0 82       	st	Z, r13
    3100:	bf be       	out	0x3f, r11	; 63
    3102:	df 91       	pop	r29
    3104:	cf 91       	pop	r28
    3106:	1f 91       	pop	r17
    3108:	0f 91       	pop	r16
    310a:	ff 90       	pop	r15
    310c:	ef 90       	pop	r14
    310e:	df 90       	pop	r13
    3110:	cf 90       	pop	r12
    3112:	bf 90       	pop	r11
    3114:	08 95       	ret

00003116 <__uartHWOff>:
    3116:	dc 01       	movw	r26, r24
    3118:	96 96       	adiw	r26, 0x26	; 38
    311a:	ed 91       	ld	r30, X+
    311c:	fc 91       	ld	r31, X
    311e:	97 97       	sbiw	r26, 0x27	; 39
    3120:	80 81       	ld	r24, Z
    3122:	87 72       	andi	r24, 0x27	; 39
    3124:	80 83       	st	Z, r24
    3126:	d0 96       	adiw	r26, 0x30	; 48
    3128:	9c 91       	ld	r25, X
    312a:	d0 97       	sbiw	r26, 0x30	; 48
    312c:	99 23       	and	r25, r25
    312e:	41 f0       	breq	.+16     	; 0x3140 <__uartHWOff+0x2a>
    3130:	94 96       	adiw	r26, 0x24	; 36
    3132:	ed 91       	ld	r30, X+
    3134:	fc 91       	ld	r31, X
    3136:	95 97       	sbiw	r26, 0x25	; 37
    3138:	80 81       	ld	r24, Z
    313a:	90 95       	com	r25
    313c:	89 23       	and	r24, r25
    313e:	80 83       	st	Z, r24
    3140:	08 95       	ret

00003142 <oneWireReceiveMode>:
    3142:	dc 01       	movw	r26, r24
    3144:	57 96       	adiw	r26, 0x17	; 23
    3146:	8c 91       	ld	r24, X
    3148:	57 97       	sbiw	r26, 0x17	; 23
    314a:	88 23       	and	r24, r24
    314c:	71 f0       	breq	.+28     	; 0x316a <oneWireReceiveMode+0x28>
    314e:	96 96       	adiw	r26, 0x26	; 38
    3150:	ed 91       	ld	r30, X+
    3152:	fc 91       	ld	r31, X
    3154:	97 97       	sbiw	r26, 0x27	; 39
    3156:	80 81       	ld	r24, Z
    3158:	87 7b       	andi	r24, 0xB7	; 183
    315a:	80 83       	st	Z, r24
    315c:	96 96       	adiw	r26, 0x26	; 38
    315e:	ed 91       	ld	r30, X+
    3160:	fc 91       	ld	r31, X
    3162:	97 97       	sbiw	r26, 0x27	; 39
    3164:	80 81       	ld	r24, Z
    3166:	80 69       	ori	r24, 0x90	; 144
    3168:	80 83       	st	Z, r24
    316a:	08 95       	ret

0000316c <__uartHWStartXmit>:
    316c:	dc 01       	movw	r26, r24
    316e:	9c 96       	adiw	r26, 0x2c	; 44
    3170:	ed 91       	ld	r30, X+
    3172:	fc 91       	ld	r31, X
    3174:	9d 97       	sbiw	r26, 0x2d	; 45
    3176:	60 83       	st	Z, r22
    3178:	08 95       	ret

0000317a <startXmitMode>:
    317a:	dc 01       	movw	r26, r24
    317c:	57 96       	adiw	r26, 0x17	; 23
    317e:	8c 91       	ld	r24, X
    3180:	57 97       	sbiw	r26, 0x17	; 23
    3182:	88 23       	and	r24, r24
    3184:	71 f0       	breq	.+28     	; 0x31a2 <startXmitMode+0x28>
    3186:	96 96       	adiw	r26, 0x26	; 38
    3188:	ed 91       	ld	r30, X+
    318a:	fc 91       	ld	r31, X
    318c:	97 97       	sbiw	r26, 0x27	; 39
    318e:	80 81       	ld	r24, Z
    3190:	8f 76       	andi	r24, 0x6F	; 111
    3192:	80 83       	st	Z, r24
    3194:	96 96       	adiw	r26, 0x26	; 38
    3196:	ed 91       	ld	r30, X+
    3198:	fc 91       	ld	r31, X
    319a:	97 97       	sbiw	r26, 0x27	; 39
    319c:	80 81       	ld	r24, Z
    319e:	88 64       	ori	r24, 0x48	; 72
    31a0:	80 83       	st	Z, r24
    31a2:	08 95       	ret

000031a4 <__uartHWInit>:
    31a4:	cf 93       	push	r28
    31a6:	df 93       	push	r29
    31a8:	ec 01       	movw	r28, r24
    31aa:	0e 94 ae 17 	call	0x2f5c	; 0x2f5c <_uartSetBaudRate>
    31ae:	8f 89       	ldd	r24, Y+23	; 0x17
    31b0:	88 23       	and	r24, r24
    31b2:	11 f0       	breq	.+4      	; 0x31b8 <__uartHWInit+0x14>
    31b4:	20 e9       	ldi	r18, 0x90	; 144
    31b6:	0c c0       	rjmp	.+24     	; 0x31d0 <__uartHWInit+0x2c>
    31b8:	8d 85       	ldd	r24, Y+13	; 0x0d
    31ba:	9e 85       	ldd	r25, Y+14	; 0x0e
    31bc:	89 2b       	or	r24, r25
    31be:	11 f0       	breq	.+4      	; 0x31c4 <__uartHWInit+0x20>
    31c0:	20 e9       	ldi	r18, 0x90	; 144
    31c2:	01 c0       	rjmp	.+2      	; 0x31c6 <__uartHWInit+0x22>
    31c4:	20 e0       	ldi	r18, 0x00	; 0
    31c6:	8f 85       	ldd	r24, Y+15	; 0x0f
    31c8:	98 89       	ldd	r25, Y+16	; 0x10
    31ca:	89 2b       	or	r24, r25
    31cc:	09 f0       	breq	.+2      	; 0x31d0 <__uartHWInit+0x2c>
    31ce:	28 64       	ori	r18, 0x48	; 72
    31d0:	ee a1       	ldd	r30, Y+38	; 0x26
    31d2:	ff a1       	ldd	r31, Y+39	; 0x27
    31d4:	20 83       	st	Z, r18
    31d6:	df 91       	pop	r29
    31d8:	cf 91       	pop	r28
    31da:	08 95       	ret

000031dc <__uartReceiveService>:
    31dc:	dc 01       	movw	r26, r24
    31de:	26 2f       	mov	r18, r22
    31e0:	14 96       	adiw	r26, 0x04	; 4
    31e2:	8d 91       	ld	r24, X+
    31e4:	9c 91       	ld	r25, X
    31e6:	15 97       	sbiw	r26, 0x05	; 5
    31e8:	89 2b       	or	r24, r25
    31ea:	59 f0       	breq	.+22     	; 0x3202 <__uartReceiveService+0x26>
    31ec:	14 96       	adiw	r26, 0x04	; 4
    31ee:	ed 91       	ld	r30, X+
    31f0:	fc 91       	ld	r31, X
    31f2:	15 97       	sbiw	r26, 0x05	; 5
    31f4:	16 96       	adiw	r26, 0x06	; 6
    31f6:	6d 91       	ld	r22, X+
    31f8:	7c 91       	ld	r23, X
    31fa:	17 97       	sbiw	r26, 0x07	; 7
    31fc:	82 2f       	mov	r24, r18
    31fe:	09 95       	icall
    3200:	08 95       	ret
    3202:	90 96       	adiw	r26, 0x20	; 32
    3204:	ed 91       	ld	r30, X+
    3206:	fc 91       	ld	r31, X
    3208:	91 97       	sbiw	r26, 0x21	; 33
    320a:	cd 01       	movw	r24, r26
    320c:	09 95       	icall
    320e:	08 95       	ret

00003210 <__uartGetByte>:
    3210:	fc 01       	movw	r30, r24
    3212:	22 a1       	ldd	r18, Z+34	; 0x22
    3214:	33 a1       	ldd	r19, Z+35	; 0x23
    3216:	f9 01       	movw	r30, r18
    3218:	09 95       	icall
    321a:	08 95       	ret

0000321c <__uartGetByteUnbuffered>:
    321c:	fc 01       	movw	r30, r24
    321e:	4f b7       	in	r20, 0x3f	; 63
    3220:	f8 94       	cli
    3222:	23 85       	ldd	r18, Z+11	; 0x0b
    3224:	34 85       	ldd	r19, Z+12	; 0x0c
    3226:	8f ef       	ldi	r24, 0xFF	; 255
    3228:	9f ef       	ldi	r25, 0xFF	; 255
    322a:	94 87       	std	Z+12, r25	; 0x0c
    322c:	83 87       	std	Z+11, r24	; 0x0b
    322e:	4f bf       	out	0x3f, r20	; 63
    3230:	c9 01       	movw	r24, r18
    3232:	08 95       	ret

00003234 <__uartReceiveUnbuffered>:
    3234:	fc 01       	movw	r30, r24
    3236:	83 85       	ldd	r24, Z+11	; 0x0b
    3238:	94 85       	ldd	r25, Z+12	; 0x0c
    323a:	8f 5f       	subi	r24, 0xFF	; 255
    323c:	9f 4f       	sbci	r25, 0xFF	; 255
    323e:	29 f4       	brne	.+10     	; 0x324a <__uartReceiveUnbuffered+0x16>
    3240:	86 2f       	mov	r24, r22
    3242:	90 e0       	ldi	r25, 0x00	; 0
    3244:	94 87       	std	Z+12, r25	; 0x0c
    3246:	83 87       	std	Z+11, r24	; 0x0b
    3248:	08 95       	ret
    324a:	80 85       	ldd	r24, Z+8	; 0x08
    324c:	84 60       	ori	r24, 0x04	; 4
    324e:	80 87       	std	Z+8, r24	; 0x08
    3250:	85 ef       	ldi	r24, 0xF5	; 245
    3252:	0e 94 9d 13 	call	0x273a	; 0x273a <setError>
    3256:	08 95       	ret

00003258 <_uartStartXmit>:
    3258:	dc 01       	movw	r26, r24
    325a:	19 96       	adiw	r26, 0x09	; 9
    325c:	8d 91       	ld	r24, X+
    325e:	9c 91       	ld	r25, X
    3260:	1a 97       	sbiw	r26, 0x0a	; 10
    3262:	02 96       	adiw	r24, 0x02	; 2
    3264:	fc 01       	movw	r30, r24
    3266:	25 91       	lpm	r18, Z+
    3268:	34 91       	lpm	r19, Z+
    326a:	cd 01       	movw	r24, r26
    326c:	f9 01       	movw	r30, r18
    326e:	09 95       	icall
    3270:	08 95       	ret

00003272 <_uartTransmitBlockStart>:
    3272:	cf 93       	push	r28
    3274:	df 93       	push	r29
    3276:	ec 01       	movw	r28, r24
    3278:	88 85       	ldd	r24, Y+8	; 0x08
    327a:	8e 7f       	andi	r24, 0xFE	; 254
    327c:	88 87       	std	Y+8, r24	; 0x08
    327e:	e8 8d       	ldd	r30, Y+24	; 0x18
    3280:	f9 8d       	ldd	r31, Y+25	; 0x19
    3282:	30 97       	sbiw	r30, 0x00	; 0
    3284:	21 f0       	breq	.+8      	; 0x328e <_uartTransmitBlockStart+0x1c>
    3286:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3288:	9b 8d       	ldd	r25, Y+27	; 0x1b
    328a:	6f ef       	ldi	r22, 0xFF	; 255
    328c:	09 95       	icall
    328e:	e9 85       	ldd	r30, Y+9	; 0x09
    3290:	fa 85       	ldd	r31, Y+10	; 0x0a
    3292:	38 96       	adiw	r30, 0x08	; 8
    3294:	25 91       	lpm	r18, Z+
    3296:	34 91       	lpm	r19, Z+
    3298:	21 15       	cp	r18, r1
    329a:	31 05       	cpc	r19, r1
    329c:	19 f0       	breq	.+6      	; 0x32a4 <_uartTransmitBlockStart+0x32>
    329e:	ce 01       	movw	r24, r28
    32a0:	f9 01       	movw	r30, r18
    32a2:	09 95       	icall
    32a4:	df 91       	pop	r29
    32a6:	cf 91       	pop	r28
    32a8:	08 95       	ret

000032aa <_uartTransmitBlockEnd>:
    32aa:	cf 93       	push	r28
    32ac:	df 93       	push	r29
    32ae:	ec 01       	movw	r28, r24
    32b0:	88 85       	ldd	r24, Y+8	; 0x08
    32b2:	81 60       	ori	r24, 0x01	; 1
    32b4:	88 87       	std	Y+8, r24	; 0x08
    32b6:	e9 85       	ldd	r30, Y+9	; 0x09
    32b8:	fa 85       	ldd	r31, Y+10	; 0x0a
    32ba:	3a 96       	adiw	r30, 0x0a	; 10
    32bc:	25 91       	lpm	r18, Z+
    32be:	34 91       	lpm	r19, Z+
    32c0:	21 15       	cp	r18, r1
    32c2:	31 05       	cpc	r19, r1
    32c4:	19 f0       	breq	.+6      	; 0x32cc <_uartTransmitBlockEnd+0x22>
    32c6:	ce 01       	movw	r24, r28
    32c8:	f9 01       	movw	r30, r18
    32ca:	09 95       	icall
    32cc:	e8 8d       	ldd	r30, Y+24	; 0x18
    32ce:	f9 8d       	ldd	r31, Y+25	; 0x19
    32d0:	30 97       	sbiw	r30, 0x00	; 0
    32d2:	21 f0       	breq	.+8      	; 0x32dc <_uartTransmitBlockEnd+0x32>
    32d4:	8a 8d       	ldd	r24, Y+26	; 0x1a
    32d6:	9b 8d       	ldd	r25, Y+27	; 0x1b
    32d8:	60 e0       	ldi	r22, 0x00	; 0
    32da:	09 95       	icall
    32dc:	df 91       	pop	r29
    32de:	cf 91       	pop	r28
    32e0:	08 95       	ret

000032e2 <_uartSendBuffer>:
    32e2:	ef 92       	push	r14
    32e4:	ff 92       	push	r15
    32e6:	0f 93       	push	r16
    32e8:	1f 93       	push	r17
    32ea:	cf 93       	push	r28
    32ec:	df 93       	push	r29
    32ee:	8c 01       	movw	r16, r24
    32f0:	7b 01       	movw	r14, r22
    32f2:	ea 01       	movw	r28, r20
    32f4:	0b c0       	rjmp	.+22     	; 0x330c <_uartSendBuffer+0x2a>
    32f6:	d7 01       	movw	r26, r14
    32f8:	6d 91       	ld	r22, X+
    32fa:	7d 01       	movw	r14, r26
    32fc:	d8 01       	movw	r26, r16
    32fe:	5c 96       	adiw	r26, 0x1c	; 28
    3300:	ed 91       	ld	r30, X+
    3302:	fc 91       	ld	r31, X
    3304:	5d 97       	sbiw	r26, 0x1d	; 29
    3306:	c8 01       	movw	r24, r16
    3308:	09 95       	icall
    330a:	21 97       	sbiw	r28, 0x01	; 1
    330c:	20 97       	sbiw	r28, 0x00	; 0
    330e:	99 f7       	brne	.-26     	; 0x32f6 <_uartSendBuffer+0x14>
    3310:	df 91       	pop	r29
    3312:	cf 91       	pop	r28
    3314:	1f 91       	pop	r17
    3316:	0f 91       	pop	r16
    3318:	ff 90       	pop	r15
    331a:	ef 90       	pop	r14
    331c:	08 95       	ret

0000331e <_uartSendByte>:
    331e:	1f 93       	push	r17
    3320:	fc 01       	movw	r30, r24
    3322:	16 2f       	mov	r17, r22
    3324:	24 8d       	ldd	r18, Z+28	; 0x1c
    3326:	35 8d       	ldd	r19, Z+29	; 0x1d
    3328:	f9 01       	movw	r30, r18
    332a:	09 95       	icall
    332c:	81 2f       	mov	r24, r17
    332e:	1f 91       	pop	r17
    3330:	08 95       	ret

00003332 <__uartTransmitService>:
    3332:	fc 01       	movw	r30, r24
    3334:	26 8d       	ldd	r18, Z+30	; 0x1e
    3336:	37 8d       	ldd	r19, Z+31	; 0x1f
    3338:	f9 01       	movw	r30, r18
    333a:	09 95       	icall
    333c:	08 95       	ret

0000333e <__uartSendNextUnbuffered>:
    333e:	1f 93       	push	r17
    3340:	1f b7       	in	r17, 0x3f	; 63
    3342:	f8 94       	cli
    3344:	0e 94 55 19 	call	0x32aa	; 0x32aa <_uartTransmitBlockEnd>
    3348:	1f bf       	out	0x3f, r17	; 63
    334a:	1f 91       	pop	r17
    334c:	08 95       	ret

0000334e <__uartSendUnbuffered>:
    334e:	0f 93       	push	r16
    3350:	1f 93       	push	r17
    3352:	cf 93       	push	r28
    3354:	df 93       	push	r29
    3356:	06 2f       	mov	r16, r22
    3358:	ec 01       	movw	r28, r24
    335a:	02 c0       	rjmp	.+4      	; 0x3360 <__uartSendUnbuffered+0x12>
    335c:	0e 94 4a 1a 	call	0x3494	; 0x3494 <breathe>
    3360:	88 85       	ldd	r24, Y+8	; 0x08
    3362:	80 ff       	sbrs	r24, 0
    3364:	fb cf       	rjmp	.-10     	; 0x335c <__uartSendUnbuffered+0xe>
    3366:	1f b7       	in	r17, 0x3f	; 63
    3368:	f8 94       	cli
    336a:	ce 01       	movw	r24, r28
    336c:	0e 94 39 19 	call	0x3272	; 0x3272 <_uartTransmitBlockStart>
    3370:	ce 01       	movw	r24, r28
    3372:	60 2f       	mov	r22, r16
    3374:	0e 94 2c 19 	call	0x3258	; 0x3258 <_uartStartXmit>
    3378:	1f bf       	out	0x3f, r17	; 63
    337a:	df 91       	pop	r29
    337c:	cf 91       	pop	r28
    337e:	1f 91       	pop	r17
    3380:	0f 91       	pop	r16
    3382:	08 95       	ret

00003384 <uartReceivePollingMode>:
    3384:	dc 01       	movw	r26, r24
    3386:	96 96       	adiw	r26, 0x26	; 38
    3388:	ed 91       	ld	r30, X+
    338a:	fc 91       	ld	r31, X
    338c:	97 97       	sbiw	r26, 0x27	; 39
    338e:	66 23       	and	r22, r22
    3390:	19 f0       	breq	.+6      	; 0x3398 <uartReceivePollingMode+0x14>
    3392:	80 81       	ld	r24, Z
    3394:	8f 77       	andi	r24, 0x7F	; 127
    3396:	02 c0       	rjmp	.+4      	; 0x339c <uartReceivePollingMode+0x18>
    3398:	80 81       	ld	r24, Z
    339a:	80 68       	ori	r24, 0x80	; 128
    339c:	80 83       	st	Z, r24
    339e:	08 95       	ret

000033a0 <uartPollByte>:
    33a0:	dc 01       	movw	r26, r24
    33a2:	94 96       	adiw	r26, 0x24	; 36
    33a4:	ed 91       	ld	r30, X+
    33a6:	fc 91       	ld	r31, X
    33a8:	95 97       	sbiw	r26, 0x25	; 37
    33aa:	80 81       	ld	r24, Z
    33ac:	87 fd       	sbrc	r24, 7
    33ae:	03 c0       	rjmp	.+6      	; 0x33b6 <uartPollByte+0x16>
    33b0:	2f ef       	ldi	r18, 0xFF	; 255
    33b2:	3f ef       	ldi	r19, 0xFF	; 255
    33b4:	07 c0       	rjmp	.+14     	; 0x33c4 <uartPollByte+0x24>
    33b6:	9c 96       	adiw	r26, 0x2c	; 44
    33b8:	ed 91       	ld	r30, X+
    33ba:	fc 91       	ld	r31, X
    33bc:	9d 97       	sbiw	r26, 0x2d	; 45
    33be:	80 81       	ld	r24, Z
    33c0:	28 2f       	mov	r18, r24
    33c2:	30 e0       	ldi	r19, 0x00	; 0
    33c4:	c9 01       	movw	r24, r18
    33c6:	08 95       	ret

000033c8 <_ZN6Stream5printEc>:
    33c8:	1f 93       	push	r17
    33ca:	cf 93       	push	r28
    33cc:	df 93       	push	r29
    33ce:	ec 01       	movw	r28, r24
    33d0:	16 2f       	mov	r17, r22
    33d2:	6a 30       	cpi	r22, 0x0A	; 10
    33d4:	39 f4       	brne	.+14     	; 0x33e4 <_ZN6Stream5printEc+0x1c>
    33d6:	e8 81       	ld	r30, Y
    33d8:	f9 81       	ldd	r31, Y+1	; 0x01
    33da:	01 90       	ld	r0, Z+
    33dc:	f0 81       	ld	r31, Z
    33de:	e0 2d       	mov	r30, r0
    33e0:	6d e0       	ldi	r22, 0x0D	; 13
    33e2:	09 95       	icall
    33e4:	e8 81       	ld	r30, Y
    33e6:	f9 81       	ldd	r31, Y+1	; 0x01
    33e8:	01 90       	ld	r0, Z+
    33ea:	f0 81       	ld	r31, Z
    33ec:	e0 2d       	mov	r30, r0
    33ee:	ce 01       	movw	r24, r28
    33f0:	61 2f       	mov	r22, r17
    33f2:	09 95       	icall
    33f4:	ce 01       	movw	r24, r28
    33f6:	df 91       	pop	r29
    33f8:	cf 91       	pop	r28
    33fa:	1f 91       	pop	r17
    33fc:	08 95       	ret

000033fe <clockHasElapsed>:
    33fe:	0f 93       	push	r16
    3400:	1f 93       	push	r17
    3402:	00 e0       	ldi	r16, 0x00	; 0
    3404:	10 e0       	ldi	r17, 0x00	; 0
    3406:	0e 94 08 1a 	call	0x3410	; 0x3410 <clockHasElapsedGetOverflow>
    340a:	1f 91       	pop	r17
    340c:	0f 91       	pop	r16
    340e:	08 95       	ret

00003410 <clockHasElapsedGetOverflow>:
    3410:	8f 92       	push	r8
    3412:	9f 92       	push	r9
    3414:	af 92       	push	r10
    3416:	bf 92       	push	r11
    3418:	cf 92       	push	r12
    341a:	df 92       	push	r13
    341c:	ef 92       	push	r14
    341e:	ff 92       	push	r15
    3420:	0f 93       	push	r16
    3422:	1f 93       	push	r17
    3424:	cf 93       	push	r28
    3426:	df 93       	push	r29
    3428:	6b 01       	movw	r12, r22
    342a:	7c 01       	movw	r14, r24
    342c:	49 01       	movw	r8, r18
    342e:	5a 01       	movw	r10, r20
    3430:	e8 01       	movw	r28, r16
    3432:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <clockGetus>
    3436:	6c 19       	sub	r22, r12
    3438:	7d 09       	sbc	r23, r13
    343a:	8e 09       	sbc	r24, r14
    343c:	9f 09       	sbc	r25, r15
    343e:	68 15       	cp	r22, r8
    3440:	79 05       	cpc	r23, r9
    3442:	8a 05       	cpc	r24, r10
    3444:	9b 05       	cpc	r25, r11
    3446:	68 f0       	brcs	.+26     	; 0x3462 <clockHasElapsedGetOverflow+0x52>
    3448:	01 15       	cp	r16, r1
    344a:	11 05       	cpc	r17, r1
    344c:	41 f0       	breq	.+16     	; 0x345e <clockHasElapsedGetOverflow+0x4e>
    344e:	68 19       	sub	r22, r8
    3450:	79 09       	sbc	r23, r9
    3452:	8a 09       	sbc	r24, r10
    3454:	9b 09       	sbc	r25, r11
    3456:	68 83       	st	Y, r22
    3458:	79 83       	std	Y+1, r23	; 0x01
    345a:	8a 83       	std	Y+2, r24	; 0x02
    345c:	9b 83       	std	Y+3, r25	; 0x03
    345e:	8f ef       	ldi	r24, 0xFF	; 255
    3460:	0c c0       	rjmp	.+24     	; 0x347a <clockHasElapsedGetOverflow+0x6a>
    3462:	01 15       	cp	r16, r1
    3464:	11 05       	cpc	r17, r1
    3466:	41 f0       	breq	.+16     	; 0x3478 <clockHasElapsedGetOverflow+0x68>
    3468:	86 1a       	sub	r8, r22
    346a:	97 0a       	sbc	r9, r23
    346c:	a8 0a       	sbc	r10, r24
    346e:	b9 0a       	sbc	r11, r25
    3470:	88 82       	st	Y, r8
    3472:	99 82       	std	Y+1, r9	; 0x01
    3474:	aa 82       	std	Y+2, r10	; 0x02
    3476:	bb 82       	std	Y+3, r11	; 0x03
    3478:	80 e0       	ldi	r24, 0x00	; 0
    347a:	df 91       	pop	r29
    347c:	cf 91       	pop	r28
    347e:	1f 91       	pop	r17
    3480:	0f 91       	pop	r16
    3482:	ff 90       	pop	r15
    3484:	ef 90       	pop	r14
    3486:	df 90       	pop	r13
    3488:	cf 90       	pop	r12
    348a:	bf 90       	pop	r11
    348c:	af 90       	pop	r10
    348e:	9f 90       	pop	r9
    3490:	8f 90       	pop	r8
    3492:	08 95       	ret

00003494 <breathe>:
    3494:	8f b7       	in	r24, 0x3f	; 63
    3496:	78 94       	sei
	...
    34a4:	00 00       	nop
    34a6:	8f bf       	out	0x3f, r24	; 63
    34a8:	08 95       	ret

000034aa <pin_low>:
    34aa:	cf 93       	push	r28
    34ac:	df 93       	push	r29
    34ae:	9c 01       	movw	r18, r24
    34b0:	00 97       	sbiw	r24, 0x00	; 0
    34b2:	e9 f0       	breq	.+58     	; 0x34ee <pin_low+0x44>
    34b4:	fc 01       	movw	r30, r24
    34b6:	85 91       	lpm	r24, Z+
    34b8:	94 91       	lpm	r25, Z+
    34ba:	fc 01       	movw	r30, r24
    34bc:	a5 91       	lpm	r26, Z+
    34be:	b4 91       	lpm	r27, Z+
    34c0:	02 96       	adiw	r24, 0x02	; 2
    34c2:	fc 01       	movw	r30, r24
    34c4:	c5 91       	lpm	r28, Z+
    34c6:	d4 91       	lpm	r29, Z+
    34c8:	2e 5f       	subi	r18, 0xFE	; 254
    34ca:	3f 4f       	sbci	r19, 0xFF	; 255
    34cc:	f9 01       	movw	r30, r18
    34ce:	24 91       	lpm	r18, Z+
    34d0:	88 81       	ld	r24, Y
    34d2:	82 23       	and	r24, r18
    34d4:	49 f0       	breq	.+18     	; 0x34e8 <pin_low+0x3e>
    34d6:	9f b7       	in	r25, 0x3f	; 63
    34d8:	f8 94       	cli
    34da:	8c 91       	ld	r24, X
    34dc:	20 95       	com	r18
    34de:	82 23       	and	r24, r18
    34e0:	8c 93       	st	X, r24
    34e2:	9f bf       	out	0x3f, r25	; 63
    34e4:	00 00       	nop
    34e6:	03 c0       	rjmp	.+6      	; 0x34ee <pin_low+0x44>
    34e8:	87 ef       	ldi	r24, 0xF7	; 247
    34ea:	0e 94 9d 13 	call	0x273a	; 0x273a <setError>
    34ee:	df 91       	pop	r29
    34f0:	cf 91       	pop	r28
    34f2:	08 95       	ret

000034f4 <pin_high>:
    34f4:	cf 93       	push	r28
    34f6:	df 93       	push	r29
    34f8:	9c 01       	movw	r18, r24
    34fa:	00 97       	sbiw	r24, 0x00	; 0
    34fc:	e1 f0       	breq	.+56     	; 0x3536 <pin_high+0x42>
    34fe:	fc 01       	movw	r30, r24
    3500:	85 91       	lpm	r24, Z+
    3502:	94 91       	lpm	r25, Z+
    3504:	fc 01       	movw	r30, r24
    3506:	a5 91       	lpm	r26, Z+
    3508:	b4 91       	lpm	r27, Z+
    350a:	02 96       	adiw	r24, 0x02	; 2
    350c:	fc 01       	movw	r30, r24
    350e:	c5 91       	lpm	r28, Z+
    3510:	d4 91       	lpm	r29, Z+
    3512:	2e 5f       	subi	r18, 0xFE	; 254
    3514:	3f 4f       	sbci	r19, 0xFF	; 255
    3516:	f9 01       	movw	r30, r18
    3518:	24 91       	lpm	r18, Z+
    351a:	88 81       	ld	r24, Y
    351c:	82 23       	and	r24, r18
    351e:	41 f0       	breq	.+16     	; 0x3530 <pin_high+0x3c>
    3520:	9f b7       	in	r25, 0x3f	; 63
    3522:	f8 94       	cli
    3524:	8c 91       	ld	r24, X
    3526:	82 2b       	or	r24, r18
    3528:	8c 93       	st	X, r24
    352a:	9f bf       	out	0x3f, r25	; 63
    352c:	00 00       	nop
    352e:	03 c0       	rjmp	.+6      	; 0x3536 <pin_high+0x42>
    3530:	87 ef       	ldi	r24, 0xF7	; 247
    3532:	0e 94 9d 13 	call	0x273a	; 0x273a <setError>
    3536:	df 91       	pop	r29
    3538:	cf 91       	pop	r28
    353a:	08 95       	ret

0000353c <pin_set>:
    353c:	66 23       	and	r22, r22
    353e:	19 f0       	breq	.+6      	; 0x3546 <pin_set+0xa>
    3540:	0e 94 7a 1a 	call	0x34f4	; 0x34f4 <pin_high>
    3544:	08 95       	ret
    3546:	0e 94 55 1a 	call	0x34aa	; 0x34aa <pin_low>
    354a:	08 95       	ret

0000354c <__scheduleUpdate>:
    354c:	2f 92       	push	r2
    354e:	3f 92       	push	r3
    3550:	4f 92       	push	r4
    3552:	5f 92       	push	r5
    3554:	6f 92       	push	r6
    3556:	7f 92       	push	r7
    3558:	8f 92       	push	r8
    355a:	9f 92       	push	r9
    355c:	af 92       	push	r10
    355e:	bf 92       	push	r11
    3560:	cf 92       	push	r12
    3562:	df 92       	push	r13
    3564:	ef 92       	push	r14
    3566:	ff 92       	push	r15
    3568:	0f 93       	push	r16
    356a:	1f 93       	push	r17
    356c:	df 93       	push	r29
    356e:	cf 93       	push	r28
    3570:	cd b7       	in	r28, 0x3d	; 61
    3572:	de b7       	in	r29, 0x3e	; 62
    3574:	27 97       	sbiw	r28, 0x07	; 7
    3576:	0f b6       	in	r0, 0x3f	; 63
    3578:	f8 94       	cli
    357a:	de bf       	out	0x3e, r29	; 62
    357c:	0f be       	out	0x3f, r0	; 63
    357e:	cd bf       	out	0x3d, r28	; 61
    3580:	80 91 73 00 	lds	r24, 0x0073
    3584:	8b 7f       	andi	r24, 0xFB	; 251
    3586:	80 93 73 00 	sts	0x0073, r24
    358a:	2f b7       	in	r18, 0x3f	; 63
    358c:	2f 83       	std	Y+7, r18	; 0x07
    358e:	78 94       	sei
    3590:	8f ef       	ldi	r24, 0xFF	; 255
    3592:	80 93 4e 04 	sts	0x044E, r24
    3596:	10 92 4f 04 	sts	0x044F, r1
    359a:	80 91 14 03 	lds	r24, 0x0314
    359e:	a8 2f       	mov	r26, r24
    35a0:	b0 e0       	ldi	r27, 0x00	; 0
    35a2:	11 97       	sbiw	r26, 0x01	; 1
    35a4:	be 83       	std	Y+6, r27	; 0x06
    35a6:	ad 83       	std	Y+5, r26	; 0x05
    35a8:	ed e0       	ldi	r30, 0x0D	; 13
    35aa:	f0 e0       	ldi	r31, 0x00	; 0
    35ac:	ae 9f       	mul	r26, r30
    35ae:	50 01       	movw	r10, r0
    35b0:	af 9f       	mul	r26, r31
    35b2:	b0 0c       	add	r11, r0
    35b4:	be 9f       	mul	r27, r30
    35b6:	b0 0c       	add	r11, r0
    35b8:	11 24       	eor	r1, r1
    35ba:	21 e4       	ldi	r18, 0x41	; 65
    35bc:	34 e0       	ldi	r19, 0x04	; 4
    35be:	a2 0e       	add	r10, r18
    35c0:	b3 1e       	adc	r11, r19
    35c2:	66 24       	eor	r6, r6
    35c4:	77 24       	eor	r7, r7
    35c6:	43 01       	movw	r8, r6
    35c8:	5a c0       	rjmp	.+180    	; 0x367e <__scheduleUpdate+0x132>
    35ca:	d5 01       	movw	r26, r10
    35cc:	8c 91       	ld	r24, X
    35ce:	88 23       	and	r24, r24
    35d0:	09 f4       	brne	.+2      	; 0x35d4 <__scheduleUpdate+0x88>
    35d2:	4c c0       	rjmp	.+152    	; 0x366c <__scheduleUpdate+0x120>
    35d4:	19 96       	adiw	r26, 0x09	; 9
    35d6:	2d 90       	ld	r2, X+
    35d8:	3d 90       	ld	r3, X+
    35da:	4d 90       	ld	r4, X+
    35dc:	5c 90       	ld	r5, X
    35de:	1c 97       	sbiw	r26, 0x0c	; 12
    35e0:	15 96       	adiw	r26, 0x05	; 5
    35e2:	cd 90       	ld	r12, X+
    35e4:	dd 90       	ld	r13, X+
    35e6:	ed 90       	ld	r14, X+
    35e8:	fc 90       	ld	r15, X
    35ea:	18 97       	sbiw	r26, 0x08	; 8
    35ec:	c2 01       	movw	r24, r4
    35ee:	b1 01       	movw	r22, r2
    35f0:	a7 01       	movw	r20, r14
    35f2:	96 01       	movw	r18, r12
    35f4:	8e 01       	movw	r16, r28
    35f6:	0f 5f       	subi	r16, 0xFF	; 255
    35f8:	1f 4f       	sbci	r17, 0xFF	; 255
    35fa:	0e 94 08 1a 	call	0x3410	; 0x3410 <clockHasElapsedGetOverflow>
    35fe:	88 23       	and	r24, r24
    3600:	19 f1       	breq	.+70     	; 0x3648 <__scheduleUpdate+0xfc>
    3602:	d5 01       	movw	r26, r10
    3604:	11 96       	adiw	r26, 0x01	; 1
    3606:	ed 91       	ld	r30, X+
    3608:	fc 91       	ld	r31, X
    360a:	12 97       	sbiw	r26, 0x02	; 2
    360c:	13 96       	adiw	r26, 0x03	; 3
    360e:	8d 91       	ld	r24, X+
    3610:	9c 91       	ld	r25, X
    3612:	14 97       	sbiw	r26, 0x04	; 4
    3614:	1c 92       	st	X, r1
    3616:	20 91 50 04 	lds	r18, 0x0450
    361a:	30 91 51 04 	lds	r19, 0x0451
    361e:	21 50       	subi	r18, 0x01	; 1
    3620:	30 40       	sbci	r19, 0x00	; 0
    3622:	30 93 51 04 	sts	0x0451, r19
    3626:	20 93 50 04 	sts	0x0450, r18
    362a:	c2 0c       	add	r12, r2
    362c:	d3 1c       	adc	r13, r3
    362e:	e4 1c       	adc	r14, r4
    3630:	f5 1c       	adc	r15, r5
    3632:	09 81       	ldd	r16, Y+1	; 0x01
    3634:	1a 81       	ldd	r17, Y+2	; 0x02
    3636:	2b 81       	ldd	r18, Y+3	; 0x03
    3638:	3c 81       	ldd	r19, Y+4	; 0x04
    363a:	b7 01       	movw	r22, r14
    363c:	a6 01       	movw	r20, r12
    363e:	09 95       	icall
    3640:	bf ef       	ldi	r27, 0xFF	; 255
    3642:	b0 93 4f 04 	sts	0x044F, r27
    3646:	12 c0       	rjmp	.+36     	; 0x366c <__scheduleUpdate+0x120>
    3648:	61 14       	cp	r6, r1
    364a:	71 04       	cpc	r7, r1
    364c:	81 04       	cpc	r8, r1
    364e:	91 04       	cpc	r9, r1
    3650:	49 f0       	breq	.+18     	; 0x3664 <__scheduleUpdate+0x118>
    3652:	89 81       	ldd	r24, Y+1	; 0x01
    3654:	9a 81       	ldd	r25, Y+2	; 0x02
    3656:	ab 81       	ldd	r26, Y+3	; 0x03
    3658:	bc 81       	ldd	r27, Y+4	; 0x04
    365a:	86 15       	cp	r24, r6
    365c:	97 05       	cpc	r25, r7
    365e:	a8 05       	cpc	r26, r8
    3660:	b9 05       	cpc	r27, r9
    3662:	20 f4       	brcc	.+8      	; 0x366c <__scheduleUpdate+0x120>
    3664:	69 80       	ldd	r6, Y+1	; 0x01
    3666:	7a 80       	ldd	r7, Y+2	; 0x02
    3668:	8b 80       	ldd	r8, Y+3	; 0x03
    366a:	9c 80       	ldd	r9, Y+4	; 0x04
    366c:	ed 81       	ldd	r30, Y+5	; 0x05
    366e:	fe 81       	ldd	r31, Y+6	; 0x06
    3670:	31 97       	sbiw	r30, 0x01	; 1
    3672:	fe 83       	std	Y+6, r31	; 0x06
    3674:	ed 83       	std	Y+5, r30	; 0x05
    3676:	23 ef       	ldi	r18, 0xF3	; 243
    3678:	3f ef       	ldi	r19, 0xFF	; 255
    367a:	a2 0e       	add	r10, r18
    367c:	b3 1e       	adc	r11, r19
    367e:	8d 81       	ldd	r24, Y+5	; 0x05
    3680:	9e 81       	ldd	r25, Y+6	; 0x06
    3682:	8f 5f       	subi	r24, 0xFF	; 255
    3684:	9f 4f       	sbci	r25, 0xFF	; 255
    3686:	09 f0       	breq	.+2      	; 0x368a <__scheduleUpdate+0x13e>
    3688:	a0 cf       	rjmp	.-192    	; 0x35ca <__scheduleUpdate+0x7e>
    368a:	80 91 4f 04 	lds	r24, 0x044F
    368e:	88 23       	and	r24, r24
    3690:	09 f0       	breq	.+2      	; 0x3694 <__scheduleUpdate+0x148>
    3692:	81 cf       	rjmp	.-254    	; 0x3596 <__scheduleUpdate+0x4a>
    3694:	10 92 4e 04 	sts	0x044E, r1
    3698:	80 91 50 04 	lds	r24, 0x0450
    369c:	90 91 51 04 	lds	r25, 0x0451
    36a0:	18 16       	cp	r1, r24
    36a2:	19 06       	cpc	r1, r25
    36a4:	4c f5       	brge	.+82     	; 0x36f8 <__scheduleUpdate+0x1ac>
    36a6:	20 91 24 01 	lds	r18, 0x0124
    36aa:	30 91 25 01 	lds	r19, 0x0125
    36ae:	d4 01       	movw	r26, r8
    36b0:	c3 01       	movw	r24, r6
    36b2:	88 0f       	add	r24, r24
    36b4:	99 1f       	adc	r25, r25
    36b6:	aa 1f       	adc	r26, r26
    36b8:	bb 1f       	adc	r27, r27
    36ba:	81 30       	cpi	r24, 0x01	; 1
    36bc:	ea ef       	ldi	r30, 0xFA	; 250
    36be:	9e 07       	cpc	r25, r30
    36c0:	e0 e0       	ldi	r30, 0x00	; 0
    36c2:	ae 07       	cpc	r26, r30
    36c4:	e0 e0       	ldi	r30, 0x00	; 0
    36c6:	be 07       	cpc	r27, r30
    36c8:	20 f0       	brcs	.+8      	; 0x36d2 <__scheduleUpdate+0x186>
    36ca:	80 e0       	ldi	r24, 0x00	; 0
    36cc:	9a ef       	ldi	r25, 0xFA	; 250
    36ce:	a0 e0       	ldi	r26, 0x00	; 0
    36d0:	b0 e0       	ldi	r27, 0x00	; 0
    36d2:	82 0f       	add	r24, r18
    36d4:	93 1f       	adc	r25, r19
    36d6:	02 c0       	rjmp	.+4      	; 0x36dc <__scheduleUpdate+0x190>
    36d8:	80 50       	subi	r24, 0x00	; 0
    36da:	9a 4f       	sbci	r25, 0xFA	; 250
    36dc:	fa ef       	ldi	r31, 0xFA	; 250
    36de:	80 30       	cpi	r24, 0x00	; 0
    36e0:	9f 07       	cpc	r25, r31
    36e2:	d0 f7       	brcc	.-12     	; 0x36d8 <__scheduleUpdate+0x18c>
    36e4:	90 93 2b 01 	sts	0x012B, r25
    36e8:	80 93 2a 01 	sts	0x012A, r24
    36ec:	d2 9a       	sbi	0x1a, 2	; 26
    36ee:	80 91 73 00 	lds	r24, 0x0073
    36f2:	84 60       	ori	r24, 0x04	; 4
    36f4:	80 93 73 00 	sts	0x0073, r24
    36f8:	2f 81       	ldd	r18, Y+7	; 0x07
    36fa:	2f bf       	out	0x3f, r18	; 63
    36fc:	27 96       	adiw	r28, 0x07	; 7
    36fe:	0f b6       	in	r0, 0x3f	; 63
    3700:	f8 94       	cli
    3702:	de bf       	out	0x3e, r29	; 62
    3704:	0f be       	out	0x3f, r0	; 63
    3706:	cd bf       	out	0x3d, r28	; 61
    3708:	cf 91       	pop	r28
    370a:	df 91       	pop	r29
    370c:	1f 91       	pop	r17
    370e:	0f 91       	pop	r16
    3710:	ff 90       	pop	r15
    3712:	ef 90       	pop	r14
    3714:	df 90       	pop	r13
    3716:	cf 90       	pop	r12
    3718:	bf 90       	pop	r11
    371a:	af 90       	pop	r10
    371c:	9f 90       	pop	r9
    371e:	8f 90       	pop	r8
    3720:	7f 90       	pop	r7
    3722:	6f 90       	pop	r6
    3724:	5f 90       	pop	r5
    3726:	4f 90       	pop	r4
    3728:	3f 90       	pop	r3
    372a:	2f 90       	pop	r2
    372c:	08 95       	ret

0000372e <__vector_48>:
    372e:	1f 92       	push	r1
    3730:	0f 92       	push	r0
    3732:	0f b6       	in	r0, 0x3f	; 63
    3734:	0f 92       	push	r0
    3736:	11 24       	eor	r1, r1
    3738:	2f 93       	push	r18
    373a:	3f 93       	push	r19
    373c:	4f 93       	push	r20
    373e:	5f 93       	push	r21
    3740:	6f 93       	push	r22
    3742:	7f 93       	push	r23
    3744:	8f 93       	push	r24
    3746:	9f 93       	push	r25
    3748:	af 93       	push	r26
    374a:	bf 93       	push	r27
    374c:	ef 93       	push	r30
    374e:	ff 93       	push	r31
    3750:	0e 94 a6 1a 	call	0x354c	; 0x354c <__scheduleUpdate>
    3754:	ff 91       	pop	r31
    3756:	ef 91       	pop	r30
    3758:	bf 91       	pop	r27
    375a:	af 91       	pop	r26
    375c:	9f 91       	pop	r25
    375e:	8f 91       	pop	r24
    3760:	7f 91       	pop	r23
    3762:	6f 91       	pop	r22
    3764:	5f 91       	pop	r21
    3766:	4f 91       	pop	r20
    3768:	3f 91       	pop	r19
    376a:	2f 91       	pop	r18
    376c:	0f 90       	pop	r0
    376e:	0f be       	out	0x3f, r0	; 63
    3770:	0f 90       	pop	r0
    3772:	1f 90       	pop	r1
    3774:	18 95       	reti

00003776 <scheduleJob>:
    3776:	2f 92       	push	r2
    3778:	3f 92       	push	r3
    377a:	4f 92       	push	r4
    377c:	5f 92       	push	r5
    377e:	6f 92       	push	r6
    3780:	7f 92       	push	r7
    3782:	8f 92       	push	r8
    3784:	9f 92       	push	r9
    3786:	af 92       	push	r10
    3788:	bf 92       	push	r11
    378a:	cf 92       	push	r12
    378c:	df 92       	push	r13
    378e:	ef 92       	push	r14
    3790:	ff 92       	push	r15
    3792:	0f 93       	push	r16
    3794:	1f 93       	push	r17
    3796:	df 93       	push	r29
    3798:	cf 93       	push	r28
    379a:	00 d0       	rcall	.+0      	; 0x379c <scheduleJob+0x26>
    379c:	00 d0       	rcall	.+0      	; 0x379e <scheduleJob+0x28>
    379e:	cd b7       	in	r28, 0x3d	; 61
    37a0:	de b7       	in	r29, 0x3e	; 62
    37a2:	1c 01       	movw	r2, r24
    37a4:	2b 01       	movw	r4, r22
    37a6:	49 01       	movw	r8, r18
    37a8:	5a 01       	movw	r10, r20
    37aa:	67 01       	movw	r12, r14
    37ac:	78 01       	movw	r14, r16
    37ae:	88 ee       	ldi	r24, 0xE8	; 232
    37b0:	c8 16       	cp	r12, r24
    37b2:	83 e0       	ldi	r24, 0x03	; 3
    37b4:	d8 06       	cpc	r13, r24
    37b6:	80 e0       	ldi	r24, 0x00	; 0
    37b8:	e8 06       	cpc	r14, r24
    37ba:	80 e0       	ldi	r24, 0x00	; 0
    37bc:	f8 06       	cpc	r15, r24
    37be:	38 f4       	brcc	.+14     	; 0x37ce <scheduleJob+0x58>
    37c0:	80 91 4e 04 	lds	r24, 0x044E
    37c4:	88 23       	and	r24, r24
    37c6:	c1 f1       	breq	.+112    	; 0x3838 <scheduleJob+0xc2>
    37c8:	8f ef       	ldi	r24, 0xFF	; 255
    37ca:	80 93 4f 04 	sts	0x044F, r24
    37ce:	6f b7       	in	r22, 0x3f	; 63
    37d0:	f8 94       	cli
    37d2:	80 91 14 03 	lds	r24, 0x0314
    37d6:	48 2f       	mov	r20, r24
    37d8:	50 e0       	ldi	r21, 0x00	; 0
    37da:	a1 e4       	ldi	r26, 0x41	; 65
    37dc:	b4 e0       	ldi	r27, 0x04	; 4
    37de:	20 e0       	ldi	r18, 0x00	; 0
    37e0:	30 e0       	ldi	r19, 0x00	; 0
    37e2:	20 c0       	rjmp	.+64     	; 0x3824 <scheduleJob+0xae>
    37e4:	fd 01       	movw	r30, r26
    37e6:	8c 91       	ld	r24, X
    37e8:	1d 96       	adiw	r26, 0x0d	; 13
    37ea:	88 23       	and	r24, r24
    37ec:	c9 f4       	brne	.+50     	; 0x3820 <scheduleJob+0xaa>
    37ee:	8f ef       	ldi	r24, 0xFF	; 255
    37f0:	80 83       	st	Z, r24
    37f2:	32 82       	std	Z+2, r3	; 0x02
    37f4:	21 82       	std	Z+1, r2	; 0x01
    37f6:	54 82       	std	Z+4, r5	; 0x04
    37f8:	43 82       	std	Z+3, r4	; 0x03
    37fa:	81 86       	std	Z+9, r8	; 0x09
    37fc:	92 86       	std	Z+10, r9	; 0x0a
    37fe:	a3 86       	std	Z+11, r10	; 0x0b
    3800:	b4 86       	std	Z+12, r11	; 0x0c
    3802:	c5 82       	std	Z+5, r12	; 0x05
    3804:	d6 82       	std	Z+6, r13	; 0x06
    3806:	e7 82       	std	Z+7, r14	; 0x07
    3808:	f0 86       	std	Z+8, r15	; 0x08
    380a:	80 91 50 04 	lds	r24, 0x0450
    380e:	90 91 51 04 	lds	r25, 0x0451
    3812:	01 96       	adiw	r24, 0x01	; 1
    3814:	90 93 51 04 	sts	0x0451, r25
    3818:	80 93 50 04 	sts	0x0450, r24
    381c:	8f ef       	ldi	r24, 0xFF	; 255
    381e:	06 c0       	rjmp	.+12     	; 0x382c <scheduleJob+0xb6>
    3820:	2f 5f       	subi	r18, 0xFF	; 255
    3822:	3f 4f       	sbci	r19, 0xFF	; 255
    3824:	24 17       	cp	r18, r20
    3826:	35 07       	cpc	r19, r21
    3828:	ec f2       	brlt	.-70     	; 0x37e4 <scheduleJob+0x6e>
    382a:	80 e0       	ldi	r24, 0x00	; 0
    382c:	6f bf       	out	0x3f, r22	; 63
    382e:	88 23       	and	r24, r24
    3830:	f1 f4       	brne	.+60     	; 0x386e <scheduleJob+0xf8>
    3832:	8f ef       	ldi	r24, 0xFF	; 255
    3834:	0e 94 9d 13 	call	0x273a	; 0x273a <setError>
    3838:	3e 01       	movw	r6, r28
    383a:	08 94       	sec
    383c:	61 1c       	adc	r6, r1
    383e:	71 1c       	adc	r7, r1
    3840:	c5 01       	movw	r24, r10
    3842:	b4 01       	movw	r22, r8
    3844:	a7 01       	movw	r20, r14
    3846:	96 01       	movw	r18, r12
    3848:	83 01       	movw	r16, r6
    384a:	0e 94 08 1a 	call	0x3410	; 0x3410 <clockHasElapsedGetOverflow>
    384e:	88 23       	and	r24, r24
    3850:	b9 f3       	breq	.-18     	; 0x3840 <scheduleJob+0xca>
    3852:	c8 0c       	add	r12, r8
    3854:	d9 1c       	adc	r13, r9
    3856:	ea 1c       	adc	r14, r10
    3858:	fb 1c       	adc	r15, r11
    385a:	09 81       	ldd	r16, Y+1	; 0x01
    385c:	1a 81       	ldd	r17, Y+2	; 0x02
    385e:	2b 81       	ldd	r18, Y+3	; 0x03
    3860:	3c 81       	ldd	r19, Y+4	; 0x04
    3862:	c2 01       	movw	r24, r4
    3864:	b7 01       	movw	r22, r14
    3866:	a6 01       	movw	r20, r12
    3868:	f1 01       	movw	r30, r2
    386a:	09 95       	icall
    386c:	06 c0       	rjmp	.+12     	; 0x387a <scheduleJob+0x104>
    386e:	80 91 4e 04 	lds	r24, 0x044E
    3872:	88 23       	and	r24, r24
    3874:	11 f4       	brne	.+4      	; 0x387a <scheduleJob+0x104>
    3876:	0e 94 a6 1a 	call	0x354c	; 0x354c <__scheduleUpdate>
    387a:	0f 90       	pop	r0
    387c:	0f 90       	pop	r0
    387e:	0f 90       	pop	r0
    3880:	0f 90       	pop	r0
    3882:	cf 91       	pop	r28
    3884:	df 91       	pop	r29
    3886:	1f 91       	pop	r17
    3888:	0f 91       	pop	r16
    388a:	ff 90       	pop	r15
    388c:	ef 90       	pop	r14
    388e:	df 90       	pop	r13
    3890:	cf 90       	pop	r12
    3892:	bf 90       	pop	r11
    3894:	af 90       	pop	r10
    3896:	9f 90       	pop	r9
    3898:	8f 90       	pop	r8
    389a:	7f 90       	pop	r7
    389c:	6f 90       	pop	r6
    389e:	5f 90       	pop	r5
    38a0:	4f 90       	pop	r4
    38a2:	3f 90       	pop	r3
    38a4:	2f 90       	pop	r2
    38a6:	08 95       	ret

000038a8 <malloc>:
    38a8:	cf 93       	push	r28
    38aa:	df 93       	push	r29
    38ac:	bc 01       	movw	r22, r24
    38ae:	82 30       	cpi	r24, 0x02	; 2
    38b0:	91 05       	cpc	r25, r1
    38b2:	10 f4       	brcc	.+4      	; 0x38b8 <malloc+0x10>
    38b4:	62 e0       	ldi	r22, 0x02	; 2
    38b6:	70 e0       	ldi	r23, 0x00	; 0
    38b8:	a0 91 5c 04 	lds	r26, 0x045C
    38bc:	b0 91 5d 04 	lds	r27, 0x045D
    38c0:	ed 01       	movw	r28, r26
    38c2:	e0 e0       	ldi	r30, 0x00	; 0
    38c4:	f0 e0       	ldi	r31, 0x00	; 0
    38c6:	40 e0       	ldi	r20, 0x00	; 0
    38c8:	50 e0       	ldi	r21, 0x00	; 0
    38ca:	21 c0       	rjmp	.+66     	; 0x390e <malloc+0x66>
    38cc:	88 81       	ld	r24, Y
    38ce:	99 81       	ldd	r25, Y+1	; 0x01
    38d0:	86 17       	cp	r24, r22
    38d2:	97 07       	cpc	r25, r23
    38d4:	69 f4       	brne	.+26     	; 0x38f0 <malloc+0x48>
    38d6:	8a 81       	ldd	r24, Y+2	; 0x02
    38d8:	9b 81       	ldd	r25, Y+3	; 0x03
    38da:	30 97       	sbiw	r30, 0x00	; 0
    38dc:	19 f0       	breq	.+6      	; 0x38e4 <malloc+0x3c>
    38de:	93 83       	std	Z+3, r25	; 0x03
    38e0:	82 83       	std	Z+2, r24	; 0x02
    38e2:	04 c0       	rjmp	.+8      	; 0x38ec <malloc+0x44>
    38e4:	90 93 5d 04 	sts	0x045D, r25
    38e8:	80 93 5c 04 	sts	0x045C, r24
    38ec:	fe 01       	movw	r30, r28
    38ee:	34 c0       	rjmp	.+104    	; 0x3958 <malloc+0xb0>
    38f0:	68 17       	cp	r22, r24
    38f2:	79 07       	cpc	r23, r25
    38f4:	38 f4       	brcc	.+14     	; 0x3904 <malloc+0x5c>
    38f6:	41 15       	cp	r20, r1
    38f8:	51 05       	cpc	r21, r1
    38fa:	19 f0       	breq	.+6      	; 0x3902 <malloc+0x5a>
    38fc:	84 17       	cp	r24, r20
    38fe:	95 07       	cpc	r25, r21
    3900:	08 f4       	brcc	.+2      	; 0x3904 <malloc+0x5c>
    3902:	ac 01       	movw	r20, r24
    3904:	fe 01       	movw	r30, r28
    3906:	8a 81       	ldd	r24, Y+2	; 0x02
    3908:	9b 81       	ldd	r25, Y+3	; 0x03
    390a:	9c 01       	movw	r18, r24
    390c:	e9 01       	movw	r28, r18
    390e:	20 97       	sbiw	r28, 0x00	; 0
    3910:	e9 f6       	brne	.-70     	; 0x38cc <malloc+0x24>
    3912:	41 15       	cp	r20, r1
    3914:	51 05       	cpc	r21, r1
    3916:	a9 f1       	breq	.+106    	; 0x3982 <malloc+0xda>
    3918:	ca 01       	movw	r24, r20
    391a:	86 1b       	sub	r24, r22
    391c:	97 0b       	sbc	r25, r23
    391e:	04 97       	sbiw	r24, 0x04	; 4
    3920:	08 f4       	brcc	.+2      	; 0x3924 <malloc+0x7c>
    3922:	ba 01       	movw	r22, r20
    3924:	e0 e0       	ldi	r30, 0x00	; 0
    3926:	f0 e0       	ldi	r31, 0x00	; 0
    3928:	2a c0       	rjmp	.+84     	; 0x397e <malloc+0xd6>
    392a:	8d 91       	ld	r24, X+
    392c:	9c 91       	ld	r25, X
    392e:	11 97       	sbiw	r26, 0x01	; 1
    3930:	84 17       	cp	r24, r20
    3932:	95 07       	cpc	r25, r21
    3934:	f9 f4       	brne	.+62     	; 0x3974 <malloc+0xcc>
    3936:	64 17       	cp	r22, r20
    3938:	75 07       	cpc	r23, r21
    393a:	81 f4       	brne	.+32     	; 0x395c <malloc+0xb4>
    393c:	12 96       	adiw	r26, 0x02	; 2
    393e:	8d 91       	ld	r24, X+
    3940:	9c 91       	ld	r25, X
    3942:	13 97       	sbiw	r26, 0x03	; 3
    3944:	30 97       	sbiw	r30, 0x00	; 0
    3946:	19 f0       	breq	.+6      	; 0x394e <malloc+0xa6>
    3948:	93 83       	std	Z+3, r25	; 0x03
    394a:	82 83       	std	Z+2, r24	; 0x02
    394c:	04 c0       	rjmp	.+8      	; 0x3956 <malloc+0xae>
    394e:	90 93 5d 04 	sts	0x045D, r25
    3952:	80 93 5c 04 	sts	0x045C, r24
    3956:	fd 01       	movw	r30, r26
    3958:	32 96       	adiw	r30, 0x02	; 2
    395a:	4f c0       	rjmp	.+158    	; 0x39fa <malloc+0x152>
    395c:	ca 01       	movw	r24, r20
    395e:	86 1b       	sub	r24, r22
    3960:	97 0b       	sbc	r25, r23
    3962:	fd 01       	movw	r30, r26
    3964:	e8 0f       	add	r30, r24
    3966:	f9 1f       	adc	r31, r25
    3968:	61 93       	st	Z+, r22
    396a:	71 93       	st	Z+, r23
    396c:	02 97       	sbiw	r24, 0x02	; 2
    396e:	8d 93       	st	X+, r24
    3970:	9c 93       	st	X, r25
    3972:	43 c0       	rjmp	.+134    	; 0x39fa <malloc+0x152>
    3974:	fd 01       	movw	r30, r26
    3976:	82 81       	ldd	r24, Z+2	; 0x02
    3978:	93 81       	ldd	r25, Z+3	; 0x03
    397a:	9c 01       	movw	r18, r24
    397c:	d9 01       	movw	r26, r18
    397e:	10 97       	sbiw	r26, 0x00	; 0
    3980:	a1 f6       	brne	.-88     	; 0x392a <malloc+0x82>
    3982:	80 91 5a 04 	lds	r24, 0x045A
    3986:	90 91 5b 04 	lds	r25, 0x045B
    398a:	89 2b       	or	r24, r25
    398c:	41 f4       	brne	.+16     	; 0x399e <malloc+0xf6>
    398e:	80 91 17 03 	lds	r24, 0x0317
    3992:	90 91 18 03 	lds	r25, 0x0318
    3996:	90 93 5b 04 	sts	0x045B, r25
    399a:	80 93 5a 04 	sts	0x045A, r24
    399e:	40 91 19 03 	lds	r20, 0x0319
    39a2:	50 91 1a 03 	lds	r21, 0x031A
    39a6:	41 15       	cp	r20, r1
    39a8:	51 05       	cpc	r21, r1
    39aa:	41 f4       	brne	.+16     	; 0x39bc <malloc+0x114>
    39ac:	4d b7       	in	r20, 0x3d	; 61
    39ae:	5e b7       	in	r21, 0x3e	; 62
    39b0:	80 91 15 03 	lds	r24, 0x0315
    39b4:	90 91 16 03 	lds	r25, 0x0316
    39b8:	48 1b       	sub	r20, r24
    39ba:	59 0b       	sbc	r21, r25
    39bc:	20 91 5a 04 	lds	r18, 0x045A
    39c0:	30 91 5b 04 	lds	r19, 0x045B
    39c4:	24 17       	cp	r18, r20
    39c6:	35 07       	cpc	r19, r21
    39c8:	b0 f4       	brcc	.+44     	; 0x39f6 <malloc+0x14e>
    39ca:	ca 01       	movw	r24, r20
    39cc:	82 1b       	sub	r24, r18
    39ce:	93 0b       	sbc	r25, r19
    39d0:	86 17       	cp	r24, r22
    39d2:	97 07       	cpc	r25, r23
    39d4:	80 f0       	brcs	.+32     	; 0x39f6 <malloc+0x14e>
    39d6:	ab 01       	movw	r20, r22
    39d8:	4e 5f       	subi	r20, 0xFE	; 254
    39da:	5f 4f       	sbci	r21, 0xFF	; 255
    39dc:	84 17       	cp	r24, r20
    39de:	95 07       	cpc	r25, r21
    39e0:	50 f0       	brcs	.+20     	; 0x39f6 <malloc+0x14e>
    39e2:	42 0f       	add	r20, r18
    39e4:	53 1f       	adc	r21, r19
    39e6:	50 93 5b 04 	sts	0x045B, r21
    39ea:	40 93 5a 04 	sts	0x045A, r20
    39ee:	f9 01       	movw	r30, r18
    39f0:	61 93       	st	Z+, r22
    39f2:	71 93       	st	Z+, r23
    39f4:	02 c0       	rjmp	.+4      	; 0x39fa <malloc+0x152>
    39f6:	e0 e0       	ldi	r30, 0x00	; 0
    39f8:	f0 e0       	ldi	r31, 0x00	; 0
    39fa:	cf 01       	movw	r24, r30
    39fc:	df 91       	pop	r29
    39fe:	cf 91       	pop	r28
    3a00:	08 95       	ret

00003a02 <free>:
    3a02:	cf 93       	push	r28
    3a04:	df 93       	push	r29
    3a06:	00 97       	sbiw	r24, 0x00	; 0
    3a08:	09 f4       	brne	.+2      	; 0x3a0c <free+0xa>
    3a0a:	50 c0       	rjmp	.+160    	; 0x3aac <free+0xaa>
    3a0c:	ec 01       	movw	r28, r24
    3a0e:	22 97       	sbiw	r28, 0x02	; 2
    3a10:	1b 82       	std	Y+3, r1	; 0x03
    3a12:	1a 82       	std	Y+2, r1	; 0x02
    3a14:	a0 91 5c 04 	lds	r26, 0x045C
    3a18:	b0 91 5d 04 	lds	r27, 0x045D
    3a1c:	10 97       	sbiw	r26, 0x00	; 0
    3a1e:	09 f1       	breq	.+66     	; 0x3a62 <free+0x60>
    3a20:	40 e0       	ldi	r20, 0x00	; 0
    3a22:	50 e0       	ldi	r21, 0x00	; 0
    3a24:	ac 17       	cp	r26, r28
    3a26:	bd 07       	cpc	r27, r29
    3a28:	08 f1       	brcs	.+66     	; 0x3a6c <free+0x6a>
    3a2a:	bb 83       	std	Y+3, r27	; 0x03
    3a2c:	aa 83       	std	Y+2, r26	; 0x02
    3a2e:	fe 01       	movw	r30, r28
    3a30:	21 91       	ld	r18, Z+
    3a32:	31 91       	ld	r19, Z+
    3a34:	e2 0f       	add	r30, r18
    3a36:	f3 1f       	adc	r31, r19
    3a38:	ae 17       	cp	r26, r30
    3a3a:	bf 07       	cpc	r27, r31
    3a3c:	79 f4       	brne	.+30     	; 0x3a5c <free+0x5a>
    3a3e:	8d 91       	ld	r24, X+
    3a40:	9c 91       	ld	r25, X
    3a42:	11 97       	sbiw	r26, 0x01	; 1
    3a44:	28 0f       	add	r18, r24
    3a46:	39 1f       	adc	r19, r25
    3a48:	2e 5f       	subi	r18, 0xFE	; 254
    3a4a:	3f 4f       	sbci	r19, 0xFF	; 255
    3a4c:	39 83       	std	Y+1, r19	; 0x01
    3a4e:	28 83       	st	Y, r18
    3a50:	12 96       	adiw	r26, 0x02	; 2
    3a52:	8d 91       	ld	r24, X+
    3a54:	9c 91       	ld	r25, X
    3a56:	13 97       	sbiw	r26, 0x03	; 3
    3a58:	9b 83       	std	Y+3, r25	; 0x03
    3a5a:	8a 83       	std	Y+2, r24	; 0x02
    3a5c:	41 15       	cp	r20, r1
    3a5e:	51 05       	cpc	r21, r1
    3a60:	71 f4       	brne	.+28     	; 0x3a7e <free+0x7c>
    3a62:	d0 93 5d 04 	sts	0x045D, r29
    3a66:	c0 93 5c 04 	sts	0x045C, r28
    3a6a:	20 c0       	rjmp	.+64     	; 0x3aac <free+0xaa>
    3a6c:	12 96       	adiw	r26, 0x02	; 2
    3a6e:	8d 91       	ld	r24, X+
    3a70:	9c 91       	ld	r25, X
    3a72:	13 97       	sbiw	r26, 0x03	; 3
    3a74:	ad 01       	movw	r20, r26
    3a76:	00 97       	sbiw	r24, 0x00	; 0
    3a78:	11 f0       	breq	.+4      	; 0x3a7e <free+0x7c>
    3a7a:	dc 01       	movw	r26, r24
    3a7c:	d3 cf       	rjmp	.-90     	; 0x3a24 <free+0x22>
    3a7e:	fa 01       	movw	r30, r20
    3a80:	d3 83       	std	Z+3, r29	; 0x03
    3a82:	c2 83       	std	Z+2, r28	; 0x02
    3a84:	21 91       	ld	r18, Z+
    3a86:	31 91       	ld	r19, Z+
    3a88:	e2 0f       	add	r30, r18
    3a8a:	f3 1f       	adc	r31, r19
    3a8c:	ce 17       	cp	r28, r30
    3a8e:	df 07       	cpc	r29, r31
    3a90:	69 f4       	brne	.+26     	; 0x3aac <free+0xaa>
    3a92:	88 81       	ld	r24, Y
    3a94:	99 81       	ldd	r25, Y+1	; 0x01
    3a96:	28 0f       	add	r18, r24
    3a98:	39 1f       	adc	r19, r25
    3a9a:	2e 5f       	subi	r18, 0xFE	; 254
    3a9c:	3f 4f       	sbci	r19, 0xFF	; 255
    3a9e:	fa 01       	movw	r30, r20
    3aa0:	31 83       	std	Z+1, r19	; 0x01
    3aa2:	20 83       	st	Z, r18
    3aa4:	8a 81       	ldd	r24, Y+2	; 0x02
    3aa6:	9b 81       	ldd	r25, Y+3	; 0x03
    3aa8:	93 83       	std	Z+3, r25	; 0x03
    3aaa:	82 83       	std	Z+2, r24	; 0x02
    3aac:	df 91       	pop	r29
    3aae:	cf 91       	pop	r28
    3ab0:	08 95       	ret

00003ab2 <exit>:
    3ab2:	f8 94       	cli
    3ab4:	0c 94 42 20 	jmp	0x4084	; 0x4084 <__do_global_dtors>

00003ab8 <__ftoa_engine>:
    3ab8:	28 30       	cpi	r18, 0x08	; 8
    3aba:	08 f0       	brcs	.+2      	; 0x3abe <__ftoa_engine+0x6>
    3abc:	27 e0       	ldi	r18, 0x07	; 7
    3abe:	33 27       	eor	r19, r19
    3ac0:	da 01       	movw	r26, r20
    3ac2:	99 0f       	add	r25, r25
    3ac4:	31 1d       	adc	r19, r1
    3ac6:	87 fd       	sbrc	r24, 7
    3ac8:	91 60       	ori	r25, 0x01	; 1
    3aca:	00 96       	adiw	r24, 0x00	; 0
    3acc:	61 05       	cpc	r22, r1
    3ace:	71 05       	cpc	r23, r1
    3ad0:	39 f4       	brne	.+14     	; 0x3ae0 <__ftoa_engine+0x28>
    3ad2:	32 60       	ori	r19, 0x02	; 2
    3ad4:	2e 5f       	subi	r18, 0xFE	; 254
    3ad6:	3d 93       	st	X+, r19
    3ad8:	30 e3       	ldi	r19, 0x30	; 48
    3ada:	2a 95       	dec	r18
    3adc:	e1 f7       	brne	.-8      	; 0x3ad6 <__ftoa_engine+0x1e>
    3ade:	08 95       	ret
    3ae0:	9f 3f       	cpi	r25, 0xFF	; 255
    3ae2:	30 f0       	brcs	.+12     	; 0x3af0 <__ftoa_engine+0x38>
    3ae4:	80 38       	cpi	r24, 0x80	; 128
    3ae6:	71 05       	cpc	r23, r1
    3ae8:	61 05       	cpc	r22, r1
    3aea:	09 f0       	breq	.+2      	; 0x3aee <__ftoa_engine+0x36>
    3aec:	3c 5f       	subi	r19, 0xFC	; 252
    3aee:	3c 5f       	subi	r19, 0xFC	; 252
    3af0:	3d 93       	st	X+, r19
    3af2:	91 30       	cpi	r25, 0x01	; 1
    3af4:	08 f0       	brcs	.+2      	; 0x3af8 <__ftoa_engine+0x40>
    3af6:	80 68       	ori	r24, 0x80	; 128
    3af8:	91 1d       	adc	r25, r1
    3afa:	df 93       	push	r29
    3afc:	cf 93       	push	r28
    3afe:	1f 93       	push	r17
    3b00:	0f 93       	push	r16
    3b02:	ff 92       	push	r15
    3b04:	ef 92       	push	r14
    3b06:	19 2f       	mov	r17, r25
    3b08:	98 7f       	andi	r25, 0xF8	; 248
    3b0a:	96 95       	lsr	r25
    3b0c:	e9 2f       	mov	r30, r25
    3b0e:	96 95       	lsr	r25
    3b10:	96 95       	lsr	r25
    3b12:	e9 0f       	add	r30, r25
    3b14:	ff 27       	eor	r31, r31
    3b16:	e8 5d       	subi	r30, 0xD8	; 216
    3b18:	fb 4f       	sbci	r31, 0xFB	; 251
    3b1a:	99 27       	eor	r25, r25
    3b1c:	33 27       	eor	r19, r19
    3b1e:	ee 24       	eor	r14, r14
    3b20:	ff 24       	eor	r15, r15
    3b22:	a7 01       	movw	r20, r14
    3b24:	e7 01       	movw	r28, r14
    3b26:	05 90       	lpm	r0, Z+
    3b28:	08 94       	sec
    3b2a:	07 94       	ror	r0
    3b2c:	28 f4       	brcc	.+10     	; 0x3b38 <__ftoa_engine+0x80>
    3b2e:	36 0f       	add	r19, r22
    3b30:	e7 1e       	adc	r14, r23
    3b32:	f8 1e       	adc	r15, r24
    3b34:	49 1f       	adc	r20, r25
    3b36:	51 1d       	adc	r21, r1
    3b38:	66 0f       	add	r22, r22
    3b3a:	77 1f       	adc	r23, r23
    3b3c:	88 1f       	adc	r24, r24
    3b3e:	99 1f       	adc	r25, r25
    3b40:	06 94       	lsr	r0
    3b42:	a1 f7       	brne	.-24     	; 0x3b2c <__ftoa_engine+0x74>
    3b44:	05 90       	lpm	r0, Z+
    3b46:	07 94       	ror	r0
    3b48:	28 f4       	brcc	.+10     	; 0x3b54 <__ftoa_engine+0x9c>
    3b4a:	e7 0e       	add	r14, r23
    3b4c:	f8 1e       	adc	r15, r24
    3b4e:	49 1f       	adc	r20, r25
    3b50:	56 1f       	adc	r21, r22
    3b52:	c1 1d       	adc	r28, r1
    3b54:	77 0f       	add	r23, r23
    3b56:	88 1f       	adc	r24, r24
    3b58:	99 1f       	adc	r25, r25
    3b5a:	66 1f       	adc	r22, r22
    3b5c:	06 94       	lsr	r0
    3b5e:	a1 f7       	brne	.-24     	; 0x3b48 <__ftoa_engine+0x90>
    3b60:	05 90       	lpm	r0, Z+
    3b62:	07 94       	ror	r0
    3b64:	28 f4       	brcc	.+10     	; 0x3b70 <__ftoa_engine+0xb8>
    3b66:	f8 0e       	add	r15, r24
    3b68:	49 1f       	adc	r20, r25
    3b6a:	56 1f       	adc	r21, r22
    3b6c:	c7 1f       	adc	r28, r23
    3b6e:	d1 1d       	adc	r29, r1
    3b70:	88 0f       	add	r24, r24
    3b72:	99 1f       	adc	r25, r25
    3b74:	66 1f       	adc	r22, r22
    3b76:	77 1f       	adc	r23, r23
    3b78:	06 94       	lsr	r0
    3b7a:	a1 f7       	brne	.-24     	; 0x3b64 <__ftoa_engine+0xac>
    3b7c:	05 90       	lpm	r0, Z+
    3b7e:	07 94       	ror	r0
    3b80:	20 f4       	brcc	.+8      	; 0x3b8a <__ftoa_engine+0xd2>
    3b82:	49 0f       	add	r20, r25
    3b84:	56 1f       	adc	r21, r22
    3b86:	c7 1f       	adc	r28, r23
    3b88:	d8 1f       	adc	r29, r24
    3b8a:	99 0f       	add	r25, r25
    3b8c:	66 1f       	adc	r22, r22
    3b8e:	77 1f       	adc	r23, r23
    3b90:	88 1f       	adc	r24, r24
    3b92:	06 94       	lsr	r0
    3b94:	a9 f7       	brne	.-22     	; 0x3b80 <__ftoa_engine+0xc8>
    3b96:	84 91       	lpm	r24, Z+
    3b98:	10 95       	com	r17
    3b9a:	17 70       	andi	r17, 0x07	; 7
    3b9c:	41 f0       	breq	.+16     	; 0x3bae <__ftoa_engine+0xf6>
    3b9e:	d6 95       	lsr	r29
    3ba0:	c7 95       	ror	r28
    3ba2:	57 95       	ror	r21
    3ba4:	47 95       	ror	r20
    3ba6:	f7 94       	ror	r15
    3ba8:	e7 94       	ror	r14
    3baa:	1a 95       	dec	r17
    3bac:	c1 f7       	brne	.-16     	; 0x3b9e <__ftoa_engine+0xe6>
    3bae:	ee ec       	ldi	r30, 0xCE	; 206
    3bb0:	f3 e0       	ldi	r31, 0x03	; 3
    3bb2:	68 94       	set
    3bb4:	15 90       	lpm	r1, Z+
    3bb6:	15 91       	lpm	r17, Z+
    3bb8:	35 91       	lpm	r19, Z+
    3bba:	65 91       	lpm	r22, Z+
    3bbc:	95 91       	lpm	r25, Z+
    3bbe:	05 90       	lpm	r0, Z+
    3bc0:	7f e2       	ldi	r23, 0x2F	; 47
    3bc2:	73 95       	inc	r23
    3bc4:	e1 18       	sub	r14, r1
    3bc6:	f1 0a       	sbc	r15, r17
    3bc8:	43 0b       	sbc	r20, r19
    3bca:	56 0b       	sbc	r21, r22
    3bcc:	c9 0b       	sbc	r28, r25
    3bce:	d0 09       	sbc	r29, r0
    3bd0:	c0 f7       	brcc	.-16     	; 0x3bc2 <__ftoa_engine+0x10a>
    3bd2:	e1 0c       	add	r14, r1
    3bd4:	f1 1e       	adc	r15, r17
    3bd6:	43 1f       	adc	r20, r19
    3bd8:	56 1f       	adc	r21, r22
    3bda:	c9 1f       	adc	r28, r25
    3bdc:	d0 1d       	adc	r29, r0
    3bde:	7e f4       	brtc	.+30     	; 0x3bfe <__ftoa_engine+0x146>
    3be0:	70 33       	cpi	r23, 0x30	; 48
    3be2:	11 f4       	brne	.+4      	; 0x3be8 <__ftoa_engine+0x130>
    3be4:	8a 95       	dec	r24
    3be6:	e6 cf       	rjmp	.-52     	; 0x3bb4 <__ftoa_engine+0xfc>
    3be8:	e8 94       	clt
    3bea:	01 50       	subi	r16, 0x01	; 1
    3bec:	30 f0       	brcs	.+12     	; 0x3bfa <__ftoa_engine+0x142>
    3bee:	08 0f       	add	r16, r24
    3bf0:	0a f4       	brpl	.+2      	; 0x3bf4 <__ftoa_engine+0x13c>
    3bf2:	00 27       	eor	r16, r16
    3bf4:	02 17       	cp	r16, r18
    3bf6:	08 f4       	brcc	.+2      	; 0x3bfa <__ftoa_engine+0x142>
    3bf8:	20 2f       	mov	r18, r16
    3bfa:	23 95       	inc	r18
    3bfc:	02 2f       	mov	r16, r18
    3bfe:	7a 33       	cpi	r23, 0x3A	; 58
    3c00:	28 f0       	brcs	.+10     	; 0x3c0c <__ftoa_engine+0x154>
    3c02:	79 e3       	ldi	r23, 0x39	; 57
    3c04:	7d 93       	st	X+, r23
    3c06:	2a 95       	dec	r18
    3c08:	e9 f7       	brne	.-6      	; 0x3c04 <__ftoa_engine+0x14c>
    3c0a:	10 c0       	rjmp	.+32     	; 0x3c2c <__ftoa_engine+0x174>
    3c0c:	7d 93       	st	X+, r23
    3c0e:	2a 95       	dec	r18
    3c10:	89 f6       	brne	.-94     	; 0x3bb4 <__ftoa_engine+0xfc>
    3c12:	06 94       	lsr	r0
    3c14:	97 95       	ror	r25
    3c16:	67 95       	ror	r22
    3c18:	37 95       	ror	r19
    3c1a:	17 95       	ror	r17
    3c1c:	17 94       	ror	r1
    3c1e:	e1 18       	sub	r14, r1
    3c20:	f1 0a       	sbc	r15, r17
    3c22:	43 0b       	sbc	r20, r19
    3c24:	56 0b       	sbc	r21, r22
    3c26:	c9 0b       	sbc	r28, r25
    3c28:	d0 09       	sbc	r29, r0
    3c2a:	98 f0       	brcs	.+38     	; 0x3c52 <__ftoa_engine+0x19a>
    3c2c:	23 95       	inc	r18
    3c2e:	7e 91       	ld	r23, -X
    3c30:	73 95       	inc	r23
    3c32:	7a 33       	cpi	r23, 0x3A	; 58
    3c34:	08 f0       	brcs	.+2      	; 0x3c38 <__ftoa_engine+0x180>
    3c36:	70 e3       	ldi	r23, 0x30	; 48
    3c38:	7c 93       	st	X, r23
    3c3a:	20 13       	cpse	r18, r16
    3c3c:	b8 f7       	brcc	.-18     	; 0x3c2c <__ftoa_engine+0x174>
    3c3e:	7e 91       	ld	r23, -X
    3c40:	70 61       	ori	r23, 0x10	; 16
    3c42:	7d 93       	st	X+, r23
    3c44:	30 f0       	brcs	.+12     	; 0x3c52 <__ftoa_engine+0x19a>
    3c46:	83 95       	inc	r24
    3c48:	71 e3       	ldi	r23, 0x31	; 49
    3c4a:	7d 93       	st	X+, r23
    3c4c:	70 e3       	ldi	r23, 0x30	; 48
    3c4e:	2a 95       	dec	r18
    3c50:	e1 f7       	brne	.-8      	; 0x3c4a <__ftoa_engine+0x192>
    3c52:	11 24       	eor	r1, r1
    3c54:	ef 90       	pop	r14
    3c56:	ff 90       	pop	r15
    3c58:	0f 91       	pop	r16
    3c5a:	1f 91       	pop	r17
    3c5c:	cf 91       	pop	r28
    3c5e:	df 91       	pop	r29
    3c60:	99 27       	eor	r25, r25
    3c62:	87 fd       	sbrc	r24, 7
    3c64:	90 95       	com	r25
    3c66:	08 95       	ret

00003c68 <strnlen_P>:
    3c68:	fc 01       	movw	r30, r24
    3c6a:	05 90       	lpm	r0, Z+
    3c6c:	61 50       	subi	r22, 0x01	; 1
    3c6e:	70 40       	sbci	r23, 0x00	; 0
    3c70:	01 10       	cpse	r0, r1
    3c72:	d8 f7       	brcc	.-10     	; 0x3c6a <strnlen_P+0x2>
    3c74:	80 95       	com	r24
    3c76:	90 95       	com	r25
    3c78:	8e 0f       	add	r24, r30
    3c7a:	9f 1f       	adc	r25, r31
    3c7c:	08 95       	ret

00003c7e <memset>:
    3c7e:	dc 01       	movw	r26, r24
    3c80:	01 c0       	rjmp	.+2      	; 0x3c84 <memset+0x6>
    3c82:	6d 93       	st	X+, r22
    3c84:	41 50       	subi	r20, 0x01	; 1
    3c86:	50 40       	sbci	r21, 0x00	; 0
    3c88:	e0 f7       	brcc	.-8      	; 0x3c82 <memset+0x4>
    3c8a:	08 95       	ret

00003c8c <strnlen>:
    3c8c:	fc 01       	movw	r30, r24
    3c8e:	61 50       	subi	r22, 0x01	; 1
    3c90:	70 40       	sbci	r23, 0x00	; 0
    3c92:	01 90       	ld	r0, Z+
    3c94:	01 10       	cpse	r0, r1
    3c96:	d8 f7       	brcc	.-10     	; 0x3c8e <strnlen+0x2>
    3c98:	80 95       	com	r24
    3c9a:	90 95       	com	r25
    3c9c:	8e 0f       	add	r24, r30
    3c9e:	9f 1f       	adc	r25, r31
    3ca0:	08 95       	ret

00003ca2 <itoa>:
    3ca2:	fb 01       	movw	r30, r22
    3ca4:	9f 01       	movw	r18, r30
    3ca6:	e8 94       	clt
    3ca8:	42 30       	cpi	r20, 0x02	; 2
    3caa:	c4 f0       	brlt	.+48     	; 0x3cdc <itoa+0x3a>
    3cac:	45 32       	cpi	r20, 0x25	; 37
    3cae:	b4 f4       	brge	.+44     	; 0x3cdc <itoa+0x3a>
    3cb0:	4a 30       	cpi	r20, 0x0A	; 10
    3cb2:	29 f4       	brne	.+10     	; 0x3cbe <itoa+0x1c>
    3cb4:	97 fb       	bst	r25, 7
    3cb6:	1e f4       	brtc	.+6      	; 0x3cbe <itoa+0x1c>
    3cb8:	90 95       	com	r25
    3cba:	81 95       	neg	r24
    3cbc:	9f 4f       	sbci	r25, 0xFF	; 255
    3cbe:	64 2f       	mov	r22, r20
    3cc0:	77 27       	eor	r23, r23
    3cc2:	0e 94 a1 1f 	call	0x3f42	; 0x3f42 <__udivmodhi4>
    3cc6:	80 5d       	subi	r24, 0xD0	; 208
    3cc8:	8a 33       	cpi	r24, 0x3A	; 58
    3cca:	0c f0       	brlt	.+2      	; 0x3cce <itoa+0x2c>
    3ccc:	89 5d       	subi	r24, 0xD9	; 217
    3cce:	81 93       	st	Z+, r24
    3cd0:	cb 01       	movw	r24, r22
    3cd2:	00 97       	sbiw	r24, 0x00	; 0
    3cd4:	a1 f7       	brne	.-24     	; 0x3cbe <itoa+0x1c>
    3cd6:	16 f4       	brtc	.+4      	; 0x3cdc <itoa+0x3a>
    3cd8:	5d e2       	ldi	r21, 0x2D	; 45
    3cda:	51 93       	st	Z+, r21
    3cdc:	10 82       	st	Z, r1
    3cde:	c9 01       	movw	r24, r18
    3ce0:	0c 94 72 1f 	jmp	0x3ee4	; 0x3ee4 <strrev>

00003ce4 <ltoa>:
    3ce4:	fa 01       	movw	r30, r20
    3ce6:	cf 93       	push	r28
    3ce8:	ff 93       	push	r31
    3cea:	ef 93       	push	r30
    3cec:	22 30       	cpi	r18, 0x02	; 2
    3cee:	44 f1       	brlt	.+80     	; 0x3d40 <ltoa+0x5c>
    3cf0:	25 32       	cpi	r18, 0x25	; 37
    3cf2:	34 f5       	brge	.+76     	; 0x3d40 <ltoa+0x5c>
    3cf4:	c2 2f       	mov	r28, r18
    3cf6:	e8 94       	clt
    3cf8:	ca 30       	cpi	r28, 0x0A	; 10
    3cfa:	49 f4       	brne	.+18     	; 0x3d0e <ltoa+0x2a>
    3cfc:	97 fb       	bst	r25, 7
    3cfe:	3e f4       	brtc	.+14     	; 0x3d0e <ltoa+0x2a>
    3d00:	90 95       	com	r25
    3d02:	80 95       	com	r24
    3d04:	70 95       	com	r23
    3d06:	61 95       	neg	r22
    3d08:	7f 4f       	sbci	r23, 0xFF	; 255
    3d0a:	8f 4f       	sbci	r24, 0xFF	; 255
    3d0c:	9f 4f       	sbci	r25, 0xFF	; 255
    3d0e:	2c 2f       	mov	r18, r28
    3d10:	33 27       	eor	r19, r19
    3d12:	44 27       	eor	r20, r20
    3d14:	55 27       	eor	r21, r21
    3d16:	ff 93       	push	r31
    3d18:	ef 93       	push	r30
    3d1a:	0e 94 c8 1f 	call	0x3f90	; 0x3f90 <__udivmodsi4>
    3d1e:	ef 91       	pop	r30
    3d20:	ff 91       	pop	r31
    3d22:	60 5d       	subi	r22, 0xD0	; 208
    3d24:	6a 33       	cpi	r22, 0x3A	; 58
    3d26:	0c f0       	brlt	.+2      	; 0x3d2a <ltoa+0x46>
    3d28:	69 5d       	subi	r22, 0xD9	; 217
    3d2a:	61 93       	st	Z+, r22
    3d2c:	b9 01       	movw	r22, r18
    3d2e:	ca 01       	movw	r24, r20
    3d30:	60 50       	subi	r22, 0x00	; 0
    3d32:	70 40       	sbci	r23, 0x00	; 0
    3d34:	80 40       	sbci	r24, 0x00	; 0
    3d36:	90 40       	sbci	r25, 0x00	; 0
    3d38:	51 f7       	brne	.-44     	; 0x3d0e <ltoa+0x2a>
    3d3a:	16 f4       	brtc	.+4      	; 0x3d40 <ltoa+0x5c>
    3d3c:	cd e2       	ldi	r28, 0x2D	; 45
    3d3e:	c1 93       	st	Z+, r28
    3d40:	10 82       	st	Z, r1
    3d42:	8f 91       	pop	r24
    3d44:	9f 91       	pop	r25
    3d46:	cf 91       	pop	r28
    3d48:	0c 94 72 1f 	jmp	0x3ee4	; 0x3ee4 <strrev>

00003d4c <ultoa>:
    3d4c:	fa 01       	movw	r30, r20
    3d4e:	cf 93       	push	r28
    3d50:	ff 93       	push	r31
    3d52:	ef 93       	push	r30
    3d54:	22 30       	cpi	r18, 0x02	; 2
    3d56:	cc f0       	brlt	.+50     	; 0x3d8a <ultoa+0x3e>
    3d58:	25 32       	cpi	r18, 0x25	; 37
    3d5a:	bc f4       	brge	.+46     	; 0x3d8a <ultoa+0x3e>
    3d5c:	c2 2f       	mov	r28, r18
    3d5e:	2c 2f       	mov	r18, r28
    3d60:	33 27       	eor	r19, r19
    3d62:	44 27       	eor	r20, r20
    3d64:	55 27       	eor	r21, r21
    3d66:	ff 93       	push	r31
    3d68:	ef 93       	push	r30
    3d6a:	0e 94 c8 1f 	call	0x3f90	; 0x3f90 <__udivmodsi4>
    3d6e:	ef 91       	pop	r30
    3d70:	ff 91       	pop	r31
    3d72:	60 5d       	subi	r22, 0xD0	; 208
    3d74:	6a 33       	cpi	r22, 0x3A	; 58
    3d76:	0c f0       	brlt	.+2      	; 0x3d7a <ultoa+0x2e>
    3d78:	69 5d       	subi	r22, 0xD9	; 217
    3d7a:	61 93       	st	Z+, r22
    3d7c:	b9 01       	movw	r22, r18
    3d7e:	ca 01       	movw	r24, r20
    3d80:	60 50       	subi	r22, 0x00	; 0
    3d82:	70 40       	sbci	r23, 0x00	; 0
    3d84:	80 40       	sbci	r24, 0x00	; 0
    3d86:	90 40       	sbci	r25, 0x00	; 0
    3d88:	51 f7       	brne	.-44     	; 0x3d5e <ultoa+0x12>
    3d8a:	10 82       	st	Z, r1
    3d8c:	8f 91       	pop	r24
    3d8e:	9f 91       	pop	r25
    3d90:	cf 91       	pop	r28
    3d92:	0c 94 72 1f 	jmp	0x3ee4	; 0x3ee4 <strrev>

00003d96 <fprintf_P>:
    3d96:	a0 e0       	ldi	r26, 0x00	; 0
    3d98:	b0 e0       	ldi	r27, 0x00	; 0
    3d9a:	e1 ed       	ldi	r30, 0xD1	; 209
    3d9c:	fe e1       	ldi	r31, 0x1E	; 30
    3d9e:	0c 94 13 20 	jmp	0x4026	; 0x4026 <__prologue_saves__+0x1c>
    3da2:	0f 81       	ldd	r16, Y+7	; 0x07
    3da4:	18 85       	ldd	r17, Y+8	; 0x08
    3da6:	9e 01       	movw	r18, r28
    3da8:	25 5f       	subi	r18, 0xF5	; 245
    3daa:	3f 4f       	sbci	r19, 0xFF	; 255
    3dac:	f8 01       	movw	r30, r16
    3dae:	83 81       	ldd	r24, Z+3	; 0x03
    3db0:	88 60       	ori	r24, 0x08	; 8
    3db2:	83 83       	std	Z+3, r24	; 0x03
    3db4:	c8 01       	movw	r24, r16
    3db6:	69 85       	ldd	r22, Y+9	; 0x09
    3db8:	7a 85       	ldd	r23, Y+10	; 0x0a
    3dba:	a9 01       	movw	r20, r18
    3dbc:	0e 94 92 02 	call	0x524	; 0x524 <vfprintf>
    3dc0:	f8 01       	movw	r30, r16
    3dc2:	23 81       	ldd	r18, Z+3	; 0x03
    3dc4:	27 7f       	andi	r18, 0xF7	; 247
    3dc6:	23 83       	std	Z+3, r18	; 0x03
    3dc8:	20 96       	adiw	r28, 0x00	; 0
    3dca:	e4 e0       	ldi	r30, 0x04	; 4
    3dcc:	0c 94 2f 20 	jmp	0x405e	; 0x405e <__epilogue_restores__+0x1c>

00003dd0 <fputc>:
    3dd0:	0f 93       	push	r16
    3dd2:	1f 93       	push	r17
    3dd4:	cf 93       	push	r28
    3dd6:	df 93       	push	r29
    3dd8:	8c 01       	movw	r16, r24
    3dda:	eb 01       	movw	r28, r22
    3ddc:	8b 81       	ldd	r24, Y+3	; 0x03
    3dde:	81 ff       	sbrs	r24, 1
    3de0:	1b c0       	rjmp	.+54     	; 0x3e18 <fputc+0x48>
    3de2:	82 ff       	sbrs	r24, 2
    3de4:	0d c0       	rjmp	.+26     	; 0x3e00 <fputc+0x30>
    3de6:	2e 81       	ldd	r18, Y+6	; 0x06
    3de8:	3f 81       	ldd	r19, Y+7	; 0x07
    3dea:	8c 81       	ldd	r24, Y+4	; 0x04
    3dec:	9d 81       	ldd	r25, Y+5	; 0x05
    3dee:	28 17       	cp	r18, r24
    3df0:	39 07       	cpc	r19, r25
    3df2:	64 f4       	brge	.+24     	; 0x3e0c <fputc+0x3c>
    3df4:	e8 81       	ld	r30, Y
    3df6:	f9 81       	ldd	r31, Y+1	; 0x01
    3df8:	01 93       	st	Z+, r16
    3dfa:	f9 83       	std	Y+1, r31	; 0x01
    3dfc:	e8 83       	st	Y, r30
    3dfe:	06 c0       	rjmp	.+12     	; 0x3e0c <fputc+0x3c>
    3e00:	e8 85       	ldd	r30, Y+8	; 0x08
    3e02:	f9 85       	ldd	r31, Y+9	; 0x09
    3e04:	80 2f       	mov	r24, r16
    3e06:	09 95       	icall
    3e08:	89 2b       	or	r24, r25
    3e0a:	31 f4       	brne	.+12     	; 0x3e18 <fputc+0x48>
    3e0c:	8e 81       	ldd	r24, Y+6	; 0x06
    3e0e:	9f 81       	ldd	r25, Y+7	; 0x07
    3e10:	01 96       	adiw	r24, 0x01	; 1
    3e12:	9f 83       	std	Y+7, r25	; 0x07
    3e14:	8e 83       	std	Y+6, r24	; 0x06
    3e16:	02 c0       	rjmp	.+4      	; 0x3e1c <fputc+0x4c>
    3e18:	0f ef       	ldi	r16, 0xFF	; 255
    3e1a:	1f ef       	ldi	r17, 0xFF	; 255
    3e1c:	c8 01       	movw	r24, r16
    3e1e:	df 91       	pop	r29
    3e20:	cf 91       	pop	r28
    3e22:	1f 91       	pop	r17
    3e24:	0f 91       	pop	r16
    3e26:	08 95       	ret

00003e28 <__ultoa_invert>:
    3e28:	fa 01       	movw	r30, r20
    3e2a:	aa 27       	eor	r26, r26
    3e2c:	28 30       	cpi	r18, 0x08	; 8
    3e2e:	51 f1       	breq	.+84     	; 0x3e84 <__ultoa_invert+0x5c>
    3e30:	20 31       	cpi	r18, 0x10	; 16
    3e32:	81 f1       	breq	.+96     	; 0x3e94 <__ultoa_invert+0x6c>
    3e34:	e8 94       	clt
    3e36:	6f 93       	push	r22
    3e38:	6e 7f       	andi	r22, 0xFE	; 254
    3e3a:	6e 5f       	subi	r22, 0xFE	; 254
    3e3c:	7f 4f       	sbci	r23, 0xFF	; 255
    3e3e:	8f 4f       	sbci	r24, 0xFF	; 255
    3e40:	9f 4f       	sbci	r25, 0xFF	; 255
    3e42:	af 4f       	sbci	r26, 0xFF	; 255
    3e44:	b1 e0       	ldi	r27, 0x01	; 1
    3e46:	3e d0       	rcall	.+124    	; 0x3ec4 <__ultoa_invert+0x9c>
    3e48:	b4 e0       	ldi	r27, 0x04	; 4
    3e4a:	3c d0       	rcall	.+120    	; 0x3ec4 <__ultoa_invert+0x9c>
    3e4c:	67 0f       	add	r22, r23
    3e4e:	78 1f       	adc	r23, r24
    3e50:	89 1f       	adc	r24, r25
    3e52:	9a 1f       	adc	r25, r26
    3e54:	a1 1d       	adc	r26, r1
    3e56:	68 0f       	add	r22, r24
    3e58:	79 1f       	adc	r23, r25
    3e5a:	8a 1f       	adc	r24, r26
    3e5c:	91 1d       	adc	r25, r1
    3e5e:	a1 1d       	adc	r26, r1
    3e60:	6a 0f       	add	r22, r26
    3e62:	71 1d       	adc	r23, r1
    3e64:	81 1d       	adc	r24, r1
    3e66:	91 1d       	adc	r25, r1
    3e68:	a1 1d       	adc	r26, r1
    3e6a:	20 d0       	rcall	.+64     	; 0x3eac <__ultoa_invert+0x84>
    3e6c:	09 f4       	brne	.+2      	; 0x3e70 <__ultoa_invert+0x48>
    3e6e:	68 94       	set
    3e70:	3f 91       	pop	r19
    3e72:	2a e0       	ldi	r18, 0x0A	; 10
    3e74:	26 9f       	mul	r18, r22
    3e76:	11 24       	eor	r1, r1
    3e78:	30 19       	sub	r19, r0
    3e7a:	30 5d       	subi	r19, 0xD0	; 208
    3e7c:	31 93       	st	Z+, r19
    3e7e:	de f6       	brtc	.-74     	; 0x3e36 <__ultoa_invert+0xe>
    3e80:	cf 01       	movw	r24, r30
    3e82:	08 95       	ret
    3e84:	46 2f       	mov	r20, r22
    3e86:	47 70       	andi	r20, 0x07	; 7
    3e88:	40 5d       	subi	r20, 0xD0	; 208
    3e8a:	41 93       	st	Z+, r20
    3e8c:	b3 e0       	ldi	r27, 0x03	; 3
    3e8e:	0f d0       	rcall	.+30     	; 0x3eae <__ultoa_invert+0x86>
    3e90:	c9 f7       	brne	.-14     	; 0x3e84 <__ultoa_invert+0x5c>
    3e92:	f6 cf       	rjmp	.-20     	; 0x3e80 <__ultoa_invert+0x58>
    3e94:	46 2f       	mov	r20, r22
    3e96:	4f 70       	andi	r20, 0x0F	; 15
    3e98:	40 5d       	subi	r20, 0xD0	; 208
    3e9a:	4a 33       	cpi	r20, 0x3A	; 58
    3e9c:	18 f0       	brcs	.+6      	; 0x3ea4 <__ultoa_invert+0x7c>
    3e9e:	49 5d       	subi	r20, 0xD9	; 217
    3ea0:	31 fd       	sbrc	r19, 1
    3ea2:	40 52       	subi	r20, 0x20	; 32
    3ea4:	41 93       	st	Z+, r20
    3ea6:	02 d0       	rcall	.+4      	; 0x3eac <__ultoa_invert+0x84>
    3ea8:	a9 f7       	brne	.-22     	; 0x3e94 <__ultoa_invert+0x6c>
    3eaa:	ea cf       	rjmp	.-44     	; 0x3e80 <__ultoa_invert+0x58>
    3eac:	b4 e0       	ldi	r27, 0x04	; 4
    3eae:	a6 95       	lsr	r26
    3eb0:	97 95       	ror	r25
    3eb2:	87 95       	ror	r24
    3eb4:	77 95       	ror	r23
    3eb6:	67 95       	ror	r22
    3eb8:	ba 95       	dec	r27
    3eba:	c9 f7       	brne	.-14     	; 0x3eae <__ultoa_invert+0x86>
    3ebc:	00 97       	sbiw	r24, 0x00	; 0
    3ebe:	61 05       	cpc	r22, r1
    3ec0:	71 05       	cpc	r23, r1
    3ec2:	08 95       	ret
    3ec4:	9b 01       	movw	r18, r22
    3ec6:	ac 01       	movw	r20, r24
    3ec8:	0a 2e       	mov	r0, r26
    3eca:	06 94       	lsr	r0
    3ecc:	57 95       	ror	r21
    3ece:	47 95       	ror	r20
    3ed0:	37 95       	ror	r19
    3ed2:	27 95       	ror	r18
    3ed4:	ba 95       	dec	r27
    3ed6:	c9 f7       	brne	.-14     	; 0x3eca <__ultoa_invert+0xa2>
    3ed8:	62 0f       	add	r22, r18
    3eda:	73 1f       	adc	r23, r19
    3edc:	84 1f       	adc	r24, r20
    3ede:	95 1f       	adc	r25, r21
    3ee0:	a0 1d       	adc	r26, r0
    3ee2:	08 95       	ret

00003ee4 <strrev>:
    3ee4:	dc 01       	movw	r26, r24
    3ee6:	fc 01       	movw	r30, r24
    3ee8:	67 2f       	mov	r22, r23
    3eea:	71 91       	ld	r23, Z+
    3eec:	77 23       	and	r23, r23
    3eee:	e1 f7       	brne	.-8      	; 0x3ee8 <strrev+0x4>
    3ef0:	32 97       	sbiw	r30, 0x02	; 2
    3ef2:	04 c0       	rjmp	.+8      	; 0x3efc <strrev+0x18>
    3ef4:	7c 91       	ld	r23, X
    3ef6:	6d 93       	st	X+, r22
    3ef8:	70 83       	st	Z, r23
    3efa:	62 91       	ld	r22, -Z
    3efc:	ae 17       	cp	r26, r30
    3efe:	bf 07       	cpc	r27, r31
    3f00:	c8 f3       	brcs	.-14     	; 0x3ef4 <strrev+0x10>
    3f02:	08 95       	ret

00003f04 <__mulsi3>:
    3f04:	62 9f       	mul	r22, r18
    3f06:	d0 01       	movw	r26, r0
    3f08:	73 9f       	mul	r23, r19
    3f0a:	f0 01       	movw	r30, r0
    3f0c:	82 9f       	mul	r24, r18
    3f0e:	e0 0d       	add	r30, r0
    3f10:	f1 1d       	adc	r31, r1
    3f12:	64 9f       	mul	r22, r20
    3f14:	e0 0d       	add	r30, r0
    3f16:	f1 1d       	adc	r31, r1
    3f18:	92 9f       	mul	r25, r18
    3f1a:	f0 0d       	add	r31, r0
    3f1c:	83 9f       	mul	r24, r19
    3f1e:	f0 0d       	add	r31, r0
    3f20:	74 9f       	mul	r23, r20
    3f22:	f0 0d       	add	r31, r0
    3f24:	65 9f       	mul	r22, r21
    3f26:	f0 0d       	add	r31, r0
    3f28:	99 27       	eor	r25, r25
    3f2a:	72 9f       	mul	r23, r18
    3f2c:	b0 0d       	add	r27, r0
    3f2e:	e1 1d       	adc	r30, r1
    3f30:	f9 1f       	adc	r31, r25
    3f32:	63 9f       	mul	r22, r19
    3f34:	b0 0d       	add	r27, r0
    3f36:	e1 1d       	adc	r30, r1
    3f38:	f9 1f       	adc	r31, r25
    3f3a:	bd 01       	movw	r22, r26
    3f3c:	cf 01       	movw	r24, r30
    3f3e:	11 24       	eor	r1, r1
    3f40:	08 95       	ret

00003f42 <__udivmodhi4>:
    3f42:	aa 1b       	sub	r26, r26
    3f44:	bb 1b       	sub	r27, r27
    3f46:	51 e1       	ldi	r21, 0x11	; 17
    3f48:	07 c0       	rjmp	.+14     	; 0x3f58 <__udivmodhi4_ep>

00003f4a <__udivmodhi4_loop>:
    3f4a:	aa 1f       	adc	r26, r26
    3f4c:	bb 1f       	adc	r27, r27
    3f4e:	a6 17       	cp	r26, r22
    3f50:	b7 07       	cpc	r27, r23
    3f52:	10 f0       	brcs	.+4      	; 0x3f58 <__udivmodhi4_ep>
    3f54:	a6 1b       	sub	r26, r22
    3f56:	b7 0b       	sbc	r27, r23

00003f58 <__udivmodhi4_ep>:
    3f58:	88 1f       	adc	r24, r24
    3f5a:	99 1f       	adc	r25, r25
    3f5c:	5a 95       	dec	r21
    3f5e:	a9 f7       	brne	.-22     	; 0x3f4a <__udivmodhi4_loop>
    3f60:	80 95       	com	r24
    3f62:	90 95       	com	r25
    3f64:	bc 01       	movw	r22, r24
    3f66:	cd 01       	movw	r24, r26
    3f68:	08 95       	ret

00003f6a <__divmodhi4>:
    3f6a:	97 fb       	bst	r25, 7
    3f6c:	09 2e       	mov	r0, r25
    3f6e:	07 26       	eor	r0, r23
    3f70:	0a d0       	rcall	.+20     	; 0x3f86 <__divmodhi4_neg1>
    3f72:	77 fd       	sbrc	r23, 7
    3f74:	04 d0       	rcall	.+8      	; 0x3f7e <__divmodhi4_neg2>
    3f76:	e5 df       	rcall	.-54     	; 0x3f42 <__udivmodhi4>
    3f78:	06 d0       	rcall	.+12     	; 0x3f86 <__divmodhi4_neg1>
    3f7a:	00 20       	and	r0, r0
    3f7c:	1a f4       	brpl	.+6      	; 0x3f84 <__divmodhi4_exit>

00003f7e <__divmodhi4_neg2>:
    3f7e:	70 95       	com	r23
    3f80:	61 95       	neg	r22
    3f82:	7f 4f       	sbci	r23, 0xFF	; 255

00003f84 <__divmodhi4_exit>:
    3f84:	08 95       	ret

00003f86 <__divmodhi4_neg1>:
    3f86:	f6 f7       	brtc	.-4      	; 0x3f84 <__divmodhi4_exit>
    3f88:	90 95       	com	r25
    3f8a:	81 95       	neg	r24
    3f8c:	9f 4f       	sbci	r25, 0xFF	; 255
    3f8e:	08 95       	ret

00003f90 <__udivmodsi4>:
    3f90:	a1 e2       	ldi	r26, 0x21	; 33
    3f92:	1a 2e       	mov	r1, r26
    3f94:	aa 1b       	sub	r26, r26
    3f96:	bb 1b       	sub	r27, r27
    3f98:	fd 01       	movw	r30, r26
    3f9a:	0d c0       	rjmp	.+26     	; 0x3fb6 <__udivmodsi4_ep>

00003f9c <__udivmodsi4_loop>:
    3f9c:	aa 1f       	adc	r26, r26
    3f9e:	bb 1f       	adc	r27, r27
    3fa0:	ee 1f       	adc	r30, r30
    3fa2:	ff 1f       	adc	r31, r31
    3fa4:	a2 17       	cp	r26, r18
    3fa6:	b3 07       	cpc	r27, r19
    3fa8:	e4 07       	cpc	r30, r20
    3faa:	f5 07       	cpc	r31, r21
    3fac:	20 f0       	brcs	.+8      	; 0x3fb6 <__udivmodsi4_ep>
    3fae:	a2 1b       	sub	r26, r18
    3fb0:	b3 0b       	sbc	r27, r19
    3fb2:	e4 0b       	sbc	r30, r20
    3fb4:	f5 0b       	sbc	r31, r21

00003fb6 <__udivmodsi4_ep>:
    3fb6:	66 1f       	adc	r22, r22
    3fb8:	77 1f       	adc	r23, r23
    3fba:	88 1f       	adc	r24, r24
    3fbc:	99 1f       	adc	r25, r25
    3fbe:	1a 94       	dec	r1
    3fc0:	69 f7       	brne	.-38     	; 0x3f9c <__udivmodsi4_loop>
    3fc2:	60 95       	com	r22
    3fc4:	70 95       	com	r23
    3fc6:	80 95       	com	r24
    3fc8:	90 95       	com	r25
    3fca:	9b 01       	movw	r18, r22
    3fcc:	ac 01       	movw	r20, r24
    3fce:	bd 01       	movw	r22, r26
    3fd0:	cf 01       	movw	r24, r30
    3fd2:	08 95       	ret

00003fd4 <__divmodsi4>:
    3fd4:	97 fb       	bst	r25, 7
    3fd6:	09 2e       	mov	r0, r25
    3fd8:	05 26       	eor	r0, r21
    3fda:	0e d0       	rcall	.+28     	; 0x3ff8 <__divmodsi4_neg1>
    3fdc:	57 fd       	sbrc	r21, 7
    3fde:	04 d0       	rcall	.+8      	; 0x3fe8 <__divmodsi4_neg2>
    3fe0:	d7 df       	rcall	.-82     	; 0x3f90 <__udivmodsi4>
    3fe2:	0a d0       	rcall	.+20     	; 0x3ff8 <__divmodsi4_neg1>
    3fe4:	00 1c       	adc	r0, r0
    3fe6:	38 f4       	brcc	.+14     	; 0x3ff6 <__divmodsi4_exit>

00003fe8 <__divmodsi4_neg2>:
    3fe8:	50 95       	com	r21
    3fea:	40 95       	com	r20
    3fec:	30 95       	com	r19
    3fee:	21 95       	neg	r18
    3ff0:	3f 4f       	sbci	r19, 0xFF	; 255
    3ff2:	4f 4f       	sbci	r20, 0xFF	; 255
    3ff4:	5f 4f       	sbci	r21, 0xFF	; 255

00003ff6 <__divmodsi4_exit>:
    3ff6:	08 95       	ret

00003ff8 <__divmodsi4_neg1>:
    3ff8:	f6 f7       	brtc	.-4      	; 0x3ff6 <__divmodsi4_exit>
    3ffa:	90 95       	com	r25
    3ffc:	80 95       	com	r24
    3ffe:	70 95       	com	r23
    4000:	61 95       	neg	r22
    4002:	7f 4f       	sbci	r23, 0xFF	; 255
    4004:	8f 4f       	sbci	r24, 0xFF	; 255
    4006:	9f 4f       	sbci	r25, 0xFF	; 255
    4008:	08 95       	ret

0000400a <__prologue_saves__>:
    400a:	2f 92       	push	r2
    400c:	3f 92       	push	r3
    400e:	4f 92       	push	r4
    4010:	5f 92       	push	r5
    4012:	6f 92       	push	r6
    4014:	7f 92       	push	r7
    4016:	8f 92       	push	r8
    4018:	9f 92       	push	r9
    401a:	af 92       	push	r10
    401c:	bf 92       	push	r11
    401e:	cf 92       	push	r12
    4020:	df 92       	push	r13
    4022:	ef 92       	push	r14
    4024:	ff 92       	push	r15
    4026:	0f 93       	push	r16
    4028:	1f 93       	push	r17
    402a:	cf 93       	push	r28
    402c:	df 93       	push	r29
    402e:	cd b7       	in	r28, 0x3d	; 61
    4030:	de b7       	in	r29, 0x3e	; 62
    4032:	ca 1b       	sub	r28, r26
    4034:	db 0b       	sbc	r29, r27
    4036:	0f b6       	in	r0, 0x3f	; 63
    4038:	f8 94       	cli
    403a:	de bf       	out	0x3e, r29	; 62
    403c:	0f be       	out	0x3f, r0	; 63
    403e:	cd bf       	out	0x3d, r28	; 61
    4040:	09 94       	ijmp

00004042 <__epilogue_restores__>:
    4042:	2a 88       	ldd	r2, Y+18	; 0x12
    4044:	39 88       	ldd	r3, Y+17	; 0x11
    4046:	48 88       	ldd	r4, Y+16	; 0x10
    4048:	5f 84       	ldd	r5, Y+15	; 0x0f
    404a:	6e 84       	ldd	r6, Y+14	; 0x0e
    404c:	7d 84       	ldd	r7, Y+13	; 0x0d
    404e:	8c 84       	ldd	r8, Y+12	; 0x0c
    4050:	9b 84       	ldd	r9, Y+11	; 0x0b
    4052:	aa 84       	ldd	r10, Y+10	; 0x0a
    4054:	b9 84       	ldd	r11, Y+9	; 0x09
    4056:	c8 84       	ldd	r12, Y+8	; 0x08
    4058:	df 80       	ldd	r13, Y+7	; 0x07
    405a:	ee 80       	ldd	r14, Y+6	; 0x06
    405c:	fd 80       	ldd	r15, Y+5	; 0x05
    405e:	0c 81       	ldd	r16, Y+4	; 0x04
    4060:	1b 81       	ldd	r17, Y+3	; 0x03
    4062:	aa 81       	ldd	r26, Y+2	; 0x02
    4064:	b9 81       	ldd	r27, Y+1	; 0x01
    4066:	ce 0f       	add	r28, r30
    4068:	d1 1d       	adc	r29, r1
    406a:	0f b6       	in	r0, 0x3f	; 63
    406c:	f8 94       	cli
    406e:	de bf       	out	0x3e, r29	; 62
    4070:	0f be       	out	0x3f, r0	; 63
    4072:	cd bf       	out	0x3d, r28	; 61
    4074:	ed 01       	movw	r28, r26
    4076:	08 95       	ret

00004078 <__tablejump2__>:
    4078:	ee 0f       	add	r30, r30
    407a:	ff 1f       	adc	r31, r31

0000407c <__tablejump__>:
    407c:	05 90       	lpm	r0, Z+
    407e:	f4 91       	lpm	r31, Z+
    4080:	e0 2d       	mov	r30, r0
    4082:	09 94       	ijmp

00004084 <__do_global_dtors>:
    4084:	14 e0       	ldi	r17, 0x04	; 4
    4086:	ce ec       	ldi	r28, 0xCE	; 206
    4088:	d4 e0       	ldi	r29, 0x04	; 4
    408a:	04 c0       	rjmp	.+8      	; 0x4094 <.do_global_dtors_start>

0000408c <.do_global_dtors_loop>:
    408c:	fe 01       	movw	r30, r28
    408e:	0e 94 3e 20 	call	0x407c	; 0x407c <__tablejump__>
    4092:	22 96       	adiw	r28, 0x02	; 2

00004094 <.do_global_dtors_start>:
    4094:	c0 3d       	cpi	r28, 0xD0	; 208
    4096:	d1 07       	cpc	r29, r17
    4098:	c9 f7       	brne	.-14     	; 0x408c <.do_global_dtors_loop>
    409a:	f8 94       	cli

0000409c <__stop_program>:
    409c:	ff cf       	rjmp	.-2      	; 0x409c <__stop_program>
